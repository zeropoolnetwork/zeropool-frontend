{"version":3,"sources":["assets/images/logo1.svg","assets/logo.svg","assets/images/guy_wellcomes@2x.png","serviceWorker.ts","shared/helpers/toast.helper.tsx","shared/models/provider.ts","register/state/models/register-stage.ts","shared/loading-bar/state/loading-bar.actions.ts","shared/http/http.ts","shared/loading-bar/state/loading-bar.selectors.ts","shared/loading-bar/containers/loading-bar/loading-bar.component.tsx","shared/helpers/test/test-id-builder.helper.ts","shared/components/AboutPage/AboutPage.tsx","shared/util/timeout.ts","register/state/register.actions.ts","register/state/helpers/stage.helper.ts","wallet/state/models/wallet-view.ts","register/state/register.reducer.ts","register/state/helpers/seed.helper.ts","wallet/state/wallet.actions.ts","register/state/register.selectors.ts","register/state/register.epics.ts","state-migrations.ts","shared/util/from.ts","shared/helpers/test/app-state.helper.ts","shared/util/round-number.ts","wallet/state/helpers/amounts.helper.ts","wallet/state/helpers/navigation.helper.ts","wallet/state/helpers/wallets.helper.ts","wallet/state/wallet.reducer.ts","wallet/state/wallet.selectors.ts","shared/operators/get-http-data.operator.ts","state.ts","wallet/api/rates.api.ts","wallet/state/wallet.epics.ts","wallet/state/helpers/map-rates-to-tokens.ts","shared/operators/filter-actions.operator.ts","wallet/api/zeropool.api.ts","shared/loading-bar/state/loading-bar.reducer.ts","register/components/SeedTag/SeedTag.tsx","shared/util/shuffle.ts","register/components/SeedPanel/SeedPanel.tsx","register/components/StepOne/StepOne.tsx","register/components/StepTwo/StepTwo.tsx","register/components/Welcome/Welcome.tsx","register/components/StepFour/StepFour.tsx","register/components/StepThree/StepThree.tsx","register/components/StepHeader/StepHeader.tsx","register/components/ImportAccount/ImportAccount.tsx","register/containers/CreateAccount/CreateAccountPage.tsx","shared/components/HelpPage/HelpPage.tsx","shared/util/css-mod.ts","shared/util/cap-first-letter.ts","shared/components/RoundButton/RoundButton.tsx","shared/components/Icon/Icon.tsx","wallet/components/WalletHeader/WalletHeaderMode.tsx","wallet/components/ExpandButton/ExpandButton.tsx","wallet/components/WalletRow/WalletRow.tsx","wallet/components/EditWallet/EditWallet.tsx","wallet/components/DeleteWallet/DeleteWallet.tsx","wallet/components/Wallets/Wallets.tsx","wallet/components/SendConfirmation/SendConfirmation.tsx","wallet/components/WalletHeader/WalletHeader.tsx","shared/hooks/use-navigate-back.ts","wallet/state/helpers/total.helper.ts","wallet/components/TokenRow/TokenRow.tsx","wallet/components/Balance/Balance.tsx","wallet/components/Receive/Receive.tsx","shared/helpers/validators/eth.validator.ts","shared/helpers/addres.helper.ts","wallet/components/Send/Send.tsx","wallet/containers/WalletPage/WalletPage.tsx","theme.ts","index.tsx","shared/http/interceptors/loading-bar.interceptor.ts","shared/http/interceptors/auth.interceptor.ts"],"names":["module","exports","Boolean","window","location","hostname","match","useSnackbarRef","Provider","InnerSnackbarUtilsConfigurator","props","setUseSnackbarRef","useSnackbar","useSnackbarRefProp","SnackbarUtilsConfigurator","success","msg","options","this","toast","variant","warning","info","error","enqueueSnackbar","RegisterStage","loadingBarActions","addRequest","create","removeRequest","instance","http","axios","getActiveRequestCount","createSelector","state","shared","loadingBar","requestsInProgress","showLoadingBar","activeRequests","css","cn","LoadingBar","useSelector","className","testIdBuilder","baseName","names","reduce","prev","curr","test","AboutPage","showBackButton","dispatch","useDispatch","data-testid","src","logo","alt","Button","color","onClick","push","timeout","delay","Promise","res","setTimeout","registerActions","stepBack","startRegisterAccount","generateSeed","submitSeed","confirmSeed","finishRegister","startImportAccount","finishImportAccount","WalletView","initialRegisterState","stage","undefined","seed","seedConfirmed","showSteps","registerReducer","createReducer","handleAction","actions","IMPORT","STEP1","Number","includes","STEP2","getPreviousStage","generateMnemonic","split","STEP3","STEP4","password","walletActions","openBalanceView","openWalletsView","openAddressView","openReceiveView","openSendInitialView","openSendConfirmView","getRates","getRatesSuccess","headerBack","menu","edit","send","setSeed","setSeedSuccess","setSeedError","addWallet","hideWallet","resetAccount","getRegisterState","register","getRegisterStage","getRegisterSeed","getShowSteps","registerEpics","combineEpics","action$","state$","pipe","filter","isActionOf","map","action","payload","join","withLatestFrom","stateMigrations","0","newState","recordFromArray","array","id","obj","item","_testToken","symbol","name","_testAddress","value","private","_testWalletsEth","account","amount","address","_testWalletsNear","About","round","number","decimals","result","toFixed","parseInt","parseFloat","roundNumber","amountsHelper","tokens","wallets","amounts","token","accu","next","wallet","navigationHelper","activeView","Send","activeToken","Wallets","activeWallet","SendConfirmation","Receive","Balance","supportedTokens","walletsHelper","_wallet","first","length","initialWalletState","supportedTokensRecord","usdRates","ETH","NEAR","WAVES","walletReducer","Reset","Address","activeAddress","getWalletState","getActiveView","getActiveToken","getActiveWallet","getAmounts","getWallets","getSupportedTokens","getSupportedTokensRecord","getUsdRates","getSendData","getSeed","history","RatesApi","proxy","cors","Marketcap","of","ratesMock","walletEpics","switchMapTo","status","rates","ratesMap","quote","USD","price","mapRatesToTokens","data","actionCreators","isOneAction","argument","filterActions","mapTo","switchMap","coins","HDWallet","devConfig","initHDWallet","CoinType","ethereum","near","e","message","loadingBarReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","epicMiddleware","createEpicMiddleware","rootEpic","createBrowserHistory","persistConfig","key","version","storage","migrate","createMigrate","debug","whitelist","persistedReducer","persistReducer","combineReducers","router","connectRouter","store","createStore","applyMiddleware","routerMiddleware","persistedStore","persistStore","run","SeedTag","text","hidden","hideNumber","Placeholder","sort","Math","random","SeedPanel","classes","check","onCheck","useState","confirmedSeed","setConfirmedSeed","setSuccess","shuffledSeed","setShuffledSeed","useEffect","same","JSON","stringify","bodyTagClickHandler","index","splice","footerTagClickHandler","Paper","tag","findIndex","str","StepOne","onGenerate","StepTwo","onSubmit","Welcome","onCreate","onImport","onAbout","onMockedLogin","guy","disableElevation","PasswordInputParams","required","pattern","minLength","StepFour","onRegister","useForm","criteriaMode","handleSubmit","reset","control","errors","showPassword","setShowPassword","setPassword","passwordConfirm","setPasswordConfirm","process","FormControl","InputLabel","htmlFor","Input","inputProps","inputRef","onChange","getValues","type","endAdornment","InputAdornment","position","IconButton","aria-label","confirm","onMouseDown","event","preventDefault","Close","Visibility","VisibilityOff","FormHelperText","validate","StepThree","onConfirm","buttonDisabled","setButtonDisabled","Disabled","disabled","StepHeader","step","total","onBack","Tooltip","title","placement","disableRipple","ArrowBack","MobileStepper","steps","activeStep","backButton","nextButton","seedInputParamsFactory","validateMnemonic","validateSeed","ImportAccount","input","CreateAccountPage","components","style","margin","HelpPage","cssMod","charAt","toUpperCase","slice","RoundButton","label","labelPosition","NoLabel","disableFocusRipple","disableTouchRipple","children","component","memo","forwardRef","ref","icon","spaceOn","displayName","WalletHeaderMode","Icon","ExpandButton","expanded","click","Expended","WalletRow","rate","rollUp","onReceiveClick","onSendClick","onEditClick","onRollUpClick","showButtons","setShowButtons","toBeOpened","setToBeOpened","Expanded","Hidden","EditWallet","walletName","onRename","onDelete","onCancel","newName","setNewName","TextField","target","DeleteWallet","confirmName","setConfirmName","handlers","rollUpSignal","setRollUpSignal","openEditDialog","setOpenEditDialog","openDeleteDialog","setOpenDeleteDialog","selectedWallet","setSelectedWallet","onReceive","onSend","onAdd","Dialog","onClose","open","fullWidth","maxWidth","DialogContent","dividers","Error","onConfirmClick","noValidate","autoComplete","WalletHeader","mode","tokenAmount","tokenSymbol","fiatValue","hideBackButton","tokenName","onBackClick","callback","isInitialMount","useRef","current","addEventListener","pushState","document","URL","useNavigateBack","Info","displayType","thousandSeparator","suffix","decimalScale","totalHelper","hasOwnProperty","TokenRow","onSelectToken","tokensRecord","QRCode","require","navigator","clipboard","writeText","then","err","isChecksumAddress","addressHash","shaObj","jsSHA","encoding","replace","update","toLowerCase","getHash","i","validateAddress","isEthereumAddress","onNextClick","setAddress","setAmount","handleAddressPaste","a","readText","prefix","useStyles","makeStyles","theme","root","backgroundColor","flexGrow","flexDirection","display","height","minWidth","menuButton","marginRight","spacing","toolbar","alignItems","paddingTop","minHeight","paddingBottom","toolbarHeader","borderBottom","palette","grey","width","toolbarHeaderItems","justifyContent","toolbarBody","alignSelf","drower","drowerItem","paddingRight","drowerItemIcon","drowerItemText","wrapper","footer","bottom","WalletPage","setState","view","handleExportSeed","toggleDrawer","walletsButtonHandlers","walletHeaderMode","Help","walletHeaderLabels","AppBar","Toolbar","edge","Badge","badgeContent","Object","values","SwipeableDrawer","onOpen","role","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","createMuiTheme","disabledBackground","main","typography","overrides","MuiAppBar","colorPrimary","MuiButton","fontSize","fontFamily","outlinedPrimary","border","containedPrimary","MuiLinearProgress","MuiDialog","MuiInputLabel","MuiInput","colorSecondary","underline","borderBottomColor","ReactDOM","render","ThemeProvider","maxSnack","anchorOrigin","vertical","horizontal","StrictMode","loading","persistor","path","exact","to","getElementById","interceptors","request","use","context","noLoadingBar","loadingBarRequestInterceptor","provider","authHeaders","providers","authHeader","authValue","headers","response","config","loadingBarResponseInterceptor","loadingBarErrorResponseInterceptor","serviceWorker","ready","registration","unregister","catch","console","start"],"mappings":"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","file":"static/js/main.a5af8f16.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo1.8d914255.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.38e575e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/guy_wellcomes@2x.a8f3ca1a.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport { useSnackbar, WithSnackbarProps } from 'notistack'\r\n\r\ninterface IProps {\r\n  setUseSnackbarRef: (showSnackbar: WithSnackbarProps) => void\r\n}\r\n\r\ntype OptionsObject = {\r\n  [key: string]: string\r\n}\r\n\r\nconst InnerSnackbarUtilsConfigurator: React.FC<IProps> = (props: IProps) => {\r\n  props.setUseSnackbarRef(useSnackbar())\r\n  return null\r\n}\r\n\r\nlet useSnackbarRef: WithSnackbarProps\r\nconst setUseSnackbarRef = (useSnackbarRefProp: WithSnackbarProps) => {\r\n  useSnackbarRef = useSnackbarRefProp\r\n}\r\n\r\nexport const SnackbarUtilsConfigurator = () => {\r\n  return <InnerSnackbarUtilsConfigurator setUseSnackbarRef={setUseSnackbarRef} />\r\n}\r\n\r\nexport default {\r\n  success(msg: string, options: OptionsObject = {}) {\r\n    this.toast(msg, { ...options, variant: 'success' })\r\n  },\r\n  warning(msg: string, options: OptionsObject = {}) {\r\n    this.toast(msg, { ...options, variant: 'warning' })\r\n  },\r\n  info(msg: string, options: OptionsObject = {}) {\r\n    this.toast(msg, { ...options, variant: 'info' })\r\n  },\r\n  error(msg: string, options: OptionsObject = {}) {\r\n    this.toast(msg, { ...options, variant: 'error' })\r\n  },\r\n  toast(msg: string, options: OptionsObject = {}) {\r\n    useSnackbarRef.enqueueSnackbar(msg, options)\r\n  }\r\n}","export enum Provider {\r\n  Marketcap = 'Marketcap',\r\n}","export enum RegisterStage {\r\n  'STEP1' = 1,\r\n  'STEP2',\r\n  'STEP3',\r\n  'STEP4',\r\n  'IMPORT',\r\n} ","import { createAction as create } from 'typesafe-actions';\r\n\r\nexport const loadingBarActions = {\r\n  addRequest: create('@loadingBar/addRequest')<void>(),\r\n  removeRequest: create('@loadingBar/removeRequest')<void>(),\r\n};\r\n","import { Store } from 'redux';\r\nimport axios, { Axios } from 'axios-observable';\r\nimport { AxiosRequestConfig } from 'axios';\r\n\r\nimport { authInterceptor } from 'shared/http/interceptors/auth.interceptor';\r\nimport { RootState } from 'state';\r\nimport { Provider } from 'shared/models/provider';\r\nimport {\r\n  loadingBarErrorResponseInterceptor,\r\n  loadingBarRequestInterceptor,\r\n  loadingBarResponseInterceptor,\r\n} from 'shared/http/interceptors/loading-bar.interceptor';\r\n\r\nlet instance: Axios | null = null;\r\n\r\nexport interface RequestConfig extends AxiosRequestConfig {\r\n  context?: {\r\n    noBasicHeaders?: boolean;\r\n    noLoadingBar?: boolean;\r\n    provider?: Provider;\r\n  };\r\n};\r\n\r\nexport const setupInterceptors = (\r\n  instance: Axios,\r\n  store: Store<RootState>,\r\n): void => {\r\n  instance.interceptors.request.use(loadingBarRequestInterceptor(store));\r\n  instance.interceptors.request.use(authInterceptor(store));\r\n\r\n  instance.interceptors.response.use(\r\n    loadingBarResponseInterceptor(store),\r\n    loadingBarErrorResponseInterceptor(store),\r\n  );\r\n};\r\n\r\nexport const http = (): Axios => {\r\n  if (!instance) {\r\n    instance = axios.create({});\r\n  }\r\n\r\n  return instance;\r\n};\r\n","import { createSelector } from 'reselect';\r\n\r\nimport { RootState } from 'state';\r\n\r\nconst getLoadingBarState = (state: RootState) => state.shared.loadingBar;\r\n\r\nconst getActiveRequestCount = createSelector(\r\n  getLoadingBarState,\r\n  state => state.requestsInProgress,\r\n);\r\n\r\nexport const showLoadingBar = createSelector(\r\n  getActiveRequestCount,\r\n  (activeRequests) => activeRequests > 0,\r\n);\r\n","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport './loading-bar.component.scss';\r\n\r\nimport { showLoadingBar } from 'shared/loading-bar/state/loading-bar.selectors';\r\n\r\nconst css = cn('LoadingBar');\r\n\r\nexport const LoadingBar: React.FC = () => {\r\n  const show = useSelector(showLoadingBar);\r\n\r\n  return show ? (\r\n    <>\r\n      <div className={css()}></div>\r\n      <div className={css('SpinnerContainer')}>\r\n        <div className={css('Spinner')}></div>\r\n      </div>\r\n    </>\r\n  ) : null;\r\n};\r\n","export const testIdBuilder = (baseName: string) => (...names: string[]) =>\r\n  names.reduce((prev, curr) => `${prev}-${curr}`, baseName);\r\n","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport { push } from 'connected-react-router';\r\nimport { Button } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport './AboutPage.scss';\r\nimport logo from 'assets/logo.svg';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\n\r\nexport const componentId = 'AboutPage';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\ninterface AboutPageProps {\r\n  showBackButton: boolean;\r\n}\r\n\r\nexport const AboutPage: React.FC<AboutPageProps> = ({ showBackButton = true }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={css()} data-testid=\"AboutPage\">\r\n      <img src={logo} className={css('Logo')} data-testid={test('Logo')} alt=\"logo\" />\r\n\r\n      <h1 className={css('Header')}> WHAT IS ZEROPOOL </h1>\r\n\r\n      <p className={css('Text')}>\r\n        ZeroPool is fully private multi-blokchain solution.\r\n        Low transaction fees, atomic swaps and common anonymity set.\r\n        Balances and transaction graph are hidden and compatibility\r\n        with network identity hiding technologies, like Tor.\r\n        You can deposit, transfer and withdraw tokens in our product.\r\n      </p>\r\n\r\n      <p className={css('Text')}>\r\n        The projec was found at ethDenver by a group of reserchers\r\n        and still developed as product with strong scientific base.\r\n      </p>\r\n\r\n      {showBackButton ?\r\n        <p className={css('Button')}>\r\n          <Button\r\n            color=\"primary\"\r\n            data-testid={test('BackButton')}\r\n             onClick={() => dispatch(push('/'))}\r\n            variant=\"contained\"\r\n          >\r\n            Back\r\n          </Button>\r\n        </p> : null}\r\n    </div>\r\n  )\r\n};\r\n","export const timeout = (delay: number) =>\r\n  new Promise( res => setTimeout(res, delay));\r\n","\r\nimport { createAction as create } from 'typesafe-actions';\r\n\r\nexport const registerActions = {\r\n  stepBack: create('@register/stepBack')<void>(),\r\n\r\n  startRegisterAccount: create('@register/startRegisterAccount')<void>(),\r\n  generateSeed: create('@register/generateSeed')<void>(),\r\n  submitSeed: create('@register/submitSeed')<void>(),\r\n  confirmSeed: create('@register/confirmSeed')<void>(),\r\n  finishRegister: create('@register/register')<string>(),\r\n\r\n  startImportAccount: create('@register/startImportAccount')<void>(),\r\n  finishImportAccount: create('@register/importAccount')<{ seed: string[], password: string }>(),\r\n};\r\n","import { RegisterStage } from \"register/state/models/register-stage\";\r\nimport { RegisterState } from \"../register.reducer\";\r\n\r\ninterface registerStageStateSlice {\r\n  stage: RegisterStage | undefined;\r\n  showSteps: boolean;\r\n  seed: string[];\r\n}\r\n\r\nexport const getPreviousStage = (state: RegisterState): registerStageStateSlice => {\r\n  if (state.stage === RegisterStage.IMPORT) {\r\n    return {\r\n      stage: undefined,\r\n      showSteps: false,\r\n      seed: [],\r\n    }\r\n  }\r\n\r\n  return {\r\n    stage: state.stage === RegisterStage.STEP1 ? undefined : Number(state.stage) - 1,\r\n    showSteps: [1, undefined].includes(state.stage) ? false : true,\r\n    seed: state.stage === RegisterStage.STEP2 ? [] : state.seed,\r\n  }\r\n} ","export enum WalletView {\r\n  Balance = 'Balance',\r\n  Wallets = 'Wallets',\r\n  Address = 'Address',\r\n  Send = 'Send',\r\n  SendConfirmation = 'SendConfirmation',\r\n  Receive = 'Receive',\r\n  Help = 'Help',\r\n  About = 'About',\r\n  Reset = 'Reset',\r\n}","import { ActionType, createReducer } from 'typesafe-actions';\r\n\r\nimport { registerActions as actions } from 'register/state/register.actions';\r\nimport { getPreviousStage } from 'register/state/helpers/stage.helper';\r\nimport { RegisterStage } from 'register/state/models/register-stage';\r\nimport { generateSeed } from 'register/state/helpers/seed.helper';\r\n\r\nexport interface RegisterState {\r\n  stage: RegisterStage | undefined;\r\n  seed: string[];\r\n  seedConfirmed: boolean;\r\n  showSteps: boolean;\r\n}\r\n\r\nexport const initialRegisterState: RegisterState = {\r\n  stage: undefined,\r\n  seed: [],\r\n  seedConfirmed: false,\r\n  showSteps: false,\r\n};\r\n\r\nexport const registerReducer = createReducer<\r\n  RegisterState,\r\n  ActionType<typeof actions>\r\n>(initialRegisterState)\r\n  .handleAction(actions.stepBack, state => ({\r\n    ...state,\r\n    ...getPreviousStage(state),\r\n  }))\r\n  .handleAction(actions.startRegisterAccount, state => ({\r\n    ...state,\r\n    showSteps: true,\r\n    stage: RegisterStage.STEP1,\r\n  }))\r\n  .handleAction(actions.generateSeed, state => ({\r\n    ...state,\r\n    seed: generateSeed(),\r\n    seedConfirmed: false,\r\n    stage: RegisterStage.STEP2,\r\n  }))\r\n  .handleAction(actions.submitSeed, state => ({\r\n    ...state,\r\n    seedConfirmed: false,\r\n    stage: RegisterStage.STEP3,\r\n  }))\r\n  .handleAction(actions.confirmSeed, state => ({\r\n    ...state,\r\n    seedConfirmed: true,\r\n    stage: RegisterStage.STEP4,\r\n  }))\r\n  .handleAction(actions.finishRegister, (state, password) => ({\r\n    ...state,\r\n    showSteps: false,\r\n    stage: undefined,\r\n  }))\r\n  .handleAction(actions.startImportAccount, state => ({\r\n    ...state,\r\n    showSteps: false,\r\n    stage: RegisterStage.IMPORT,\r\n  }))\r\n  .handleAction(actions.finishImportAccount, state => ({\r\n    ...state,\r\n    showSteps: false,\r\n    stage: undefined,\r\n  }));\r\n\r\n","import { generateMnemonic, validateMnemonic } from 'zeropool-api-js/lib/utils';\r\n\r\nexport const generateSeed = () => {\r\n  return generateMnemonic().split(' ');\r\n}\r\n\r\nexport const validateSeed = (seed: string[]): boolean => {\r\n  return validateMnemonic(seed.join(' '));\r\n}\r\n","import { createAction as create } from 'typesafe-actions';\r\n\r\nimport { Token } from 'shared/models/token';\r\n\r\nimport { WalletView } from 'wallet/state/models/wallet-view';\r\nimport { Wallet } from 'wallet/state/models/wallet';\r\n\r\nexport const walletActions = {\r\n  openBalanceView: create('@wallet/openBalanceView')<void>(),\r\n  openWalletsView: create('@wallet/openWalletsView')<Token>(),\r\n  openAddressView: create('@wallet/openAddressView')<Token>(),\r\n  openReceiveView: create('@wallet/openReceiveView')<Wallet>(),\r\n  openSendInitialView: create('@wallet/openSendInitialView')<Wallet>(),\r\n  openSendConfirmView: create('@wallet/openSendConfirmView')<{ wallet: Wallet, address: string, amount: number }>(),\r\n\r\n  getRates: create('@wallet/getRates')<void>(),\r\n  getRatesSuccess: create('@wallet/getRatesSuccess')<Record<Token['name'], number>>(),\r\n\r\n  headerBack: create('@wallet/header/back')<void>(),\r\n\r\n  menu: create('@wallet/menu')<WalletView>(),\r\n  edit: create('@wallet/edit')<{wallet: Wallet, name: string}>(),\r\n  send: create('@wallet/send')<void>(),\r\n\r\n  setSeed: create('@wallet/setSeed')<{ seed: string }>(),\r\n  setSeedSuccess: create('@wallet/setSeedSuccess')<{ seed: string}>(),\r\n  setSeedError: create('@wallet/setSeedError')<void>(),\r\n\r\n  addWallet: create('@wallet/addWallet')<void>(),\r\n  hideWallet: create('@wallet/hideWallet')<{ wallet: Wallet }>(),\r\n  \r\n  resetAccount: create('@wallet/resetAccount')<void>(),\r\n};\r\n","import { createSelector } from \"reselect\";\r\n\r\nimport { RootState } from \"state\";\r\n\r\nexport const getRegisterState = (state: RootState) => state.register;\r\n\r\nexport const getRegisterStage = createSelector(\r\n  getRegisterState,\r\n  state => state.stage,\r\n);\r\n\r\nexport const getRegisterSeed = createSelector(\r\n  getRegisterState,\r\n  state => state.seed,\r\n);\r\n\r\nexport const getRegisterSeedConfirmed = createSelector(\r\n  getRegisterState,\r\n  state => state.seedConfirmed,\r\n);\r\n\r\nexport const getShowSteps = createSelector(\r\n  getRegisterState,\r\n  state => state.showSteps,\r\n);","import { Observable } from \"rxjs\";\r\nimport { Epic, combineEpics } from \"redux-observable\";\r\nimport { ActionType, isActionOf } from 'typesafe-actions';\r\nimport { withLatestFrom, filter, map } from 'rxjs/operators';\r\n\r\nimport { walletActions } from \"wallet/state/wallet.actions\";\r\nimport { registerActions } from \"register/state/register.actions\";\r\nimport { getRegisterSeed } from \"register/state/register.selectors\";\r\n\r\nimport { RootState } from \"state\";\r\n\r\ntype Actions = ActionType<typeof registerActions>;\r\n\r\nconst finishImportAccount$: Epic = (\r\n  action$: Observable<Actions>,\r\n  state$: Observable<RootState>,\r\n) =>\r\n  action$.pipe(\r\n    filter(isActionOf(registerActions.finishImportAccount)),\r\n    map(action => {\r\n      const seed = action.payload.seed.join(' ');\r\n      return walletActions.setSeed({seed});\r\n    }),\r\n  );\r\n\r\nconst finishRegister$: Epic = (\r\n  action$: Observable<Actions>,\r\n  state$: Observable<RootState>,\r\n) =>\r\n  action$.pipe(\r\n    filter(isActionOf(registerActions.finishRegister)),\r\n    withLatestFrom(state$.pipe(map(getRegisterSeed))),\r\n    map(([_action, seed]) => {\r\n      return walletActions.setSeed({ seed: seed.join(' ')});\r\n    }),\r\n  );\r\n\r\nexport const registerEpics: Epic = combineEpics(\r\n  finishImportAccount$,\r\n  finishRegister$,\r\n)","import { RootState } from \"state\";\r\n\r\n// @todo check maybe it is possible to get rid of any.\r\nexport const stateMigrations = {\r\n  0: (state: any): any => {\r\n    const newState: RootState = {\r\n      ...state,\r\n    };\r\n\r\n    return {\r\n      ...newState,\r\n    };\r\n  },\r\n};\r\n","export const recordFromArray = <T>(array: T[], id: string = 'id'): Record<string, T> =>\r\n  array.reduce((obj, item) => { obj[item[id]] = item; return obj }, {});\r\n","import { RegisterState } from \"register/state/register.reducer\";\r\nimport { WalletState } from \"wallet/state/wallet.reducer\";\r\nimport { Token } from \"shared/models/token\";\r\nimport { WalletView } from \"wallet/state/models/wallet-view\";\r\nimport { Address } from \"shared/models/address\";\r\n\r\nconst _testToken: Token = { id: 1, symbol: 'ETH', name: 'testName' };\r\n\r\nexport const _testAddress: Address = { symbol: 'ETH', value: 'x123333', private: false };\r\n\r\nexport const _testWalletsEth = [\r\n  { account: 0, name: 'WalletEth1', amount: 0, address: _testAddress },\r\n  { account: 0, name: 'WalletEth2', amount: 1.3425, address: { ..._testAddress, value: 'x123222' } },\r\n  { account: 0, name: 'WalletEth3', amount: 1, address: { ..._testAddress, value: 'x123111', private: true } },\r\n]\r\n\r\nexport const _testWalletsNear = [\r\n  { account: 0, name: 'WalletNear1', amount: 22.3, address: { symbol: 'NEAR', value: 'x123222', private: false } },\r\n  { account: 0, name: 'WalletNear2', amount: 11, address: { symbol: 'NEAR', value: 'x123111', private: true } },\r\n]\r\nexport const mockAppState: {\r\n  register: Partial<RegisterState>,\r\n  account: Partial<WalletState>,\r\n} = {\r\n  register: {\r\n    stage: undefined,\r\n  },\r\n  account: {\r\n    amounts: { testToken: 1 },\r\n    activeView: WalletView.About,\r\n    activeToken: _testToken,\r\n    supportedTokens: [_testToken],\r\n    supportedTokensRecord: { [_testToken.symbol]: _testToken },\r\n    usdRates: { ETH: 111 },\r\n    wallets: {\r\n      ETH: _testWalletsEth,\r\n      NEAR: _testWalletsNear,\r\n      WAVES: [],\r\n    },\r\n  }\r\n};\r\n","export const roundNumber = (number: number, decimals: number) => {\r\n  const result = Number(number+'').toFixed(parseInt(decimals+''));\r\n  \r\n  return parseFloat(result); \r\n}\r\n\r\nexport const round = (number: number) => roundNumber(number, 12);","import { Token } from \"shared/models/token\";\r\nimport { round } from \"shared/util/round-number\";\r\n\r\nimport { Wallet } from \"wallet/state/models/wallet\";\r\n\r\nexport const amountsHelper = {\r\n  getAmountsForAllTakens: (tokens: Token[], wallets: Record<Token['symbol'], Wallet[]>): Record<Token['symbol'], number> => {\r\n    const amounts: Record<Token['symbol'], number> = {};\r\n    \r\n    for (let token of tokens) {\r\n      amounts[token.symbol] = 0;\r\n    }\r\n    \r\n    for (let token of tokens) {\r\n      let amount = 0;\r\n      for (let wallet of wallets[token.symbol]) {\r\n        amount += wallet.amount;   \r\n      }\r\n\r\n      amounts[token.symbol] = round(amount);\r\n    };\r\n\r\n    return amounts;\r\n  },\r\n\r\n  getAmountsForToken: (token: Token, wallets: Wallet[]): Record<Token['symbol'], number> => ({\r\n    [token.symbol]: round(wallets.reduce((accu, next) => accu += next.amount, 0)),\r\n  }),\r\n\r\n  getAmountsForWallet: (token: Token, wallet: Wallet): Record<Token['symbol'], number> => ({\r\n    [token.symbol]: wallet.amount,\r\n  }),\r\n};\r\n","import { WalletView } from \"wallet/state/models/wallet-view\";\r\nimport { Wallet } from \"../models/wallet\";\r\nimport { WalletState } from \"../wallet.reducer\";\r\nimport { amountsHelper } from \"./amounts.helper\";\r\n\r\nexport const navigationHelper = {\r\n  handleBackClick: (state: WalletState): WalletState => {\r\n\r\n    switch (state.activeView) {\r\n      case WalletView.Send:\r\n        return state.activeToken && state.wallets ? {\r\n          ...state,\r\n          activeView: WalletView.Wallets,\r\n          activeWallet: null,\r\n          amounts: amountsHelper.getAmountsForToken(state.activeToken, state.wallets[state.activeToken.symbol]),\r\n        } : state;\r\n\r\n      case WalletView.SendConfirmation:\r\n        return state.activeToken && state.activeWallet ? {\r\n          ...state,\r\n          activeView: WalletView.Send,\r\n          amounts: amountsHelper.getAmountsForWallet(state.activeToken, state.activeWallet),\r\n        } : state;\r\n\r\n      case WalletView.Receive: \r\n        return state.activeToken && state.wallets ? {\r\n          ...state,\r\n          activeView: WalletView.Wallets,\r\n          activeWallet: null,\r\n          amounts: amountsHelper.getAmountsForToken(state.activeToken, state.wallets[state.activeToken.symbol]),\r\n        } : state;\r\n\r\n      default:\r\n        return {\r\n          ...state,\r\n          activeView: WalletView.Balance,\r\n          activeToken: null,\r\n          activeWallet: null,\r\n          amounts: amountsHelper.getAmountsForAllTakens(state.supportedTokens, state.wallets),\r\n        };\r\n    }\r\n  },\r\n\r\n  getReceiveView: (state: WalletState, wallet: Wallet) => ( \r\n    state.activeToken ? {\r\n      ...state,\r\n      activeView: WalletView.Receive,\r\n      activeWallet: wallet,\r\n      amounts: amountsHelper.getAmountsForWallet(state.activeToken, wallet),\r\n    } : state\r\n  ),\r\n\r\n  getSendInitialView: (state: WalletState, wallet: Wallet) => ( \r\n    state.activeToken ? {\r\n      ...state,\r\n      activeView: WalletView.Send,\r\n      activeWallet: wallet,\r\n      amounts: amountsHelper.getAmountsForWallet(state.activeToken, wallet),\r\n    } : state\r\n  ),\r\n\r\n  getBalanceView: (state: WalletState) => ({\r\n    ...state,\r\n    activeToken: null,\r\n    activeView: WalletView.Balance,\r\n    activeWallet: null,\r\n    amounts: amountsHelper.getAmountsForAllTakens(state.supportedTokens, state.wallets),\r\n  }),\r\n\r\n};\r\n","import { Wallet } from \"wallet/state/models/wallet\";\r\n\r\nexport const walletsHelper = {\r\n  renameWallet: (wallets: Wallet[], wallet: Wallet, name: string): Wallet[] => {\r\n    const result: Wallet[] = [];\r\n\r\n    for (const _wallet of wallets) {\r\n      if (_wallet === wallet) {\r\n        result.push({\r\n          ..._wallet,\r\n          name,\r\n        })\r\n      } else {\r\n        result.push(_wallet);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  },\r\n\r\n  hideWallet: (wallets: Wallet[], wallet: Wallet) => {\r\n    const result: Wallet[] = [];\r\n\r\n    for (const _wallet of wallets) {\r\n      if (_wallet !== wallet) {\r\n        result.push(_wallet)\r\n      }\r\n    }\r\n\r\n    return result;\r\n  },\r\n\r\n  addWallet: (wallets: Wallet[]): Wallet[] => {\r\n    const first: Wallet = wallets[0];\r\n\r\n    return [\r\n      ...wallets,\r\n      {\r\n        ...first,\r\n        name: `Wallet${first.address.symbol}${wallets.length}`,\r\n        amount: 0,\r\n        address: {\r\n          ...first.address,\r\n          value: first.address.value + wallets.length,\r\n        }\r\n      }\r\n    ];\r\n  },\r\n};\r\n","import { ActionType, createReducer } from 'typesafe-actions';\r\n// import { CoinType } from 'zeropool-api-js';\r\n\r\nimport supportedTokens from 'assets/settings/supported-tokens.json'\r\n\r\nimport { Token } from 'shared/models/token';\r\nimport { recordFromArray } from 'shared/util/from';\r\nimport { _testWalletsEth, _testWalletsNear } from 'shared/helpers/test/app-state.helper';\r\n\r\nimport { walletActions as actions } from 'wallet/state/wallet.actions';\r\nimport { navigationHelper } from 'wallet/state/helpers/navigation.helper';\r\nimport { walletsHelper } from 'wallet/state/helpers/wallets.helper';\r\nimport { WalletView } from 'wallet/state/models/wallet-view';\r\nimport { Wallet } from 'wallet/state/models/wallet';\r\n\r\nexport const initialWalletName = 'Main wallet';\r\n\r\n// const _testAmounts = { 'ETH': 2.3425, 'NEAR': 15 };\r\n\r\nexport interface WalletState {\r\n  activeView: WalletView;\r\n  activeToken: Token | null;\r\n  activeWallet: Wallet | null;\r\n  amounts: Record<Token['symbol'], number>;\r\n  send?: { wallet: Wallet, address: string, amount: number };\r\n  supportedTokens: Token[];\r\n  supportedTokensRecord: Record<Token['symbol'], Token>;\r\n  usdRates: Record<Token['symbol'], number>;\r\n  wallets: Record<Token['symbol'], Wallet[]>;\r\n  seed: string | null;\r\n}\r\n\r\nexport const initialWalletState: WalletState = {\r\n  activeView: WalletView.Balance,\r\n  activeToken: null,\r\n  activeWallet: null,\r\n  amounts: {},\r\n  supportedTokens: supportedTokens,\r\n  supportedTokensRecord: recordFromArray(supportedTokens, 'symbol'),\r\n  usdRates: {},\r\n  wallets: {\r\n    ETH: _testWalletsEth,\r\n    NEAR: _testWalletsNear,\r\n    WAVES: [],\r\n  },\r\n  seed: null,\r\n};\r\n\r\nexport const walletReducer = createReducer<\r\n  WalletState,\r\n  ActionType<typeof actions>\r\n>(initialWalletState)\r\n  .handleAction(actions.menu, (state, { payload }) => ({\r\n    ...state,\r\n    activeView: payload !== WalletView.Reset ? payload : state.activeView,\r\n  }))\r\n  .handleAction(actions.headerBack, state => ({\r\n    ...navigationHelper.handleBackClick(state),\r\n  }))\r\n  .handleAction(actions.openBalanceView, state => ({\r\n    ...navigationHelper.getBalanceView(state),\r\n  }))\r\n  .handleAction(actions.openWalletsView, (state, { payload }) => ({\r\n    ...state,\r\n    activeView: WalletView.Wallets,\r\n    activeToken: payload,\r\n  }))\r\n  .handleAction(actions.openAddressView, (state, { payload }) => ({\r\n    ...state,\r\n    activeView: WalletView.Address,\r\n    activeAddress: payload,\r\n  }))\r\n  .handleAction(actions.openReceiveView, (state, { payload }) => ({\r\n    ...navigationHelper.getReceiveView(state, payload),\r\n  }))\r\n  .handleAction(actions.openSendInitialView, (state, { payload }) => ({\r\n    ...navigationHelper.getSendInitialView(state, payload),\r\n  }))\r\n  .handleAction(actions.openSendConfirmView, (state, { payload }) => ({\r\n    ...state,\r\n    activeView: WalletView.SendConfirmation,\r\n    activeWallet: payload.wallet,\r\n    send: {\r\n      wallet: payload.wallet,\r\n      address: payload.address,\r\n      amount: payload.amount,\r\n    }\r\n  }))\r\n  .handleAction(actions.setSeedSuccess, (state, { payload }) => ({\r\n    ...state,\r\n    seed: payload.seed,\r\n  }))\r\n  .handleAction(actions.resetAccount, () =>\r\n    initialWalletState\r\n  )\r\n  .handleAction(actions.edit, (state , { payload }) => ({\r\n    ...state,\r\n    wallets: !state.activeToken ? state.wallets : {\r\n      ...state.wallets,\r\n      [state.activeToken.symbol]: walletsHelper.renameWallet(\r\n        state.wallets[state.activeToken.symbol], \r\n        payload.wallet,\r\n        payload.name,\r\n      ),\r\n    }\r\n  }))\r\n  .handleAction(actions.addWallet, state => ({\r\n    ...state,\r\n    wallets: !state.activeToken ? state.wallets : {\r\n      ...state.wallets,\r\n      [state.activeToken.symbol]: walletsHelper.addWallet(state.wallets[state.activeToken.symbol]),\r\n    }\r\n  }))\r\n  .handleAction(actions.hideWallet, (state , { payload }) => ({\r\n    ...state,\r\n    wallets: !state.activeToken ? state.wallets : {\r\n      ...state.wallets,\r\n      [state.activeToken.symbol]: walletsHelper.hideWallet(\r\n        state.wallets[state.activeToken.symbol],\r\n        payload.wallet,\r\n      ),\r\n    }\r\n  }))\r\n  .handleAction(actions.getRatesSuccess, (state, { payload }) => ({\r\n    ...state,\r\n    usdRates: payload,\r\n  }));\r\n ","import { createSelector } from \"reselect\";\r\n\r\nimport { RootState } from \"state\";\r\n\r\nimport { WalletState } from \"wallet/state/wallet.reducer\";\r\n\r\nexport const getWalletState = (state: RootState): WalletState => state.account;\r\n\r\nexport const getActiveView = createSelector(\r\n  getWalletState,\r\n  state => state.activeView,\r\n);\r\n\r\nexport const getActiveToken = createSelector(\r\n  getWalletState,\r\n  state => state.activeToken,\r\n);\r\n\r\nexport const getActiveWallet = createSelector(\r\n  getWalletState,\r\n  state => state.activeWallet,\r\n);\r\n\r\nexport const getAmounts = createSelector(\r\n  getWalletState,\r\n  state => state.amounts,\r\n);\r\n\r\nexport const getWallets = createSelector(\r\n  getWalletState,\r\n  state => state.activeToken ? state.wallets[state.activeToken.symbol] : null,\r\n);\r\n\r\nexport const getSupportedTokens = createSelector(\r\n  getWalletState,\r\n  state => state.supportedTokens,\r\n);\r\n\r\nexport const getSupportedTokensRecord = createSelector(\r\n  getWalletState,\r\n  state => state.supportedTokensRecord,\r\n);\r\n\r\nexport const getUsdRates = createSelector(\r\n  getWalletState,\r\n  state => state.usdRates,\r\n);\r\n\r\nexport const getSendData = createSelector(\r\n  getWalletState,\r\n  state => state.send,\r\n);\r\n\r\nexport const getSeed = createSelector(\r\n  getWalletState,\r\n  state => state.seed,\r\n);","import { map } from 'rxjs/operators';\r\n\r\nimport { AxiosResponse } from 'axios';\r\n\r\nexport const getHTTPData = <T>() =>\r\n  map((response: AxiosResponse<T>) => response.data);\r\n","import storage from 'redux-persist/lib/storage';\r\nimport { PersistConfig } from 'redux-persist/es/types';\r\nimport { createBrowserHistory, History } from 'history';\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\r\nimport { combineEpics, createEpicMiddleware } from 'redux-observable';\r\nimport { persistStore, persistReducer, createMigrate } from 'redux-persist';\r\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\n\r\nimport { registerReducer } from 'register/state/register.reducer';\r\nimport { registerEpics } from 'register/state/register.epics';\r\n\r\nimport { stateMigrations } from 'state-migrations';\r\nimport { walletReducer } from 'wallet/state/wallet.reducer';\r\nimport { walletEpics } from 'wallet/state/wallet.epics';\r\nimport { loadingBarReducer } from 'shared/loading-bar/state/loading-bar.reducer';\r\n\r\n//#region Setup Devtools \r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: <R>(a: R) => R;\r\n  }\r\n}\r\n\r\nconst devToolsCompose = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\n\r\nconst composeEnhancers = devToolsCompose || compose;\r\n//#endregion\r\n\r\n//#region Setup Epics\r\nconst epicMiddleware = createEpicMiddleware();\r\n\r\nconst rootEpic = combineEpics(\r\n  registerEpics,\r\n  walletEpics,\r\n  // alertsEpics,\r\n  // notificationsEpics,\r\n);\r\n//#endregion \r\n\r\n//#region Setup Reducers\r\nexport type RootState = NonNullable<\r\n  Parameters<ReturnType<typeof createRootReducer>>[0]\r\n>;\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nexport const createRootReducer = (history: History) =>\r\n  combineReducers({\r\n    register: registerReducer,\r\n    account: walletReducer,\r\n    router: connectRouter(history),\r\n    shared: combineReducers({\r\n      loadingBar: loadingBarReducer,\r\n      //   // alerts: alertsReducer,\r\n      //   // notifications: notificationsReducer,\r\n      //   // menuBar: menuBarReducer,\r\n    })\r\n  });\r\n//#endregion\r\n\r\n//#region Setup Persisted Store\r\nconst persistConfig: PersistConfig<RootState> = {\r\n  key: 'root',\r\n  version: 0,\r\n  storage,\r\n  migrate: createMigrate(stateMigrations, { debug: false }),\r\n  whitelist: ['register', 'account'],\r\n};\r\n\r\nconst persistedReducer = persistReducer(\r\n  persistConfig,\r\n  createRootReducer(history),\r\n);\r\n\r\nexport const store = createStore(\r\n  persistedReducer,\r\n  composeEnhancers(applyMiddleware(epicMiddleware, routerMiddleware(history))),\r\n);\r\n\r\nexport const persistedStore = persistStore(store);\r\n//#endregion\r\n\r\nepicMiddleware.run(rootEpic);","import { of } from 'rxjs';\r\n\r\nimport { http, RequestConfig } from 'shared/http/http';\r\nimport { getHTTPData } from 'shared/operators/get-http-data.operator';\r\nimport { Provider } from 'shared/models/provider';\r\nimport { Token } from 'shared/models/token';\r\nimport { Rate } from 'shared/models/rate';\r\n\r\nimport ratesMock from 'assets/mocks/rates.mock.json';\r\nimport proxy from 'assets/settings/proxy.json';\r\n\r\nconst useMock = true;\r\n\r\nexport const RatesApi = {\r\n\r\n  getRates() {\r\n    const url = proxy.cors + `https://pro-api.coinmarketcap.com/v1/cryptocurrency/listings/latest`;\r\n    const config: RequestConfig = {\r\n      params: {\r\n      },\r\n      context: {\r\n        noLoadingBar: true,\r\n        provider: Provider.Marketcap,\r\n      },\r\n    };\r\n\r\n    if (useMock) {\r\n      return of(ratesMock);\r\n    }\r\n\r\n    return http()\r\n      .get<{ status: any, data: Rate<Token>[] }>(url, config)\r\n      .pipe(getHTTPData());\r\n  },\r\n};\r\n","import { push } from 'connected-react-router';\r\nimport { CoinType } from 'zeropool-api-js';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Epic, combineEpics } from 'redux-observable';\r\nimport { ActionType, isActionOf } from 'typesafe-actions';\r\nimport { switchMapTo, map, withLatestFrom, mapTo, filter, switchMap } from 'rxjs/operators';\r\n\r\nimport { filterActions } from 'shared/operators/filter-actions.operator';\r\nimport toast from 'shared/helpers/toast.helper';\r\n\r\nimport { getSupportedTokens } from 'wallet/state/wallet.selectors';\r\nimport { mapRatesToTokens } from 'wallet/state/helpers/map-rates-to-tokens';\r\nimport { walletActions } from 'wallet/state/wallet.actions';\r\nimport { initHDWallet } from 'wallet/api/zeropool.api';\r\nimport { RatesApi } from 'wallet/api/rates.api';\r\n\r\nimport { RootState } from 'state';\r\nimport { WalletView } from './models/wallet-view';\r\n\r\ntype Actions = ActionType<typeof walletActions>;\r\n\r\nconst openBalance$: Epic = (\r\n  action$: Observable<Actions>,\r\n  state$: Observable<RootState>,\r\n) =>\r\n  action$.pipe(\r\n    filterActions(walletActions.openBalanceView),\r\n    mapTo(walletActions.getRates()),\r\n  )\r\n\r\nconst getRates$: Epic = (\r\n  action$: Observable<Actions>,\r\n  state$: Observable<RootState>,\r\n) =>\r\n  action$.pipe(\r\n    filter(isActionOf(walletActions.getRates)),\r\n    switchMapTo(RatesApi.getRates().pipe(\r\n      withLatestFrom(state$.pipe(map(getSupportedTokens))),\r\n      map(([{ status, data }, tokens]) => mapRatesToTokens(data, tokens)),\r\n      map(data => walletActions.getRatesSuccess(data))\r\n    )),\r\n  );\r\n\r\nconst initHDWallet$: Epic = (\r\n  action$: Observable<Actions>,\r\n  state$: Observable<RootState>,\r\n) =>\r\n  action$.pipe(\r\n    filter(isActionOf(walletActions.setSeed)),\r\n    switchMap(action => {\r\n      try {\r\n        const seed = action.payload.seed;\r\n        initHDWallet(seed, { [CoinType.ethereum]: [0], [CoinType.near]: [0] });\r\n        toast.success('Seed accepted');\r\n\r\n        return of(push('/wallet'), walletActions.setSeedSuccess({seed}));\r\n      } catch (e) {\r\n        toast.error(e.message);\r\n        \r\n        return of(walletActions.setSeedError());\r\n      }\r\n    }),\r\n  );\r\n\r\n  const resetAccount$: Epic = (\r\n    action$: Observable<Actions>,\r\n    state$: Observable<RootState>,\r\n  ) =>\r\n    action$.pipe(\r\n      filter(isActionOf(walletActions.menu)),\r\n      filter(action => action.payload === WalletView.Reset),\r\n      switchMap(action => {\r\n          toast.success('Wallet reseted and data cleared');\r\n          \r\n          return of(push('/welcome'), walletActions.resetAccount());\r\n      }),\r\n    );\r\n\r\nexport const walletEpics: Epic = combineEpics(\r\n  getRates$,\r\n  openBalance$,\r\n  initHDWallet$,\r\n  resetAccount$,\r\n)\r\n","import { Rate } from \"shared/models/rate\";\r\nimport { Token } from \"shared/models/token\";\r\nimport { recordFromArray } from \"shared/util/from\";\r\n\r\nexport const mapRatesToTokens =\r\n  (rates: Rate<Token>[], tokens: Token[]): Record<Token['symbol'], number> => {\r\n    const result: Record<Token['symbol'], number> = {};\r\n    const ratesMap = recordFromArray(rates, 'symbol');\r\n\r\n    for (const token of tokens) {\r\n      if (ratesMap[token.symbol]) {\r\n        result[token.symbol] = ratesMap[token.symbol].quote.USD.price;\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }","import { pipe } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ActionCreator, isActionOf } from 'typesafe-actions';\r\n\r\n/**\r\n * @todo check this operator, because it swallow\r\n * action payload type when used for single action\r\n */\r\nexport const filterActions = <T extends string>(\r\n  ...actionCreators: ActionCreator<T>[]\r\n) => {\r\n  const isOneAction = actionCreators.length === 1;\r\n  const argument = isOneAction ? actionCreators[0] : actionCreators;\r\n  return pipe(filter(isActionOf(argument)));\r\n};\r\n","import { HDWallet, CoinType, devConfig } from 'zeropool-api-js';\r\n\r\nexport let hdWallet: HDWallet | null = null;\r\n\r\nexport function initHDWallet(seed: string, coins: { [key in CoinType]?: number[] }) {\r\n  hdWallet = new HDWallet(seed, devConfig, coins);\r\n}\r\n","import { ActionType, createReducer } from 'typesafe-actions';\r\n\r\nimport { loadingBarActions } from 'shared/loading-bar/state/loading-bar.actions';\r\n\r\nexport interface LoadingBarState {\r\n  requestsInProgress: number;\r\n}\r\n\r\nexport const initialState: LoadingBarState = {\r\n  requestsInProgress: 0,\r\n};\r\n\r\nexport const loadingBarReducer = createReducer<\r\n  LoadingBarState,\r\n  ActionType<typeof loadingBarActions>\r\n>(initialState)\r\n  .handleAction(\r\n    loadingBarActions.addRequest,\r\n    (state): LoadingBarState => ({\r\n      requestsInProgress: state.requestsInProgress + 1,\r\n    }),\r\n  )\r\n  .handleAction(\r\n    loadingBarActions.removeRequest,\r\n    (state): LoadingBarState => ({\r\n      requestsInProgress: state.requestsInProgress - 1,\r\n    }),\r\n  );\r\n","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\n\r\nimport './SeedTag.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\nimport { shuffleString } from 'shared/util/shuffle';\r\n\r\nexport const componentId = 'SeedTag';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport interface SeedTagProps {\r\n  text: string;\r\n  number: number;\r\n  hidden?: boolean;\r\n  hideNumber?: boolean;\r\n  onClick?: (number: number) => void;\r\n}\r\n\r\nexport const SeedTag: React.FC<SeedTagProps> = ({ text, number, hidden, hideNumber, onClick }) => {\r\n\r\n  const clickHandler = () => onClick && !hidden ? onClick(number) : null;\r\n\r\n  return (\r\n    <div className={css({ Placeholder: hidden })} data-testid={test()} onClick={clickHandler}>\r\n      { hidden || hideNumber ? null :\r\n        <div className={css('Number')}>\r\n          {number + 1}\r\n        </div>\r\n      }\r\n\r\n      <div className={css('Text')}>\r\n        {hidden ? shuffleString(text) : text}\r\n      </div>\r\n    </div>\r\n  )\r\n};","export const shuffleString = (str: string): string =>\r\n  str.split('').sort(() => 0.5 - Math.random()).join('');\r\n\r\nexport const shuffleArray = (arr: string[]): string[] =>\r\n  arr.sort(() => 0.5 - Math.random());","import { cn } from '@bem-react/classname';\r\nimport { Paper } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport './SeedPanel.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\nimport { shuffleArray } from 'shared/util/shuffle';\r\n\r\nimport { SeedTag } from 'register/components/SeedTag/SeedTag';\r\n\r\nexport const componentId = 'SeedPanel';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport interface SeedPanelProps {\r\n  classes?: string[];\r\n  seed: string[];\r\n  check?: boolean;\r\n  onCheck?: (checked: boolean) => void;\r\n}\r\n\r\nexport const SeedPanel: React.FC<SeedPanelProps> = ({ classes = [], seed, check, onCheck }) => {\r\n  const [confirmedSeed, setConfirmedSeed] = useState([] as string[]);\r\n  const [success, setSuccess] = useState(false);\r\n  const [shuffledSeed, setShuffledSeed] = useState([] as string[]);\r\n\r\n  useEffect(() => {\r\n    if (!shuffledSeed.length && check) {\r\n      setShuffledSeed(shuffleArray([...seed]))\r\n    }\r\n  }, [shuffledSeed.length, check, seed]);\r\n\r\n  useEffect(() => {\r\n    const same = JSON.stringify(seed) === JSON.stringify(confirmedSeed)\r\n    setSuccess(same);\r\n    if (onCheck) {\r\n      onCheck(same);\r\n    }\r\n  }, [success, confirmedSeed, seed, onCheck])\r\n\r\n  const bodyTagClickHandler = (index: number) => {\r\n    confirmedSeed.splice(index, 1);\r\n    setConfirmedSeed([...confirmedSeed]);\r\n    setSuccess(false);\r\n  };\r\n  const footerTagClickHandler = (index: number) => {\r\n    setConfirmedSeed([...confirmedSeed, seed[index]]);\r\n  };\r\n\r\n  return (\r\n    <Paper className={css('', classes)} data-testid={test()}>\r\n      <div className={css('Body')} data-testid={test('Body')}>\r\n        {check ?\r\n          confirmedSeed.map((tag: string, index: number) => (\r\n            <SeedTag text={tag} number={index} key={index} onClick={bodyTagClickHandler} />\r\n          ))\r\n          :\r\n          seed.map((tag: string, index: number) => (\r\n            <SeedTag text={tag} number={index} key={index} />\r\n          ))\r\n        }\r\n      </div>\r\n\r\n      <div className={css('Footer')} data-testid={test('Footer')}>\r\n        {check ?\r\n          shuffledSeed.map((tag: string, index: number) => (\r\n            <SeedTag\r\n              text={tag}\r\n              number={seed.findIndex(str => str === tag)}\r\n              hidden={confirmedSeed.includes(tag)}\r\n              hideNumber\r\n              key={seed.findIndex(str => str === tag)}\r\n              onClick={footerTagClickHandler}\r\n            />\r\n          )) : null}\r\n        {confirmedSeed.length === seed.length && !success ?\r\n          <div className={css('Warning')} data-testid={test('Warning')}>\r\n            The phrases do not match!\r\n          </div>\r\n          : null}\r\n      </div>\r\n    </Paper >\r\n  )\r\n};\r\n","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport './StepOne.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\n\r\nimport { SeedPanel } from 'register/components/SeedPanel/SeedPanel';\r\n\r\nexport const componentId = 'StepOne';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport interface StepOneProps {\r\n  onGenerate: () => void;\r\n}\r\n\r\nexport const StepOne: React.FC<StepOneProps> = ({ onGenerate }) => {\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      <section>\r\n        <SeedPanel classes={[css('SeedPanel')]} seed={[]} />\r\n\r\n        <p className={css('Description')}>\r\n          Your secret phrase consists of 12 words. Store it carefully.\r\n          If you loose it, you will loose access to all of your\r\n          associated wallets!\r\n       </p>\r\n      </section>\r\n\r\n      <Button\r\n        color=\"primary\"\r\n        className={css('Button')}\r\n        data-testid={test('GenerateButton')}\r\n        onClick={onGenerate}\r\n        variant=\"contained\"\r\n      >\r\n        Generate a secret phrase\r\n      </Button>\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport './StepTwo.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\n\r\nimport { SeedPanel } from 'register/components/SeedPanel/SeedPanel';\r\n\r\nexport const componentId = 'StepTwo';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\ninterface StepTwoProps {\r\n  seed: string[];\r\n  onSubmit: () => void;\r\n}\r\n\r\nexport const StepTwo: React.FC<StepTwoProps> = ({ seed, onSubmit }) => {\r\n\r\n  return (\r\n    <div className={css()} data-testid=\"StepTwo\">\r\n      <section>\r\n        <SeedPanel classes={[css('SeedPanel')]} seed={seed} />\r\n\r\n        <p className={css('Description')}>\r\n          By submiting, you confirm that you have stored the secret phrase\r\n          on paper or using another safe method.\r\n        </p>\r\n      </section>\r\n\r\n      <Button\r\n        color=\"primary\"\r\n        className={css('Button')}\r\n        data-testid={test('SubmitButton')}\r\n        onClick={onSubmit}\r\n        variant=\"contained\"\r\n      >\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  )\r\n};","import * as React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { cn } from '@bem-react/classname';\r\n\r\nimport './Welcome.scss';\r\nimport guy from 'assets/images/guy_wellcomes@2x.png';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\n\r\nexport const componentId = 'Welcome';\r\nexport interface WelcomeProps {\r\n  // TODO: remove onMockedLogin after API is connected\r\n  onMockedLogin: () => void;\r\n  onCreate: () => void;\r\n  onImport: () => void;\r\n  onAbout: () => void;\r\n}\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport const Welcome: React.FC<WelcomeProps> = ({ onCreate, onImport, onAbout, onMockedLogin }) => {\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      <section>\r\n        <img src={guy} className={css('Logo')} data-testid={test('Logo')} alt=\"logo\" onClick={onMockedLogin} />\r\n\r\n        <h1 className={css('Greeting')} data-testid={test('Greeting')} >\r\n          Welcome to ZeroPool\r\n        </h1>\r\n\r\n        <p className={css('Description')} data-testid={test('Description')}>\r\n          Please create a new wallet or import an existing one using a secret phrase\r\n        </p>\r\n      </section>\r\n\r\n      <Button\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        className={css('Button')}\r\n        data-testid={test('CreateButton')}\r\n        disableElevation\r\n        onClick={onCreate}\r\n      >\r\n        Create new wallet\r\n      </Button>\r\n\r\n      <Button\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        className={css('Button')}\r\n        data-testid={test('ImportButton')}\r\n        onClick={onImport}\r\n      >\r\n        Import existing\r\n      </Button>\r\n\r\n      <Button\r\n        color=\"primary\"\r\n        variant=\"outlined\"\r\n        className={css('Button')}\r\n        data-testid={test('AboutButton')}\r\n        onClick={onAbout}\r\n      >\r\n        About zeropool\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DevTool } from '@hookform/devtools';\r\n\r\nimport './StepFour.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\nimport { Button, FormControl, FormHelperText, IconButton, Input, InputAdornment, InputLabel } from '@material-ui/core';\r\nimport { Close, Visibility, VisibilityOff } from '@material-ui/icons';\r\nexport const componentId = 'StepFour';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nconst PasswordInputParams = {\r\n  required: \"Required\",\r\n  pattern: {\r\n    value: /^(?=.*?\\d)(?=.*?[a-zA-Z])[a-zA-Z\\d]+$/,\r\n    message: \"Use letters and numbers\"\r\n  },\r\n  minLength: {\r\n    value: 8,\r\n    message: \"Use at least 8 characters\"\r\n  }\r\n}\r\n\r\ninterface FormData {\r\n  password: string;\r\n  confirm: string;\r\n}\r\n\r\nexport interface StepFourProps {\r\n  onRegister: (data: { password: string }) => void;\r\n}\r\n\r\nexport const StepFour: React.FC<StepFourProps> = ({ onRegister }) => {\r\n  const { handleSubmit, register, reset, control, errors } = useForm<FormData>({ criteriaMode: \"all\" });\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [password, setPassword] = useState('');\r\n  const [passwordConfirm, setPasswordConfirm] = useState('');\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      {process.env.NODE_ENV !== 'production' && <DevTool control={control} />}\r\n      \r\n      <form onSubmit={handleSubmit(onRegister)} className={css('Form')}>\r\n        <FormControl className={css('FormControl')} error={!!errors['password']}>\r\n          <InputLabel className={css('FormControlLabel')} htmlFor=\"password\">Password</InputLabel>\r\n\r\n          <Input id=\"password\"\r\n            className={css('Password')}\r\n            inputProps={{ 'data-testid': test('Password') }}\r\n            inputRef={register(PasswordInputParams)}\r\n            name=\"password\"\r\n            onChange={() => setPassword(control.getValues()['password'])}\r\n            type={showPassword ? 'text' : 'password'}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                {password ?\r\n                  <IconButton\r\n                    className={css('FormControlButton')}\r\n                    aria-label=\"empty password\"\r\n                    onClick={() => { reset({ password: undefined, confirm: control.getValues()['confirm'] }); setPassword(''); }}\r\n                    onMouseDown={(event) => event.preventDefault()}\r\n                  >\r\n                    <Close />\r\n                  </IconButton> : null\r\n                }\r\n\r\n                <IconButton\r\n                  className={css('FormControlButton')}\r\n                  aria-label=\"toggle visibility\"\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                  onMouseDown={(event) => event.preventDefault()}\r\n                >\r\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n\r\n          {errors['password'] ?\r\n            <FormHelperText data-testid={test('PasswordError')}>{errors['password'].message}</FormHelperText>\r\n            : null\r\n          }\r\n        </FormControl>\r\n\r\n        <FormControl className={css('FormControl')} error={!!errors['confirm']}>\r\n          <InputLabel className={css('FormControlLabel')} htmlFor=\"confirm\">Confirm password</InputLabel>\r\n\r\n          <Input id=\"confirm\"\r\n            className={css('Password')}\r\n            inputProps={{ 'data-testid': test('Confirm') }}\r\n            inputRef={register({\r\n              validate: value => value === control.getValues()['password']\r\n            })}\r\n            name=\"confirm\"\r\n            onChange={() => setPasswordConfirm(control.getValues()['confirm'])}\r\n            type={showPassword ? 'text' : 'password'}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                {passwordConfirm ?\r\n                  <IconButton\r\n                    className={css('FormControlButton')}\r\n                    aria-label=\"empty confirmation\"\r\n                    onClick={() => { reset({ password: control.getValues()['password'], confirm: undefined }); setPasswordConfirm(''); }}\r\n                    onMouseDown={(event) => event.preventDefault()}\r\n                  >\r\n                    <Close />\r\n                  </IconButton> : null\r\n                }\r\n\r\n                <IconButton\r\n                  className={css('FormControlButton')}\r\n                  aria-label=\"toggle visibility\"\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                  onMouseDown={(event) => event.preventDefault()}\r\n                >\r\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n\r\n          {errors['confirm'] ?\r\n            <FormHelperText data-testid={test('PasswordConfirmError')}>\r\n              Passwords do not match\r\n            </FormHelperText> : null\r\n          }\r\n        </FormControl>\r\n\r\n        <p className={css('Description')}>\r\n          Finally, please choose a password to be used\r\n          to export your secret frase in the future.\r\n        </p>\r\n\r\n        <Button\r\n          color=\"primary\"\r\n          className={css('Button')}\r\n          data-testid={test('Submit')}\r\n          disableElevation\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n        >\r\n          Register\r\n        </Button>\r\n\r\n        {/* TODO: remove after testing */}\r\n        <Button\r\n          color=\"primary\"\r\n          className={css('Button')}\r\n          disableElevation\r\n          onClick={() => { reset({password: 'test1234', confirm: 'test1234'}); handleSubmit(onRegister) }}\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n        >\r\n          Testing: use 'test1234'\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n","import React, { useState } from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport './StepThree.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\n\r\nimport { SeedPanel } from 'register/components/SeedPanel/SeedPanel';\r\n\r\nexport const componentId = 'StepThree';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport interface StepThreeProps {\r\n  seed: string[];\r\n  onConfirm: () => void;\r\n}\r\nexport const StepThree: React.FC<StepThreeProps> = ({ seed, onConfirm }) => {\r\n  const [buttonDisabled, setButtonDisabled] = useState(true);\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      <section>\r\n        <SeedPanel classes={[css('SeedPanel')]} seed={seed} check onCheck={(success: boolean) => setButtonDisabled(!success)} />\r\n\r\n        <p className={css('Description')}>\r\n          Please confirm your secret phrase.\r\n          We want to be sure that you saved it correctly.\r\n        </p>\r\n      </section>\r\n\r\n      <Button\r\n        color=\"primary\"\r\n        className={css('Button', { Disabled: buttonDisabled })}\r\n        data-testid={test('ConfirmButton')}\r\n        disabled={buttonDisabled}\r\n        onClick={onConfirm}\r\n        variant=\"contained\"\r\n      >\r\n        Confirm\r\n      </Button>\r\n      \r\n      {/* TODO: remove after testing */}\r\n      <Button\r\n        color=\"primary\"\r\n        className={css('Button')}\r\n        disableElevation\r\n        onClick={onConfirm}\r\n        variant=\"contained\"\r\n      >\r\n        Testing: force confirm\r\n      </Button>\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport { ArrowBack } from '@material-ui/icons';\r\nimport { Button, MobileStepper, Tooltip } from '@material-ui/core';\r\n\r\nimport './StepHeader.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\n\r\nexport const componentId = 'StepHeader';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport interface StepHeaderProps {\r\n  step: number;\r\n  total: number;\r\n  onBack: () => void;\r\n}\r\n\r\nexport const StepHeader: React.FC<StepHeaderProps> = ({ step, total, onBack }) => {\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      <Tooltip title=\"Step back\" placement=\"top-end\">\r\n        <Button\r\n          className={css('Button')}\r\n          data-testid={test('BackButton')}\r\n          onClick={onBack}\r\n          disableRipple\r\n        >\r\n          <ArrowBack className={css('Icon')} />\r\n        </Button>\r\n      </Tooltip>\r\n\r\n      <p className={css('Text')} data-testid={test('Text')}>\r\n        Step {step} of {total}\r\n      </p>\r\n\r\n      <MobileStepper\r\n        className={css('Progress')}\r\n        variant=\"progress\"\r\n        steps={total + 1}\r\n        position=\"static\"\r\n        activeStep={step - 1}\r\n        backButton={<span className=\"hidden\">back</span>}\r\n        nextButton={<span className=\"hidden\">next</span>}\r\n      />\r\n    </div>\r\n  )\r\n};","import { cn } from '@bem-react/classname';\r\nimport { DevTool } from '@hookform/devtools';\r\nimport { useForm } from 'react-hook-form';\r\nimport React, { useState } from 'react';\r\nimport { Close, Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport { Button, FormControl, FormHelperText, IconButton, Input, InputAdornment, InputLabel } from '@material-ui/core';\r\n\r\nimport './ImportAccount.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\n\r\nimport { SeedPanel } from 'register/components/SeedPanel/SeedPanel';\r\nimport { validateSeed } from 'register/state/helpers/seed.helper';\r\n\r\nexport const componentId = 'ImportAccount';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nconst PasswordInputParams = {\r\n  required: \"Required\",\r\n  pattern: {\r\n    value: /^(?=.*?\\d)(?=.*?[a-zA-Z])[a-zA-Z\\d]+$/,\r\n    message: \"Use letters and numbers\"\r\n  },\r\n  minLength: {\r\n    value: 8,\r\n    message: \"Use at least 8 characters\"\r\n  }\r\n}\r\n\r\nconst seedInputParamsFactory = (seed: string[]): any => ({\r\n  required: \"Required\",\r\n  validate: (value: string[]) => validateSeed(seed)\r\n});\r\n\r\ninterface FormData {\r\n  seed: string;\r\n  password: string;\r\n  confirm: string;\r\n}\r\n\r\nexport interface ImportAccountProps {\r\n  onBack: () => void;\r\n  onImport: (data: { seed: string[], password: string }) => void;\r\n}\r\n\r\nexport const ImportAccount: React.FC<ImportAccountProps> = ({ onBack, onImport }) => {\r\n  const { handleSubmit, register, reset, control, errors } = useForm<FormData>({ criteriaMode: \"all\" });\r\n\r\n  const [seed, setSeed] = useState([] as string[]);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [password, setPassword] = useState('');\r\n  const [passwordConfirm, setPasswordConfirm] = useState('');\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      {process.env.NODE_ENV !== 'production' && <DevTool control={control} />}\r\n      <section>\r\n        <SeedPanel classes={[css('SeedPanel')]} seed={seed} />\r\n\r\n        <form onSubmit={handleSubmit((data: FormData) => onImport({ password: data.password, seed }))} className={css('Form')}>\r\n          <FormControl className={css('FormControl')} error={!!errors['seed']}>\r\n            <InputLabel color=\"secondary\" className={css('FormControlLabel')} htmlFor=\"seed\">Secret phrase</InputLabel>\r\n\r\n            <Input id=\"seed\"\r\n              className={css('Seed')}\r\n              color=\"secondary\"\r\n              classes={{input: css('SeedInput')}}\r\n              inputProps={{ 'data-testid': test('Seed') }}\r\n              inputRef={register(seedInputParamsFactory(seed)) as any}\r\n              name=\"seed\"\r\n              onChange={() => setSeed(control.getValues()['seed'].split(/[ ,.]+/).filter((str) => !!str))}\r\n              type={'text'}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  {seed.length ?\r\n                    <IconButton\r\n                      className={css('FormControlButton')}\r\n                      aria-label=\"empty seed\"\r\n                      onClick={() => { reset({ seed: undefined, password: control.getValues()['password'], confirm: control.getValues()['confirm'] }); setSeed([]); }}\r\n                      onMouseDown={(event) => event.preventDefault()}\r\n                    >\r\n                      <Close />\r\n                    </IconButton> : <span></span>\r\n                  }\r\n                </InputAdornment>\r\n              }\r\n            />\r\n\r\n            {errors['seed'] ?\r\n              <FormHelperText data-testid={test('SeedError')}>\r\n                {errors['seed'].message || 'Input 12 uniq words divided with comas or spaces'}\r\n              </FormHelperText> : null\r\n            }\r\n          </FormControl>\r\n\r\n          <FormControl className={css('FormControl')} error={!!errors['password']}>\r\n            <InputLabel className={css('FormControlLabel')} htmlFor=\"password\">Password</InputLabel>\r\n\r\n            <Input id=\"password\"\r\n              className={css('Password')}\r\n              color=\"secondary\"\r\n              classes={{input: css('PasswordInput')}}\r\n              inputProps={{ 'data-testid': test('Password') }}\r\n              inputRef={register(PasswordInputParams)}\r\n              name=\"password\"\r\n              onChange={() => setPassword(control.getValues()['password'])}\r\n              type={showPassword ? 'text' : 'password'}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  {password ?\r\n                    <IconButton\r\n                      className={css('FormControlButton')}\r\n                      aria-label=\"empty password\"\r\n                      onClick={() => { reset({ seed: control.getValues()['seed'], password: undefined, confirm: control.getValues()['confirm'] }); setPassword(''); }}\r\n                      onMouseDown={(event) => event.preventDefault()}\r\n                    >\r\n                      <Close />\r\n                    </IconButton> : <span></span>\r\n                  }\r\n\r\n                  <IconButton\r\n                    className={css('FormControlButton')}\r\n                    aria-label=\"toggle visibility\"\r\n                    onClick={() => setShowPassword(!showPassword)}\r\n                    onMouseDown={(event) => event.preventDefault()}\r\n                  >\r\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n\r\n            {errors['password'] ?\r\n              <FormHelperText data-testid={test('PasswordError')}>\r\n                {errors['password'].message}\r\n              </FormHelperText> : null\r\n            }\r\n          </FormControl>\r\n\r\n          <FormControl className={css('FormControl')} error={!!errors['confirm']}>\r\n            <InputLabel className={css('FormControlLabel')} htmlFor=\"confirm\">Confirm password</InputLabel>\r\n\r\n            <Input id=\"confirm\"\r\n              className={css('Password')}\r\n              color=\"secondary\"\r\n              classes={{input: css('PasswordInput')}}\r\n              inputProps={{'data-testid': test('Confirm')}}\r\n              inputRef={register({\r\n                validate: value => value === control.getValues()['password']\r\n              })}\r\n              name=\"confirm\"\r\n              onChange={() => setPasswordConfirm(control.getValues()['confirm'])}\r\n              type={showPassword ? 'text' : 'password'}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  {passwordConfirm ?\r\n                    <IconButton\r\n                      className={css('FormControlButton')}\r\n                      aria-label=\"empty confirmation\"\r\n                      onClick={() => { reset({ seed: control.getValues()['seed'], password: control.getValues()['password'], confirm: undefined }); setPasswordConfirm(''); }}\r\n                      onMouseDown={(event) => event.preventDefault()}\r\n                    >\r\n                      <Close />\r\n                    </IconButton> : <span></span>\r\n                  }\r\n\r\n                  <IconButton\r\n                    className={css('FormControlButton')}\r\n                    aria-label=\"toggle visibility\"\r\n                    onClick={() => setShowPassword(!showPassword)}\r\n                    onMouseDown={(event) => event.preventDefault()}\r\n                  >\r\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n\r\n            {errors['confirm'] ?\r\n              <FormHelperText data-testid={test('PasswordConfirmError')}>\r\n                Passwords do not match\r\n              </FormHelperText> : null\r\n            }\r\n          </FormControl>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            className={css('Button')}\r\n            data-testid={test('Import')}\r\n            disableElevation\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n          >\r\n            Import\r\n          </Button>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            className={css('Button')}\r\n            data-testid={test('Back')}\r\n            disableElevation\r\n            onClick={onBack}\r\n            variant=\"outlined\"\r\n          >\r\n            Back\r\n          </Button>\r\n        </form>\r\n      </section>\r\n    </div >\r\n  )\r\n};","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport { push } from 'connected-react-router';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport logo from 'assets/images/logo1.svg';\r\n\r\nimport './CreateAccountPage.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\n\r\nimport { StepOne } from 'register/components/StepOne/StepOne';\r\nimport { StepTwo } from 'register/components/StepTwo/StepTwo';\r\nimport { Welcome } from 'register/components/Welcome/Welcome';\r\nimport { StepFour } from 'register/components/StepFour/StepFour';\r\nimport { StepThree } from 'register/components/StepThree/StepThree';\r\nimport { StepHeader } from 'register/components/StepHeader/StepHeader';\r\nimport { ImportAccount } from 'register/components/ImportAccount/ImportAccount';\r\nimport { RegisterStage } from 'register/state/models/register-stage';\r\nimport { registerActions as actions } from 'register/state/register.actions';\r\nimport { getRegisterSeed, getRegisterStage, getShowSteps } from 'register/state/register.selectors';\r\n\r\nexport const componentId = 'CreateAccountPage';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\ntype CreateAccountProps = { }\r\n\r\nexport const CreateAccountPage: React.FC<CreateAccountProps> = () => {\r\n  const seed = useSelector(getRegisterSeed);\r\n  const stage = useSelector(getRegisterStage);\r\n  const showSteps = useSelector(getShowSteps);\r\n  const dispatch = useDispatch();\r\n\r\n  const components = () => {\r\n    switch (stage) {\r\n      case RegisterStage.STEP1:\r\n        return <StepOne onGenerate={() => dispatch(actions.generateSeed())} />\r\n      case RegisterStage.STEP2:\r\n        return <StepTwo seed={seed} onSubmit={() => dispatch(actions.submitSeed())} />\r\n      case RegisterStage.STEP3:\r\n        return <StepThree seed={seed} onConfirm={() => dispatch(actions.confirmSeed())} />\r\n      case RegisterStage.STEP4:\r\n        return <StepFour onRegister={data => dispatch(actions.finishRegister(data.password))} />\r\n      case RegisterStage.IMPORT:\r\n        return <ImportAccount\r\n          onImport={data => dispatch(actions.finishImportAccount(data))}\r\n          onBack={() => dispatch(actions.stepBack())} />\r\n      default:\r\n        return <Welcome\r\n          // TODO: remove next line after API is connected\r\n          onMockedLogin={() => dispatch(push('/wallet'))}\r\n          onCreate={() => dispatch(actions.startRegisterAccount())}\r\n          onImport={() => dispatch(actions.startImportAccount())}\r\n          onAbout={() => dispatch(push('/about'))}\r\n        />\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      {(stage && showSteps) ? \r\n        <StepHeader \r\n          step={stage} \r\n          total={4} \r\n          onBack={() => dispatch(actions.stepBack())} \r\n        /> : null\r\n      }\r\n\r\n      {components()}\r\n\r\n      {(stage && showSteps) ? \r\n        <div className={css('Footer')}>\r\n          <img src={logo} alt=\"ZeroPool\" style={{margin:'auto'}} />\r\n        </div>\r\n       : null\r\n      }\r\n    </div>\r\n  ) \r\n};","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\n\r\nimport './HelpPage.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\n\r\nexport const componentId = 'HelpPage';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport interface HelpPageProps { }\r\n\r\nexport const HelpPage: React.FC<HelpPageProps> = () => {\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      <h1> Help Page is under construction...</h1>\r\n    </div>\r\n  )\r\n};","import { capFirstLetter } from \"./cap-first-letter\";\r\n\r\nexport const cssMod = (value: string) => ({[capFirstLetter(value)]: true}) \r\n","export const capFirstLetter = (str: string): string =>\r\n  str.charAt(0).toUpperCase() + str.slice(1);","import React, { HTMLAttributes } from 'react';\r\nimport { cn } from '@bem-react/classname';\r\n\r\nimport './RoundButton.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { cssMod } from 'shared/util/css-mod';\r\n\r\nexport const componentId = 'RoundButton';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport interface  RoundButtonProps extends HTMLAttributes<HTMLElement>{\r\n  label?: string;\r\n  labelPosition?: 'top' | 'bottom' | 'left' | 'right';\r\n}\r\n\r\nexport const RoundButton: React.FC<RoundButtonProps> = (({ label, labelPosition = 'bottom', ...props}) => (\r\n  <div className={css({NoLabel: !label})} data-testid={test()}>\r\n    <IconButton \r\n      className={css('Button', {}, [props.className])} \r\n      data-testid={test('Button')}\r\n      disableRipple={true}\r\n      disableFocusRipple={true}\r\n      disableTouchRipple={true}\r\n      onClick={props.onClick}\r\n    >\r\n        {props.children}\r\n    </IconButton>\r\n\r\n    <span \r\n      className={css('Label', {...cssMod(labelPosition)})} \r\n      data-testid={test('Label')}\r\n    >\r\n        {label}\r\n    </span>\r\n  </div>\r\n));\r\n\r\n\r\n\r\n","import React, { forwardRef, HTMLAttributes, memo } from 'react';\r\nimport { cn } from '@bem-react/classname';\r\n\r\nimport './Icon.scss';\r\n\r\nimport { IconOption } from 'shared/components/Icon/IconOption';\r\n\r\nexport const componentId = 'Icon';\r\n\r\nconst css = cn(componentId);\r\n\r\nexport interface IconProps extends HTMLAttributes<HTMLElement> {\r\n  icon: IconOption;\r\n  spaceOn?: 'right' | 'left';\r\n}\r\n\r\nconst component = memo(\r\n  forwardRef<HTMLElement, IconProps>(({ icon, spaceOn, ...props }, ref) => (\r\n    <i\r\n      {...props}\r\n      className={css(\r\n        {\r\n          [icon]: true,\r\n          RightMargin: spaceOn === 'right',\r\n          LeftMargin: spaceOn === 'left',\r\n          Clickable: !!props.onClick,\r\n        },\r\n        [props.className],\r\n      )}\r\n      ref={ref}\r\n    ></i>\r\n  )),\r\n);\r\n\r\ncomponent.displayName = componentId;\r\n\r\nexport const Icon = component;","export enum WalletHeaderMode {\r\n  Info = 'Info',        // only text information about opened view\r\n  Balance = 'Balance',  // label strind and balance string with tokens amount if it passed\r\n}\r\n","import React, { HTMLAttributes } from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport { IconButton } from '@material-ui/core';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\nimport './ExpandButton.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\n\r\nexport const componentId = 'ExpandButton';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport interface ExpendButtonProps extends HTMLAttributes<HTMLElement>{\r\n  expanded: boolean;\r\n  click: () => void; \r\n }\r\n\r\nexport const ExpandButton: React.FC<ExpendButtonProps> = ({expanded, click, ...props}) => {\r\n\r\n  return (\r\n    <div \r\n      className={css({Expended: expanded}, [props.className])} \r\n      data-testid={test()} \r\n      onClick={click}\r\n    >\r\n      <IconButton\r\n        disableRipple={true}\r\n        disableFocusRipple={true}\r\n        disableTouchRipple={true}\r\n      >\r\n        <ArrowForwardIosIcon />\r\n      </IconButton>\r\n    </div>\r\n  )\r\n};","import { cn } from '@bem-react/classname';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport VerticalAlignTopIcon from '@material-ui/icons/VerticalAlignTop';\r\nimport VerticalAlignBottomIcon from '@material-ui/icons/VerticalAlignBottom';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport './WalletRow.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\nimport { RoundButton } from 'shared/components/RoundButton/RoundButton';\r\nimport { IconOption } from 'shared/components/Icon/IconOption';\r\nimport { Token } from 'shared/models/token';\r\nimport { Icon } from 'shared/components/Icon/Icon';\r\n\r\nimport { ExpandButton } from 'wallet/components/ExpandButton/ExpandButton';\r\nimport { Wallet } from 'wallet/state/models/wallet';\r\n\r\nexport const componentId = 'WalletRow';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport type WalletRowProps = { \r\n  rollUp: number\r\n  rate: number\r\n  token: Token\r\n  wallet: Wallet\r\n\r\n  onReceiveClick: (wallet: Wallet) => void\r\n  onSendClick: (wallet: Wallet) => void\r\n  onEditClick: (wallet: Wallet) => void\r\n  onRollUpClick: () => void\r\n}\r\n\r\nexport const WalletRow: React.FC<WalletRowProps> = ({token, wallet, rate, rollUp, onReceiveClick, onSendClick, onEditClick, onRollUpClick}) => {\r\n  const [showButtons, setShowButtons] = useState(false);\r\n  const [toBeOpened, setToBeOpened] = useState(false);\r\n  \r\n  const showButtonsHandler = () => {\r\n    if (showButtons) {\r\n      setShowButtons(false)\r\n    } else {\r\n      onRollUpClick();\r\n      setToBeOpened(true);\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if(toBeOpened) {\r\n      setToBeOpened(false);\r\n      setShowButtons(true);\r\n    } else {\r\n      setShowButtons(false);\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [wallet.name, rollUp]);\r\n\r\n  return (\r\n    <div className={css({Expanded: showButtons})} data-testid={test()}>\r\n      <div className={css('Main')}>\r\n        <Icon className={css('Icon')} icon={wallet.address.symbol as IconOption} />\r\n\r\n        <div className={css('Values')}>\r\n          <div className={css('WalletName')}>{wallet.name}</div>\r\n          <div className={css('WalletAmount')}>{wallet.amount} {token.symbol} ({(rate * wallet.amount).toFixed(2)} $)</div>\r\n        </div>\r\n\r\n        <ExpandButton className={css('Expander')} expanded={showButtons} click={showButtonsHandler} />\r\n      </div>\r\n\r\n      <div className={css('Buttons', {Hidden: !showButtons})}>\r\n        <RoundButton className={css('Button1')} label={'Send'} onClick={() => onSendClick(wallet)}>\r\n          <VerticalAlignTopIcon />\r\n        </RoundButton>\r\n        \r\n        <RoundButton className={css('Button2')} label={'Receive'} onClick={() => onReceiveClick(wallet)}>\r\n          <VerticalAlignBottomIcon />\r\n        </RoundButton>\r\n\r\n        <RoundButton className={css('Button2')} label={'Edit'} onClick={() => onEditClick(wallet)}>\r\n          <SettingsIcon />\r\n        </RoundButton>\r\n      </div>\r\n    </div>\r\n  )\r\n};","import React, { useState } from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport { Button, TextField } from '@material-ui/core';\r\n\r\nimport './EditWallet.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\n\r\nexport const componentId = 'EditWallet';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport type EditWalletProps = {\r\n  onRename: (name: string) => void\r\n  onDelete: () => void\r\n  onCancel: () => void\r\n  walletName: string\r\n }\r\n\r\nexport const EditWallet: React.FC<EditWalletProps> = ({walletName, onRename, onDelete, onCancel}) => {\r\n  const [newName, setNewName] = useState('');\r\n  const minNameLength = 3;\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      <p className={css('Name')}> {walletName} </p>\r\n\r\n      <TextField \r\n        className={css('NewName')} \r\n        label={`New name (min. ${minNameLength} symbols)`} \r\n        value={newName} \r\n        onChange={(event) => {setNewName(event.target.value)}}\r\n      />\r\n\r\n      <Button \r\n        disabled={newName.length < minNameLength}\r\n        className={css('Rename')} \r\n        data-testid={test('Rename')}\r\n        onClick={() => onRename(newName)}\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n      >\r\n        Rename\r\n      </Button>\r\n\r\n      <Button \r\n        className={css('Delete')} \r\n        data-testid={test('Delete')}\r\n        onClick={onDelete}\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n      >\r\n        Delete\r\n      </Button>\r\n\r\n      <Button \r\n        className={css('Cancel')} \r\n        data-testid={test('Cancel')}\r\n        onClick={onCancel}\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n      >\r\n        Cancel\r\n      </Button>\r\n    </div>\r\n  )\r\n};","import React, { useState } from 'react';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { cn } from '@bem-react/classname';\r\n\r\nimport './DeleteWallet.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\n\r\nexport const componentId = 'DeleteWallet';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport type DeleteWalletProps = { \r\n  onDelete: () => void\r\n  onCancel: () => void\r\n  walletName: string\r\n}\r\n\r\nexport const DeleteWallet: React.FC<DeleteWalletProps> = ({walletName, onCancel, onDelete}) => {\r\n  const [confirmName, setConfirmName] = useState('');\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      <p className={css('Name')}> {walletName} </p>\r\n\r\n      <TextField \r\n        className={css('Confirm')} \r\n        label=\"Enter wallet name to confirm\" \r\n        value={confirmName} \r\n        onChange={(event) => {setConfirmName(event.target.value)}}\r\n      />\r\n      \r\n      <Button \r\n        className={css('Delete')} \r\n        data-testid={test('Delete')}\r\n        disabled={confirmName !== walletName}\r\n        onClick={() => onDelete()}\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n      >\r\n        Delete anyway\r\n      </Button>\r\n\r\n      <Button \r\n        className={css('Cancel')} \r\n        data-testid={test('Cancel')}\r\n        onClick={onCancel}\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n      >\r\n        Cancel\r\n      </Button>\r\n    </div>\r\n  )\r\n};","import { cn } from '@bem-react/classname';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport React, { useState } from 'react';\r\nimport { Dialog, DialogContent } from '@material-ui/core';\r\n\r\nimport './Wallets.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\nimport { RoundButton } from 'shared/components/RoundButton/RoundButton';\r\nimport { Token } from 'shared/models/token';\r\n\r\nimport { Wallet } from 'wallet/state/models/wallet';\r\nimport { WalletRow } from 'wallet/components/WalletRow/WalletRow';\r\nimport { EditWallet } from 'wallet/components/EditWallet/EditWallet';\r\nimport { DeleteWallet } from 'wallet/components/DeleteWallet/DeleteWallet';\r\n\r\nexport const componentId = 'Wallets';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport interface WalletsHandlers {\r\n  onReceive: (wallet: Wallet) => void;\r\n  onSend: (wallet: Wallet) => void;\r\n  onDelete: (wallet: Wallet) => void;\r\n  onRename: (wallet: Wallet, name: string) => void;\r\n  onAdd: () => void;\r\n};\r\nexport interface WalletsProps {\r\n  handlers: WalletsHandlers;\r\n  rate: number;\r\n  token: Token;\r\n  wallets: Wallet[];\r\n};\r\n\r\nexport const Wallets: React.FC<WalletsProps> = ({handlers, wallets, rate, token}) => {\r\n  const [rollUpSignal, setRollUpSignal] = useState(0);\r\n  const [openEditDialog, setOpenEditDialog] = useState(false);\r\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n  const [selectedWallet, setSelectedWallet] = useState<Wallet|null>(null);\r\n\r\n  const handleWalletRename = (name: string) => {\r\n    if (selectedWallet) {\r\n      setOpenEditDialog(false);\r\n      handlers.onRename(selectedWallet, name);\r\n    } else {\r\n      throw new Error('No active wallet set!');\r\n    }\r\n  }\r\n  const handleWalletDelete = () => {\r\n    if (selectedWallet) {\r\n      setOpenDeleteDialog(false);\r\n      handlers.onDelete(selectedWallet);\r\n    } else {\r\n      throw new Error('No active wallet set!');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      {wallets.map((wallet, index) =>\r\n        <WalletRow\r\n          rollUp={rollUpSignal}\r\n          wallet={wallet}\r\n          token={token}\r\n          rate={rate}\r\n          key={index}\r\n\r\n          onReceiveClick={handlers.onReceive}\r\n          onSendClick={handlers.onSend}\r\n          onEditClick={(wallet) => {setSelectedWallet(wallet); setOpenEditDialog(true);}}\r\n          onRollUpClick={() => setRollUpSignal(rollUpSignal+1)}\r\n        />\r\n      )}\r\n\r\n      <div  className={css('Add')}>\r\n        <RoundButton label={'Add new'} onClick={handlers.onAdd}>\r\n          <AddIcon />\r\n        </RoundButton>\r\n      </div>\r\n\r\n      <Dialog \r\n        onClose={() => {setOpenEditDialog(false);}} \r\n        open={openEditDialog}\r\n        fullWidth={true}\r\n        maxWidth={'xs'}\r\n      >\r\n        <DialogContent dividers>\r\n          <EditWallet \r\n            walletName={selectedWallet?.name || ''}\r\n            onRename={handleWalletRename}\r\n            onDelete={() => {setOpenDeleteDialog(true); setOpenEditDialog(false);}}\r\n            onCancel={() => {setOpenEditDialog(false);}}\r\n          />\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      <Dialog \r\n        onClose={() => {setOpenDeleteDialog(false);}} \r\n        open={openDeleteDialog}\r\n        fullWidth={true}\r\n        maxWidth={'xs'}\r\n      >\r\n        <DialogContent dividers>\r\n          <DeleteWallet \r\n            walletName={selectedWallet?.name || ''}\r\n            onDelete={handleWalletDelete}\r\n            onCancel={() => {setOpenDeleteDialog(false); setOpenEditDialog(true);}}\r\n          />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport { Button, TextField, Tooltip } from '@material-ui/core';\r\n\r\nimport './SendConfirmation.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\nimport { Wallet } from 'wallet/state/models/wallet';\r\n\r\nexport const componentId = 'SendConfirmation';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport type SendConfirmationProps = { \r\n  address: string\r\n  amount: number\r\n  rate: number\r\n  wallet: Wallet\r\n  onConfirmClick: () => void\r\n}\r\n\r\nexport const SendConfirmation: React.FC<SendConfirmationProps> = ({\r\n  address,\r\n  amount,\r\n  rate,\r\n  wallet,\r\n  onConfirmClick,\r\n}) => {\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      <div className={css('Title')}> \r\n        Confirm transaction\r\n      </div>\r\n\r\n      <form className={css('Inputs')} noValidate autoComplete=\"off\">\r\n        <Tooltip title={wallet.name} placement=\"bottom\">\r\n          <TextField \r\n            className={css('From')} \r\n            id=\"from\" \r\n            label=\"From\" \r\n            value={wallet.name} \r\n            disabled={true}\r\n          />\r\n        </Tooltip>\r\n\r\n        <Tooltip title={address} placement=\"bottom\">\r\n          <TextField \r\n            className={css('To')} \r\n            id=\"to\" \r\n            label=\"To\" \r\n            value={address} \r\n            disabled={true}\r\n          />\r\n        </Tooltip>\r\n\r\n        <Tooltip title={amount} placement=\"bottom\">\r\n          <TextField \r\n            className={css('Amount')} \r\n            id=\"amount\" \r\n            label=\"Amount\" \r\n            value={`${amount} ${wallet.address.symbol}`} \r\n            disabled={true}\r\n          />\r\n        </Tooltip>\r\n        \r\n        <TextField \r\n          className={css('Fee')} \r\n          id=\"fee\" \r\n          label=\"Network fee\" \r\n          value={'0.22 ETH'} \r\n          disabled={true}\r\n        />\r\n      </form>\r\n\r\n      <div className={css('Confirm')}>\r\n        <Button \r\n          className={css('ConfirmButton')} \r\n          data-testid={test('Confirm')}\r\n          onClick={() => onConfirmClick()}\r\n          color=\"primary\"\r\n          disableElevation\r\n          variant=\"contained\"\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport NumberFormat from 'react-number-format';\r\nimport { ArrowBack } from '@material-ui/icons';\r\nimport { Tooltip, Button } from '@material-ui/core';\r\n\r\nimport './WalletHeader.scss';\r\n\r\nimport { useNavigateBack } from 'shared/hooks/use-navigate-back';\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\n\r\nimport { WalletHeaderMode } from 'wallet/components/WalletHeader/WalletHeaderMode';\r\n\r\nexport const componentId = 'WalletHeader';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport type WalletHeaderProps = {\r\n  fiatValue?: number,\r\n  hideBackButton?: boolean,\r\n  label: string,\r\n  mode: WalletHeaderMode,\r\n  tokenAmount?: number,\r\n  tokenName?:string,\r\n  tokenSymbol?: string,\r\n  tokenRate?: number,\r\n\r\n  onBackClick: () => void\r\n}\r\n\r\nexport const WalletHeader: React.FC<WalletHeaderProps> = ({ mode, tokenAmount, tokenSymbol, label, fiatValue, hideBackButton, tokenName, onBackClick }) => {\r\n  useNavigateBack(onBackClick);\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      {!hideBackButton ?\r\n        <Tooltip title=\"Step back\" placement=\"bottom\">\r\n          <Button\r\n            className={css('BackButton')}\r\n            data-testid={test('BackButton')}\r\n            onClick={onBackClick}\r\n            disableRipple\r\n          >\r\n            <ArrowBack className={css('Icon')} />\r\n          </Button>\r\n        </Tooltip>\r\n        : null}\r\n\r\n      <div className={css('Title')}>\r\n        <span>{label}</span>\r\n      </div>\r\n\r\n      <div className={css('Amount')}>\r\n        {mode === WalletHeaderMode.Info ? null : \r\n          <NumberFormat\r\n            className={css('FiatAmount')}\r\n            data-testid={test('FiatAmount')}\r\n            value={fiatValue}\r\n            displayType={'text'}\r\n            thousandSeparator={true}\r\n            suffix={' $'}\r\n            decimalScale={2}\r\n          />\r\n        }\r\n      </div>\r\n\r\n      <div className={css('Tokens')}>\r\n          {tokenAmount && tokenName \r\n            ? `${tokenAmount} ${tokenSymbol}`\r\n            : null}\r\n        </div>\r\n    </div>\r\n  )\r\n};\r\n","import { useEffect, useRef } from \"react\";\r\n\r\n// Intercepts browser's Navigate Back event\r\nexport const useNavigateBack = (callback: Function): void => {\r\n  const isInitialMount = useRef(true);\r\n  \r\n  useEffect(() => {\r\n    if (isInitialMount.current) {\r\n      isInitialMount.current = false;\r\n      \r\n      window.addEventListener('popstate', function(event) {\r\n        window.history.pushState(null, '', document.URL);\r\n        callback();\r\n      }, false);\r\n    } else {\r\n      // Fix browser history\r\n      window.history.pushState(null, '', document.URL);\r\n    }\r\n  }, [callback]);\r\n}","import { Token } from \"shared/models/token\";\r\n\r\nexport const totalHelper = (\r\n  amounts: Record<Token['symbol'], number>, \r\n  rates: Record<Token['symbol'], number>,\r\n  filter?: Token['symbol'], \r\n): number => {\r\n    let total = 0;\r\n\r\n    for (let symbol in amounts) {\r\n      if (amounts.hasOwnProperty(symbol) && rates.hasOwnProperty(symbol)) {\r\n        if (filter && filter !== symbol) {\r\n          continue;\r\n        }\r\n\r\n        total += amounts[symbol] * rates[symbol];\r\n      }\r\n    }\r\n\r\n    return total;\r\n}","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport './TokenRow.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\nimport { IconOption } from 'shared/components/Icon/IconOption';\r\nimport { Token } from 'shared/models/token';\r\nimport { Icon } from 'shared/components/Icon/Icon';\r\n\r\nexport const componentId = 'TokenRow';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport interface TokenRowProps {\r\n  amount: number;\r\n  onSelectToken: (token: Token) => void;\r\n  rate: number;\r\n  token: Token;\r\n}\r\n\r\nexport const TokenRow: React.FC<TokenRowProps> = ({ amount = 0, token, rate, onSelectToken }) => {\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()} onClick={() => onSelectToken(token)}>\r\n      <div className={css('Rates')}>\r\n        <Icon icon={token.symbol as IconOption} />\r\n        \r\n        <span className={css('Name')}>{token.name}</span>\r\n\r\n        <NumberFormat\r\n          className={css('Rate')}\r\n          data-testid={test('Rate')}\r\n          value={rate}\r\n          displayType={'text'}\r\n          thousandSeparator={true}\r\n          suffix={' $'}\r\n          decimalScale={2}\r\n        />\r\n      </div>\r\n\r\n      <div className={css('Amounts')}>\r\n        <NumberFormat\r\n          className={css('TokenAmount')}\r\n          data-testid={test('TokenAmount')}\r\n          value={amount}\r\n          displayType={'text'}\r\n          thousandSeparator={true}\r\n          suffix={' ' + token.symbol}\r\n          decimalScale={6}\r\n        />\r\n\r\n        <NumberFormat\r\n          className={css('FiatAmount')}\r\n          data-testid={test('FiatAmount')}\r\n          value={amount * rate}\r\n          displayType={'text'}\r\n          thousandSeparator={true}\r\n          suffix={' $'}\r\n          decimalScale={2}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\n\r\nimport './Balance.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\nimport { Token } from 'shared/models/token';\r\n\r\nimport { TokenRow } from 'wallet/components/TokenRow/TokenRow';\r\n\r\nexport const componentId = 'Balance';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport interface BalanceProps {\r\n  amounts: Record<Token['symbol'], number>;\r\n  onSelectToken: (token: Token) => void;\r\n  rates: Record<string, number>;\r\n  tokens: string[];\r\n  tokensRecord: Record<string, Token>\r\n}\r\n\r\nexport const Balance: React.FC<BalanceProps> = ({ amounts, rates, tokens, tokensRecord, onSelectToken }) => {\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      {tokens.map((tokenSymbol, index) =>\r\n        <TokenRow\r\n          onSelectToken={onSelectToken}\r\n          amount={amounts[tokenSymbol]}\r\n          token={tokensRecord[tokenSymbol]}\r\n          rate={rates[tokenSymbol]}\r\n          key={index}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nimport './Receive.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\nimport { Address } from 'shared/models/address';\r\n\r\nexport const componentId = 'Receive';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport type ReceiveProps = { \r\n  address: Address\r\n  rate: number\r\n}\r\n\r\nexport const Receive: React.FC<ReceiveProps> = ({address, rate}) => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const QRCode = require('qrcode.react');\r\n  const handleCodeClick = (): void => {\r\n    navigator.clipboard.writeText(address.value).then(() => {\r\n      enqueueSnackbar('Address copied to the clipboard', { variant: 'success' });\r\n    }, (err) => {\r\n      enqueueSnackbar(`Can't access clipboard`, { variant: 'error' });\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      <div className={css('Title')}> \r\n        Receive {address.symbol}\r\n      </div>\r\n\r\n      <Tooltip title={address.value} placement=\"bottom\">\r\n        <div className={css('Code')} onClick={handleCodeClick}>\r\n            <QRCode value={address.value}/>\r\n        </div>\r\n      </Tooltip>\r\n    </div>\r\n  )\r\n}; ","import jsSHA from \"jssha\";\r\n\r\n/**\r\n * Checks if the given string is an address\r\n *\r\n * @method isAddress\r\n * @param {String} address the given HEX adress\r\n * @return {Boolean}\r\n*/\r\nexport const isEthereumAddress = function (address: string) {\r\n  if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\r\n      // check if it has the basic requirements of an address\r\n      return false;\r\n  } else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {\r\n      // If it's all small caps or all all caps, return true\r\n      return true;\r\n  } else {\r\n      // Otherwise check each case\r\n      return isChecksumAddress(address);\r\n  }\r\n};\r\n\r\n/**\r\n* Checks if the given string is a checksummed address\r\n*\r\n* @method isChecksumAddress\r\n* @param {String} address the given HEX adress\r\n* @return {Boolean}\r\n*/\r\nconst isChecksumAddress = function (address: string) {\r\n  let addressHash: string;\r\n  const shaObj = new jsSHA('SHA-512', \"TEXT\", { encoding: \"UTF8\" });\r\n  \r\n  address = address.replace('0x','');\r\n  shaObj.update(address.toLowerCase());\r\n  addressHash = shaObj.getHash('HEX');\r\n\r\n  for (var i = 0; i < 40; i++ ) {\r\n      // the nth letter should be uppercase if the nth digit of casemap is 1\r\n      if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) || (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\r\n          return false;\r\n      }\r\n  }\r\n  return true;\r\n};","import { Address } from \"shared/models/address\";\r\nimport { isEthereumAddress } from \"shared/helpers/validators/eth.validator\";\r\n\r\nexport const validateAddress = (address: Address): boolean | undefined => {\r\n  let result;\r\n  const supportedSymbols = ['ETH', 'WAWES', 'NEAR'];\r\n  \r\n  if (!supportedSymbols.includes(address.symbol)) {\r\n    return undefined;\r\n  }\r\n\r\n  switch (address.symbol) {\r\n    case 'ETH':\r\n      result = isEthereumAddress(address.value);\r\n      break;\r\n    \r\n    case 'WAVES':\r\n      result = true;\r\n      break;\r\n\r\n    case 'NEAR': \r\n      result = true;\r\n      break;\r\n  }\r\n  \r\n  return result;\r\n};\r\n","import { Button, TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport NumberFormat from 'react-number-format';\r\nimport { cn } from '@bem-react/classname';\r\n\r\nimport './Send.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\nimport { validateAddress } from 'shared/helpers/addres.helper';\r\n\r\nimport { Wallet } from 'wallet/state/models/wallet';\r\n\r\nexport const componentId = 'Send';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport type SendProps = { \r\n  rate: number\r\n  wallet: Wallet\r\n  onNextClick: (address: string, amount: number) => void\r\n}\r\n\r\nexport const Send: React.FC<SendProps> = ({rate, wallet, onNextClick}) => {\r\n  const [address, setAddress] = useState('');\r\n  const [amount, setAmount] = useState(0);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleAddressChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAddress(event.target.value);\r\n  }\r\n\r\n  const handleAddressPaste = async (event: React.MouseEvent) => {\r\n    const text = await navigator.clipboard.readText();\r\n    \r\n    if (validateAddress({ ...wallet.address, value: text})) {\r\n      setAddress(text);\r\n      enqueueSnackbar('Address added from the clipboard', { variant: 'success' });\r\n    } else {\r\n      enqueueSnackbar('Clipboard contains bad address', { variant: 'error' });\r\n    }\r\n  }\r\n\r\n  const handleAmountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAmount(Number(event.target.value) || 0);\r\n  }\r\n\r\n  const handleAmountMaximise = (event: React.MouseEvent) => {\r\n    setAmount(wallet.amount);\r\n  }\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      <div className={css('Title')}> \r\n        Send {wallet.address.symbol}\r\n      </div>\r\n\r\n      <form className={css('Inputs')} noValidate autoComplete=\"off\">\r\n        <TextField \r\n          className={css('AddressInput')} \r\n          id=\"address\" \r\n          label=\"Address\" \r\n          value={address} \r\n          onChange={handleAddressChange}\r\n        />\r\n        \r\n        <span \r\n          className={css('AddressInputPaste')} \r\n          onClick={handleAddressPaste}\r\n        >\r\n            Paste\r\n        </span>\r\n\r\n        <TextField \r\n          className={css('AmountInput')} \r\n          id=\"amount\" \r\n          label=\"Token amount\" \r\n          value={amount} \r\n          onChange={handleAmountChange}\r\n        />\r\n\r\n        <span \r\n          className={css('AmountInputMax')} \r\n          onClick={handleAmountMaximise}\r\n        >\r\n          Max\r\n        </span>\r\n      \r\n        <NumberFormat\r\n          className={css('FiatAmount')}\r\n          data-testid={test('FiatAmount')}\r\n          value={amount*rate}\r\n          displayType={'text'}\r\n          thousandSeparator={true}\r\n          prefix={'(= '}\r\n          suffix={' $)'}\r\n          decimalScale={2}\r\n        />\r\n      </form>\r\n\r\n      <div className={css('Next')}>\r\n        <Button \r\n          className={css('NextButton')} \r\n          data-testid={test('Next')}\r\n          onClick={() => onNextClick(address, amount)}\r\n          color=\"primary\"\r\n          disableElevation\r\n          variant=\"contained\"\r\n        >\r\n          Next\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n};      ","import { AppBar, Toolbar, IconButton, SwipeableDrawer, Badge, List, ListItem, ListItemIcon, ListItemText, makeStyles, Tooltip } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AttachMoneyOutlinedIcon from '@material-ui/icons/AttachMoneyOutlined';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport BuildOutlinedIcon from '@material-ui/icons/BuildOutlined';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport { useSnackbar } from 'notistack';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { cn } from '@bem-react/classname';\r\n\r\nimport logo from 'assets/images/logo1.svg';\r\nimport { Token } from 'shared/models/token';\r\nimport { HelpPage } from 'shared/components/HelpPage/HelpPage';\r\nimport { AboutPage } from 'shared/components/AboutPage/AboutPage';\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\n\r\nimport { getActiveToken, getActiveView, getSupportedTokens, getSupportedTokensRecord, getUsdRates, getAmounts, getWallets, getActiveWallet, getSendData, getSeed } from 'wallet/state/wallet.selectors';\r\nimport { Wallets, WalletsHandlers } from 'wallet/components/Wallets/Wallets';\r\nimport { SendConfirmation } from 'wallet/components/SendConfirmation/SendConfirmation';\r\nimport { WalletHeaderMode } from \"wallet/components/WalletHeader/WalletHeaderMode\";\r\nimport { walletActions } from 'wallet/state/wallet.actions';\r\nimport { WalletHeader } from 'wallet/components/WalletHeader/WalletHeader';\r\nimport { totalHelper } from 'wallet/state/helpers/total.helper';\r\nimport { WalletView } from 'wallet/state/models/wallet-view';\r\nimport { Balance } from 'wallet/components/Balance/Balance';\r\nimport { Receive } from 'wallet/components/Receive/Receive';\r\nimport { Wallet } from 'wallet/state/models/wallet';\r\nimport { Send } from 'wallet/components/Send/Send';\r\n\r\nexport const componentId = 'WalletPage';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\ninterface WalletPageProps { }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: 'white',\r\n    flexGrow: 1,\r\n    flexDirection: 'column',\r\n    display: 'flex',\r\n    height: '100vh',\r\n    minWidth: '350px',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  toolbar: {\r\n    alignItems: 'flex-start',\r\n    flexDirection: 'column',\r\n    paddingTop: theme.spacing(1),\r\n    minHeight: 160,\r\n    paddingBottom: '0',\r\n  },\r\n  toolbarHeader: {\r\n    display: 'flex',\r\n    borderBottom: `${theme.palette.grey[600]} 1px solid`,\r\n    width: '100%',\r\n  },\r\n  toolbarHeaderItems: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  toolbarBody: {\r\n    margin: 'auto',\r\n    position: 'relative',\r\n    width: '100%',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    alignSelf: 'flex-end',\r\n  },\r\n  drower: {},\r\n  drowerItem: {\r\n    paddingRight: '20px',\r\n  },\r\n  drowerItemIcon: {\r\n    color: theme.palette.grey[600],\r\n  },\r\n  drowerItemText: {},\r\n  wrapper: {\r\n    display: 'flex',\r\n    margin: '50px auto',\r\n  },\r\n  footer: {\r\n    backgroundColor: '#020941',\r\n    bottom: 0,\r\n    display: 'flex',\r\n    position: 'fixed',\r\n    height: '70px',\r\n    width: '100%',\r\n  },\r\n  AboutPage: {\r\n    height: '50vh',\r\n  }\r\n\r\n}));\r\n\r\nexport const WalletPage: React.FC<WalletPageProps> = () => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [state, setState] = useState({ drower: false });\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const view = useSelector(getActiveView);\r\n  const token = useSelector(getActiveToken);\r\n  const rates = useSelector(getUsdRates);\r\n  const tokens = useSelector(getSupportedTokens);\r\n  const amounts = useSelector(getAmounts);\r\n  const tokensRecord = useSelector(getSupportedTokensRecord);\r\n  const wallet = useSelector(getActiveWallet);\r\n  const wallets = useSelector(getWallets);\r\n  const send = useSelector(getSendData);\r\n  const seed = useSelector(getSeed);\r\n\r\n  const handleExportSeed = () => {\r\n    navigator.clipboard.writeText(seed || 'No seed set').then(() => {\r\n      enqueueSnackbar('Seed copied to the clipboard', { variant: 'success' });\r\n    }, (err) => {\r\n      enqueueSnackbar(`Can't access clipboard`, { variant: 'error' });\r\n    });\r\n  }\r\n\r\n  const toggleDrawer = (open?: boolean) => (\r\n    event: React.KeyboardEvent | React.MouseEvent,\r\n  ) => {\r\n    if (\r\n      event &&\r\n      event.type === 'keydown' &&\r\n      ((event as React.KeyboardEvent).key === 'Tab' ||\r\n        (event as React.KeyboardEvent).key === 'Shift')\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, drower: open === undefined ? !state.drower : open })\r\n  }\r\n\r\n  const drowerMenu = () => (\r\n    <div\r\n      className={classes.drower}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(false)}\r\n      onKeyDown={toggleDrawer(false)}\r\n    >\r\n      <List>\r\n        {[WalletView.Balance, WalletView.Reset].map((text, index) => (\r\n          <ListItem className={classes.drowerItem} button key={text} onClick={() => dispatch(walletActions.menu(text))}>\r\n            <ListItemIcon className={classes.drowerItemIcon}>\r\n              {[<AttachMoneyOutlinedIcon />, <BuildOutlinedIcon />][index]}\r\n            </ListItemIcon>\r\n            <ListItemText className={classes.drowerItemText} primary={text} />\r\n          </ListItem>\r\n        ))}\r\n        <ListItem className={classes.drowerItem} button onClick={handleExportSeed}>\r\n          <ListItemIcon className={classes.drowerItemIcon}>\r\n            <FileCopyIcon />\r\n          </ListItemIcon>\r\n          <ListItemText className={classes.drowerItemText} primary=\"Export Seed\" />\r\n        </ListItem>\r\n      </List>\r\n\r\n      <Divider />\r\n\r\n      <List>\r\n        {[WalletView.Help, WalletView.About].map((text, index) => (\r\n          <ListItem button key={text} onClick={() => dispatch(walletActions.menu(text))}>\r\n            <ListItemIcon className={css('DrowerMenu-ItemIcon')}>\r\n              {[<InfoOutlinedIcon />, <HelpOutlineIcon />][index]}\r\n            </ListItemIcon>\r\n            <ListItemText className={css('DrowerMenu-ItemText')} primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div >\r\n  );\r\n\r\n  const walletsButtonHandlers: WalletsHandlers = {\r\n    onReceive: (wallet: Wallet) => dispatch(walletActions.openReceiveView(wallet)),\r\n    onSend: (wallet: Wallet) => dispatch(walletActions.openSendInitialView(wallet)),\r\n    onRename: (wallet: Wallet, name: string) => dispatch(walletActions.edit({ wallet, name })),\r\n    onDelete: (wallet: Wallet) => dispatch(walletActions.hideWallet({ wallet })),\r\n    onAdd: () => dispatch(walletActions.addWallet()),\r\n  }\r\n\r\n  const components = () => {\r\n    switch (view) {\r\n      case WalletView.Wallets:\r\n        return token ? <Wallets \r\n          handlers={walletsButtonHandlers}\r\n          rate={rates[token.symbol]}\r\n          token={token} \r\n          wallets={wallets ? Object.values(wallets) : []}\r\n        /> : null;\r\n      case WalletView.Send:\r\n        return wallet && token ? <Send\r\n            rate={rates[token.symbol]}\r\n            wallet={wallet}\r\n            onNextClick={(address, amount) => dispatch(walletActions.openSendConfirmView({wallet, address, amount}))}\r\n          /> : null;\r\n      case WalletView.SendConfirmation:\r\n        return send && token ? <SendConfirmation\r\n            amount={send.amount}\r\n            address={send.address}\r\n            rate={rates[token.symbol]}\r\n            wallet={send.wallet}\r\n            onConfirmClick={()=> dispatch(walletActions.send())}\r\n          /> : null; \r\n      case WalletView.Receive:\r\n        return wallet ? <Receive\r\n        address={wallet.address}\r\n        rate={rates[wallet.address.symbol]}\r\n        /> : null;\r\n      case WalletView.About:\r\n        return <AboutPage showBackButton={false} />\r\n      case WalletView.Help:\r\n        return <HelpPage />\r\n      default:\r\n        return <Balance\r\n          amounts={amounts}\r\n          onSelectToken={(token: Token) => dispatch(walletActions.openWalletsView(token))}\r\n          rates={rates}\r\n          tokens={tokens.map(i => i.symbol)}\r\n          tokensRecord={tokensRecord} />\r\n    }\r\n  }\r\n\r\n  const walletHeaderMode = [WalletView.Help, WalletView.About].includes(view) ? \r\n    WalletHeaderMode.Info : WalletHeaderMode.Balance;\r\n\r\n  const walletHeaderLabels: Record<WalletView, string> = {\r\n    [WalletView.Balance]: 'Overall balance',\r\n    [WalletView.Wallets]: `${token?.name} wallets`,\r\n    [WalletView.Receive]: `${wallet?.name}`,\r\n    [WalletView.Send]: `${wallet?.name}`,\r\n    [WalletView.SendConfirmation]: `${wallet?.name}`,\r\n    [WalletView.Address]: 'x12345',\r\n    [WalletView.About]: 'About',\r\n    [WalletView.Help]: 'Help',\r\n    [WalletView.Reset]: '',\r\n  };\r\n  \r\n  useEffect(() => {\r\n    dispatch(walletActions.openBalanceView());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className={css('', [classes.root])} data-testid={test()} id={componentId}>\r\n      <AppBar position=\"static\" className={css('AppBar')}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <div className={classes.toolbarHeader}>\r\n            <IconButton\r\n              onClick={toggleDrawer()}\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              edge=\"start\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n\r\n            <div className={classes.toolbarHeaderItems}>\r\n              <Tooltip title=\"No new messages\" placement=\"bottom\">\r\n                <IconButton aria-label=\"show 0 new notifications\" color=\"inherit\">\r\n                  <Badge badgeContent={0} color=\"secondary\">\r\n                    <NotificationsIcon />\r\n                  </Badge>\r\n                </IconButton>\r\n              </Tooltip>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={classes.toolbarBody}>\r\n            <WalletHeader\r\n              mode={walletHeaderMode}\r\n              label={walletHeaderLabels[view]}\r\n              hideBackButton={view === WalletView.Balance}\r\n              fiatValue={walletHeaderMode === WalletHeaderMode.Info ? undefined : totalHelper(amounts, rates, token?.symbol)}\r\n              tokenAmount={token ? amounts[token.symbol] : undefined}\r\n              tokenSymbol={token?.symbol}\r\n              tokenName={token?.name}\r\n              onBackClick={() => dispatch(walletActions.headerBack())}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <div className={css('Wrapper', [classes.wrapper])}>\r\n        {components()}\r\n      </div>\r\n\r\n      <div className={css('Footer', [classes.footer])}>\r\n        <img src={logo} alt=\"ZeroPool\" style={{margin:'auto'}} />\r\n      </div>\r\n\r\n      <SwipeableDrawer\r\n        open={state['drower']}\r\n        onClose={toggleDrawer(false)}\r\n        onOpen={toggleDrawer(true)}\r\n      >\r\n        {drowerMenu()}\r\n      </SwipeableDrawer>\r\n    </div>\r\n  )\r\n};\r\n","import { createMuiTheme } from '@material-ui/core/styles'\r\n\r\nconst COLOR_PRIMARY = '#020941';\r\nconst COLOR_BLUE_PRIMARY = '#2699fb';\r\nconst COLOR_BLUE_SECCONDARY = '#84c6ff';\r\nconst COLOR_BLUE_LIGHT = '#c4e1fa';\r\nconst WHITE = 'white';\r\nconst INPUT_UNDERLINE_COLOR = COLOR_BLUE_SECCONDARY;\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    action: {\r\n      disabledBackground: COLOR_BLUE_SECCONDARY,\r\n      disabled: 'set color of text here',\r\n    },\r\n    primary: {\r\n      main: COLOR_PRIMARY,\r\n    }\r\n  },\r\n\r\n  typography: {\r\n    button: {\r\n      // fontSize: '1rem',\r\n    },\r\n  },\r\n\r\n  overrides: {\r\n    MuiAppBar: {\r\n      colorPrimary: {\r\n        backgroundColor: COLOR_PRIMARY,\r\n      }\r\n    },\r\n\r\n    MuiButton: {\r\n      root: {\r\n        fontSize: '1rem',\r\n        fontFamily: '\"Exo 2\", \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n        margin: '5px',\r\n      },\r\n      outlinedPrimary: {\r\n        backgroundColor: COLOR_PRIMARY,\r\n        border: `solid 2px ${COLOR_BLUE_PRIMARY}`,\r\n        color: WHITE,\r\n        \"&:hover\": {\r\n          backgroundColor: COLOR_PRIMARY,\r\n          border: `solid 2px ${COLOR_BLUE_SECCONDARY}`,\r\n        }\r\n      },\r\n      containedPrimary: {\r\n        // backgroundColor: 'linear-gradient(90deg, rgba(132,198,255,1) 10%, rgba(38,153,251,1) 100%)',\r\n        backgroundColor: COLOR_BLUE_PRIMARY,\r\n        color: WHITE,\r\n        \"&:hover\": {\r\n          backgroundColor: COLOR_BLUE_SECCONDARY,\r\n        }\r\n      },\r\n    },\r\n\r\n    MuiLinearProgress: {\r\n      colorPrimary: {\r\n        backgroundColor: '#eee',\r\n      }\r\n    },\r\n  \r\n    MuiDialog: {\r\n      root: {\r\n        minWidth: '350px',\r\n      }\r\n    },\r\n\r\n    MuiInputLabel: {\r\n    },\r\n\r\n    MuiInput: {\r\n      colorSecondary: {\r\n        color: WHITE,\r\n      },\r\n\r\n      underline: {\r\n        borderBottomColor: INPUT_UNDERLINE_COLOR,\r\n\r\n        '&:not($disabled):after': {\r\n          borderBottomColor: INPUT_UNDERLINE_COLOR,\r\n        },\r\n\r\n        '&:hover:not($disabled):after': {\r\n          borderBottomColor: INPUT_UNDERLINE_COLOR,\r\n        },\r\n\r\n        '&:not($disabled):before': {\r\n          borderBottomColor: INPUT_UNDERLINE_COLOR,\r\n        },\r\n\r\n        '&:hover:not($disabled):before': {\r\n          borderBottomColor: INPUT_UNDERLINE_COLOR,\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport { Router, Route, Redirect, Switch } from 'react-router-dom';\r\n\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { SnackbarUtilsConfigurator } from 'shared/helpers/toast.helper';\r\nimport { http, setupInterceptors } from 'shared/http/http';\r\nimport { LoadingBar } from 'shared/loading-bar/containers/loading-bar/loading-bar.component';\r\nimport { AboutPage } from 'shared/components/AboutPage/AboutPage';\r\nimport { timeout } from 'shared/util/timeout';\r\n\r\nimport { store, history, persistedStore } from 'state';\r\nimport { CreateAccountPage } from 'register/containers/CreateAccount/CreateAccountPage';\r\nimport { WalletPage } from 'wallet/containers/WalletPage/WalletPage';\r\nimport { theme } from 'theme';\r\n\r\nsetupInterceptors(http(), store);\r\n\r\nasync function start() {\r\n  await timeout(1000);\r\n\r\n  ReactDOM.render(\r\n    <ThemeProvider theme={theme}>\r\n      <SnackbarProvider maxSnack={5} anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}>\r\n        <React.StrictMode>\r\n          <Provider store={store}>\r\n            <PersistGate loading={null} persistor={persistedStore}>\r\n              <ConnectedRouter history={history}>\r\n                <Router history={history}>\r\n                  <Switch>\r\n                    <Route path=\"/welcome\" exact component={CreateAccountPage} />\r\n                    <Route path=\"/about\" exact component={AboutPage} />\r\n                    <Route path=\"/wallet\" exact component={WalletPage} />\r\n                    <Route><Redirect to=\"/welcome\" /></Route>\r\n                  </Switch>\r\n                </Router>\r\n              </ConnectedRouter>\r\n              <LoadingBar />\r\n            </PersistGate>\r\n          </Provider>\r\n        </React.StrictMode>\r\n        <SnackbarUtilsConfigurator />\r\n      </SnackbarProvider>\r\n    </ThemeProvider>,\r\n    document.getElementById('root')\r\n  );\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\nstart();\r\n","import { AxiosRequestConfig, AxiosResponse, AxiosError } from 'axios';\r\nimport { Store } from 'redux';\r\n\r\nimport { RootState } from 'state';\r\nimport { RequestConfig } from 'shared/http/http';\r\nimport { loadingBarActions } from 'shared/loading-bar/state/loading-bar.actions';\r\n\r\nexport const loadingBarRequestInterceptor = (store: Store<RootState>) => (\r\n  request: AxiosRequestConfig,\r\n): AxiosRequestConfig => {\r\n  const { context } = request as RequestConfig;\r\n  const noBar = !!context?.noLoadingBar;\r\n\r\n  if (!noBar) {\r\n    store.dispatch(loadingBarActions.addRequest());\r\n  }\r\n\r\n  return request;\r\n};\r\n\r\nexport const loadingBarResponseInterceptor = (store: Store<RootState>) => (\r\n  response: AxiosResponse,\r\n): AxiosResponse => {\r\n  const { context } = response.config as RequestConfig;\r\n  const noBar = !!context?.noLoadingBar;\r\n\r\n  if (!noBar) {\r\n    store.dispatch(loadingBarActions.removeRequest());\r\n  }\r\n\r\n  return response;\r\n};\r\n\r\nexport const loadingBarErrorResponseInterceptor = (store: Store<RootState>) => (\r\n  error: AxiosError,\r\n): unknown => {\r\n  const context = (error.config as RequestConfig)?.context;\r\n  const noBar = !!context?.noLoadingBar;\r\n\r\n  if (!noBar) {\r\n    store.dispatch(loadingBarActions.removeRequest());\r\n  }\r\n\r\n  throw error;\r\n};\r\n","import { AxiosRequestConfig } from 'axios';\r\nimport { Store } from 'redux';\r\n\r\nimport { RequestConfig } from 'shared/http/http';\r\nimport { RootState } from 'state';\r\nimport { Provider } from 'shared/models/provider';\r\n\r\nimport providers from 'assets/settings/providers.json';\r\n\r\nexport const authInterceptor = (store: Store<RootState>) => (\r\n  request: AxiosRequestConfig,\r\n): AxiosRequestConfig => {\r\n  const { context } = request as RequestConfig;\r\n\r\n  if (!context?.provider) {\r\n    return request;\r\n  }\r\n\r\n  const authHeaders: Record<string, string>[] = [];\r\n  const provider: { authHeader: string, authValue: string } = providers[Provider[context.provider]];\r\n\r\n  authHeaders[provider.authHeader] = provider.authValue;\r\n  debugger;\r\n  return {\r\n    ...request,\r\n    headers: {\r\n      ...request.headers,\r\n      ...authHeaders,\r\n    },\r\n  };\r\n};\r\n"],"sourceRoot":""}