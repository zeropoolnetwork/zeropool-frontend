{"version":3,"sources":["assets/images/logo1.svg","wallet/state/models/wallet-view.ts","assets/logo.svg","assets/images/guy_welcomes@2x.png","wallet/state/models/index.ts","serviceWorker.ts","shared/helpers/toast.helper.tsx","shared/models/provider.ts","register/state/models/register-stage.ts","shared/loading-bar/state/loading-bar.actions.ts","shared/http/http.ts","shared/loading-bar/state/loading-bar.selectors.ts","shared/loading-bar/containers/loading-bar/loading-bar.component.tsx","shared/helpers/test/test-id-builder.helper.ts","shared/components/AboutPage/AboutPage.tsx","shared/util/timeout.ts","register/state/register.actions.ts","register/state/helpers/stage.helper.ts","register/state/register.reducer.ts","register/state/helpers/seed.helper.ts","wallet/state/wallet.actions.ts","register/state/register.selectors.ts","register/state/register.epics.ts","state-migrations.ts","shared/util/from.ts","shared/util/round-number.ts","wallet/state/helpers/amounts.helper.ts","wallet/state/helpers/navigation.helper.ts","wallet/state/helpers/wallets.helper.ts","wallet/state/wallet.reducer.ts","shared/operators/handle-epic-error.operator.ts","shared/operators/filter-actions.operator.ts","wallet/state/wallet.selectors.ts","wallet/api/zeropool.api.ts","wallet/state/helpers/map-rates-to-tokens.ts","state.ts","wallet/api/rates.api.ts","wallet/state/wallet.epics.ts","shared/util/promise-with-error.ts","wallet/state/helpers/update-balances.helper.ts","shared/util/waves-bug.ts","shared/operators/get-payload.operator.ts","shared/loading-bar/state/loading-bar.reducer.ts","register/components/SeedTag/SeedTag.tsx","shared/util/shuffle.ts","register/components/SeedPanel/SeedPanel.tsx","register/components/StepOne/StepOne.tsx","register/components/StepTwo/StepTwo.tsx","register/components/Welcome/Welcome.tsx","register/components/StepFour/StepFour.tsx","register/components/StepThree/StepThree.tsx","register/components/Perl/Perl.tsx","register/components/StepHeader/StepHeader.tsx","register/components/ImportAccount/ImportAccount.tsx","register/containers/CreateAccount/CreateAccountPage.tsx","shared/components/HelpPage/HelpPage.tsx","shared/util/css-mod.ts","shared/util/cap-first-letter.ts","shared/components/RoundButton/RoundButton.tsx","shared/components/Icon/Icon.tsx","wallet/components/WalletHeader/WalletHeaderMode.tsx","wallet/components/ExpandButton/ExpandButton.tsx","wallet/components/WalletRow/WalletRow.tsx","wallet/components/EditWallet/EditWallet.tsx","wallet/components/DeleteWallet/DeleteWallet.tsx","wallet/components/Wallets/Wallets.tsx","wallet/components/SendConfirmation/SendConfirmation.tsx","wallet/components/WalletHeader/WalletHeader.tsx","shared/hooks/use-navigate-back.ts","wallet/state/helpers/total.helper.ts","wallet/components/TokenRow/TokenRow.tsx","wallet/components/Balance/Balance.tsx","wallet/components/Receive/Receive.tsx","shared/helpers/addres.helper.ts","shared/helpers/validators/eth.validator.ts","wallet/components/Send/Send.tsx","wallet/containers/WalletPage/WalletPage.tsx","theme.ts","index.tsx","shared/http/interceptors/loading-bar.interceptor.ts","shared/http/interceptors/auth.interceptor.ts"],"names":["module","exports","WalletView","Boolean","window","location","hostname","match","useSnackbarRef","Provider","InnerSnackbarUtilsConfigurator","props","setUseSnackbarRef","useSnackbar","useSnackbarRefProp","SnackbarUtilsConfigurator","success","msg","options","this","toast","variant","warning","info","error","enqueueSnackbar","RegisterStage","loadingBarActions","addRequest","create","removeRequest","instance","http","axios","getActiveRequestCount","createSelector","state","shared","loadingBar","requestsInProgress","showLoadingBar","activeRequests","css","cn","LoadingBar","useSelector","className","testIdBuilder","baseName","names","reduce","prev","curr","test","AboutPage","showBackButton","dispatch","useDispatch","data-testid","src","logo","alt","Button","color","onClick","push","timeout","delay","Promise","res","setTimeout","registerActions","stepBack","startRegisterAccount","generateSeed","submitSeed","confirmSeed","register","reset","startImportAccount","importAccount","initialRegisterState","stage","undefined","seed","seedConfirmed","showSteps","registerReducer","createReducer","handleAction","actions","IMPORT","STEP1","Number","includes","STEP2","getPreviousStage","generateMnemonic","split","STEP3","STEP4","password","walletActions","apiError","addWallet","addWalletSuccess","addWalletError","openBalanceView","openWalletsView","openLogView","openReceiveView","openSendInitialView","prepareSendConfirmView","openSendConfirmView","initWallets","updateWallets","updateWalletsSuccess","updateWalletsError","refreshAmounts","getRates","getRatesSuccess","getRatesError","headerBack","menu","edit","send","setSeed","setSeedSuccess","setSeedError","hideWallet","resetAccount","getRegisterState","getRegisterStage","getRegisterSeed","getShowSteps","registerEpics","combineEpics","action$","state$","pipe","filter","isActionOf","switchMap","action","payload","join","of","withLatestFrom","map","stateMigrations","0","newState","recordFromArray","array","id","obj","item","round","number","decimals","result","toFixed","parseInt","parseFloat","roundNumber","amountsHelper","getAmountsForAllTakens","tokens","wallets","amounts","symbol","token","amount","getAmountsForToken","accu","next","getAmountsForWallet","wallet","getAmounts","activeView","Wallets","activeToken","Receive","Send","SendConfirmation","Log","activeWallet","supportedTokens","navigationHelper","Balance","walletsHelper","name","_wallet","lastValuableIndex","i","length","slice","findIndex","address","initialWalletState","pollSettings","account","offset","supportedTokensRecord","usdRates","walletReducer","Reset","fee","handleEpicError","errorAction","catchError","caught","merge","message","filterActions","actionCreators","isOneAction","argument","getWalletState","getActiveView","getActiveToken","getWallets","getActiveWallet","getWalletsForActiveToken","getSupportedTokens","getSupportedTokensRecord","getUsdRates","getSendData","getSeed","getPollSettings","hdWallet","history","RatesApi","proxy","cors","Marketcap","ratesMock","data","walletEpics","Error","errorMessage","activeWallets","lastWallet","newWalletId","coin","getCoin","from","getBalances","reject","balances","fromBaseUnit","balance","private","switchMapTo","rates","ratesMap","quote","USD","price","mapRatesToTokens","mergeMap","coins","HDWallet","devConfig","initHDWallet","CoinType","ethereum","near","waves","settings","tokenId","Object","entries","balanceDataIndex","balanceData","promices","forEach","tokenWallets","walletPromises","getBalance","catch","err","nearBug","then","all","tokenIndex","walletIndex","updateBalances","tap","ignoreElements","estimateTxFee","getNetworkFee","loadingBarReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","epicMiddleware","createEpicMiddleware","rootEpic","createBrowserHistory","persistConfig","key","version","storage","migrate","createMigrate","debug","whitelist","persistedReducer","persistReducer","combineReducers","router","connectRouter","store","createStore","applyMiddleware","routerMiddleware","persistedStore","persistStore","run","SeedTag","text","hidden","hideNumber","Placeholder","sort","Math","random","SeedPanel","classes","check","onCheck","useState","confirmedSeed","setConfirmedSeed","setSuccess","shuffledSeed","setShuffledSeed","useEffect","same","JSON","stringify","bodyTagClickHandler","index","splice","footerTagClickHandler","Paper","tag","str","StepOne","onGenerate","StepTwo","onSubmit","Welcome","onCreate","onImport","onAbout","onMockedLogin","guy","disableElevation","PasswordInputParams","required","pattern","value","minLength","StepFour","onRegister","useForm","criteriaMode","handleSubmit","control","errors","showPassword","setShowPassword","setPassword","passwordConfirm","setPasswordConfirm","process","FormControl","InputLabel","htmlFor","Input","inputProps","inputRef","onChange","getValues","type","endAdornment","InputAdornment","position","IconButton","aria-label","confirm","onMouseDown","event","preventDefault","Close","Visibility","VisibilityOff","FormHelperText","validate","StepThree","onConfirm","buttonDisabled","setButtonDisabled","Disabled","disabled","Perl","isActive","Active","StepHeader","step","total","onBack","Tooltip","title","placement","disableRipple","ArrowBack","MobileStepper","steps","activeStep","backButton","nextButton","seedInputParamsFactory","validateMnemonic","validateSeed","ImportAccount","input","CreateAccountPage","components","style","margin","HelpPage","href","target","cssMod","charAt","toUpperCase","RoundButton","label","labelPosition","NoLabel","disableFocusRipple","disableTouchRipple","children","component","memo","forwardRef","ref","icon","spaceOn","displayName","WalletHeaderMode","Icon","ExpandButton","expanded","click","Expended","WalletRow","rate","rollUp","onReceiveClick","onSendClick","onEditClick","onRollUpClick","showButtons","setShowButtons","toBeOpened","setToBeOpened","Expanded","Hidden","EditWallet","walletName","onRename","onDelete","onCancel","newName","setNewName","TextField","DeleteWallet","confirmName","setConfirmName","handlers","rollUpSignal","setRollUpSignal","openEditDialog","setOpenEditDialog","openDeleteDialog","setOpenDeleteDialog","selectedWallet","setSelectedWallet","onReceive","onSend","onAdd","Dialog","onClose","open","fullWidth","maxWidth","DialogContent","dividers","onConfirmClick","noValidate","autoComplete","WalletHeader","mode","tokenAmount","tokenSymbol","fiatValue","hideBackButton","tokenName","onBackClick","callback","isInitialMount","useRef","current","addEventListener","pushState","document","URL","useNavigateBack","Info","displayType","thousandSeparator","suffix","decimalScale","hasOwnProperty","TokenRow","onSelectToken","tokensRecord","QRCode","require","navigator","clipboard","writeText","validateAddress","isEthereumAddress","onNextClick","setAddress","setAmount","handleAddressPaste","a","readText","prefix","useStyles","makeStyles","theme","root","backgroundColor","flexGrow","flexDirection","display","height","minWidth","menuButton","marginRight","spacing","toolbar","alignItems","paddingTop","minHeight","paddingBottom","toolbarHeader","borderBottom","palette","grey","width","toolbarHeaderItems","justifyContent","toolbarHeaderItemsEdgeStart","marginLeft","toolbarBody","alignSelf","drower","drowerItem","paddingRight","drowerItemIcon","drowerItemText","wrapper","footer","bottom","zeroPaddingRight","WalletPage","setState","view","handleExportSeed","toggleDrawer","walletsButtonHandlers","walletHeaderMode","Help","About","walletHeaderLabels","AppBar","Toolbar","edgeStart","edge","Badge","badgeContent","values","SwipeableDrawer","onOpen","role","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","createMuiTheme","disabledBackground","main","overrides","MuiAppBar","colorPrimary","MuiButton","fontSize","fontFamily","outlinedPrimary","border","containedPrimary","MuiLinearProgress","barColorPrimary","MuiDialog","MuiInputLabel","MuiInput","colorSecondary","underline","borderBottomColor","ReactDOM","render","ThemeProvider","maxSnack","anchorOrigin","vertical","horizontal","loading","persistor","path","exact","to","getElementById","interceptors","request","use","context","noLoadingBar","loadingBarRequestInterceptor","provider","authHeaders","providers","authHeader","authValue","headers","response","config","loadingBarResponseInterceptor","loadingBarErrorResponseInterceptor","serviceWorker","ready","registration","unregister","console","start"],"mappings":"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","file":"static/js/main.a8f4a3d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo1.8d914255.svg\";","export enum WalletView {\r\n  Balance = 'Balance',\r\n  Wallets = 'Wallets',\r\n  Log = 'Log',\r\n  Send = 'Send',\r\n  SendConfirmation = 'SendConfirmation',\r\n  Receive = 'Receive',\r\n  Help = 'Help',\r\n  About = 'About',\r\n  Reset = 'Reset',\r\n}","module.exports = __webpack_public_path__ + \"static/media/logo.38e575e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/guy_welcomes@2x.a8f3ca1a.png\";","export * from './poll-settings';\r\nexport * from './wallet';\r\nexport * from './wallet-view';","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport { useSnackbar, WithSnackbarProps } from 'notistack'\r\n\r\ninterface IProps {\r\n  setUseSnackbarRef: (showSnackbar: WithSnackbarProps) => void\r\n}\r\n\r\ntype OptionsObject = {\r\n  [key: string]: string\r\n}\r\n\r\nconst InnerSnackbarUtilsConfigurator: React.FC<IProps> = (props: IProps) => {\r\n  props.setUseSnackbarRef(useSnackbar())\r\n  return null\r\n}\r\n\r\nlet useSnackbarRef: WithSnackbarProps\r\nconst setUseSnackbarRef = (useSnackbarRefProp: WithSnackbarProps) => {\r\n  useSnackbarRef = useSnackbarRefProp\r\n}\r\n\r\nexport const SnackbarUtilsConfigurator = () => {\r\n  return <InnerSnackbarUtilsConfigurator setUseSnackbarRef={setUseSnackbarRef} />\r\n}\r\n\r\nexport default {\r\n  success(msg: string, options: OptionsObject = {}) {\r\n    this.toast(msg, { ...options, variant: 'success' })\r\n  },\r\n  warning(msg: string, options: OptionsObject = {}) {\r\n    this.toast(msg, { ...options, variant: 'warning' })\r\n  },\r\n  info(msg: string, options: OptionsObject = {}) {\r\n    this.toast(msg, { ...options, variant: 'info' })\r\n  },\r\n  error(msg: string, options: OptionsObject = {}) {\r\n    this.toast(msg, { ...options, variant: 'error' })\r\n  },\r\n  toast(msg: string, options: OptionsObject = {}) {\r\n    useSnackbarRef.enqueueSnackbar(msg, options)\r\n  }\r\n}","export enum Provider {\r\n  Marketcap = 'Marketcap',\r\n}","export enum RegisterStage {\r\n  'STEP1' = 1,\r\n  'STEP2',\r\n  'STEP3',\r\n  'STEP4',\r\n  'IMPORT',\r\n} ","import { createAction as create } from 'typesafe-actions';\r\n\r\nexport const loadingBarActions = {\r\n  addRequest: create('@loadingBar/addRequest')<void>(),\r\n  removeRequest: create('@loadingBar/removeRequest')<void>(),\r\n};\r\n","import { Store } from 'redux';\r\nimport axios, { Axios } from 'axios-observable';\r\nimport { AxiosRequestConfig } from 'axios';\r\n\r\nimport { authInterceptor } from 'shared/http/interceptors/auth.interceptor';\r\nimport { RootState } from 'state';\r\nimport { Provider } from 'shared/models/provider';\r\nimport {\r\n  loadingBarErrorResponseInterceptor,\r\n  loadingBarRequestInterceptor,\r\n  loadingBarResponseInterceptor,\r\n} from 'shared/http/interceptors/loading-bar.interceptor';\r\n\r\nlet instance: Axios | null = null;\r\n\r\nexport interface RequestConfig extends AxiosRequestConfig {\r\n  context?: {\r\n    noBasicHeaders?: boolean;\r\n    noLoadingBar?: boolean;\r\n    provider?: Provider;\r\n  };\r\n};\r\n\r\nexport const setupInterceptors = (\r\n  instance: Axios,\r\n  store: Store<RootState>,\r\n): void => {\r\n  instance.interceptors.request.use(loadingBarRequestInterceptor(store));\r\n  instance.interceptors.request.use(authInterceptor(store));\r\n\r\n  instance.interceptors.response.use(\r\n    loadingBarResponseInterceptor(store),\r\n    loadingBarErrorResponseInterceptor(store),\r\n  );\r\n};\r\n\r\nexport const http = (): Axios => {\r\n  if (!instance) {\r\n    instance = axios.create({});\r\n  }\r\n\r\n  return instance;\r\n};\r\n","import { createSelector } from 'reselect';\r\n\r\nimport { RootState } from 'state';\r\n\r\nconst getLoadingBarState = (state: RootState) => state.shared.loadingBar;\r\n\r\nconst getActiveRequestCount = createSelector(\r\n  getLoadingBarState,\r\n  state => state.requestsInProgress,\r\n);\r\n\r\nexport const showLoadingBar = createSelector(\r\n  getActiveRequestCount,\r\n  (activeRequests) => activeRequests > 0,\r\n);\r\n","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport './loading-bar.component.scss';\r\n\r\nimport { showLoadingBar } from 'shared/loading-bar/state/loading-bar.selectors';\r\n\r\nconst css = cn('LoadingBar');\r\n\r\nexport const LoadingBar: React.FC = () => {\r\n  const show = useSelector(showLoadingBar);\r\n\r\n  return show ? (\r\n    <>\r\n      <div className={css()}></div>\r\n      <div className={css('SpinnerContainer')}>\r\n        <div className={css('Spinner')}></div>\r\n      </div>\r\n    </>\r\n  ) : null;\r\n};\r\n","export const testIdBuilder = (baseName: string) => (...names: string[]) =>\r\n  names.reduce((prev, curr) => `${prev}-${curr}`, baseName);\r\n","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport { push } from 'connected-react-router';\r\nimport { Button } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport './AboutPage.scss';\r\nimport logo from 'assets/logo.svg';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\n\r\nexport const componentId = 'AboutPage';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\ninterface AboutPageProps {\r\n  showBackButton: boolean;\r\n}\r\n\r\nexport const AboutPage: React.FC<AboutPageProps> = ({ showBackButton = true }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={css()} data-testid=\"AboutPage\">\r\n      <img src={logo} className={css('Logo')} data-testid={test('Logo')} alt=\"logo\" />\r\n\r\n      <h1 className={css('Header')}> WHAT IS ZEROPOOL </h1>\r\n\r\n      <p className={css('Text')}>\r\n        ZeroPool is fully private multi-blokchain solution.\r\n        Low transaction fees, atomic swaps and common anonymity set.\r\n        Balances and transaction graph are hidden and compatibility\r\n        with network identity hiding technologies, like Tor.\r\n        You can deposit, transfer and withdraw tokens in our product.\r\n      </p>\r\n\r\n      <p className={css('Text')}>\r\n        The projec was found at ethDenver by a group of reserchers\r\n        and still developed as product with strong scientific base.\r\n      </p>\r\n\r\n      {showBackButton ?\r\n        <p className={css('Button')}>\r\n          <Button\r\n            color=\"primary\"\r\n            data-testid={test('BackButton')}\r\n             onClick={() => dispatch(push('/'))}\r\n            variant=\"contained\"\r\n          >\r\n            Back\r\n          </Button>\r\n        </p> : null}\r\n    </div>\r\n  )\r\n};\r\n","export const timeout = (delay: number) =>\r\n  new Promise( res => setTimeout(res, delay));\r\n","\r\nimport { createAction as create } from 'typesafe-actions';\r\n\r\nexport const registerActions = {\r\n  stepBack: create('@register/stepBack')<void>(),\r\n\r\n  startRegisterAccount: create('@register/startRegisterAccount')<void>(),\r\n  generateSeed: create('@register/generateSeed')<void>(),\r\n  submitSeed: create('@register/submitSeed')<void>(),\r\n  confirmSeed: create('@register/confirmSeed')<void>(),\r\n  register: create('@register/register')<string>(),\r\n  reset: create('@register/reset')<void>(),\r\n\r\n  startImportAccount: create('@register/startImportAccount')<void>(),\r\n  importAccount: create('@register/importAccount')<{ seed: string[], password: string }>(),\r\n};\r\n","import { RegisterStage } from 'register/state/models/register-stage';\r\nimport { RegisterState } from 'register/state/register.reducer';\r\n\r\ninterface registerStageStateSlice {\r\n  stage: RegisterStage | undefined;\r\n  showSteps: boolean;\r\n  seed: string[];\r\n}\r\n\r\nexport const getPreviousStage = (state: RegisterState): registerStageStateSlice => {\r\n  if (state.stage === RegisterStage.IMPORT) {\r\n    return {\r\n      stage: undefined,\r\n      showSteps: false,\r\n      seed: [],\r\n    }\r\n  }\r\n\r\n  return {\r\n    stage: state.stage === RegisterStage.STEP1 ? undefined : Number(state.stage) - 1,\r\n    showSteps: [1, undefined].includes(state.stage) ? false : true,\r\n    seed: state.stage === RegisterStage.STEP2 ? [] : state.seed,\r\n  }\r\n} ","import { ActionType, createReducer } from 'typesafe-actions';\r\n\r\nimport { registerActions as actions } from 'register/state/register.actions';\r\nimport { getPreviousStage } from 'register/state/helpers/stage.helper';\r\nimport { RegisterStage } from 'register/state/models/register-stage';\r\nimport { generateSeed } from 'register/state/helpers/seed.helper';\r\n\r\nexport interface RegisterState {\r\n  stage: RegisterStage | undefined;\r\n  seed: string[];\r\n  seedConfirmed: boolean;\r\n  showSteps: boolean;\r\n}\r\n\r\nexport const initialRegisterState: RegisterState = {\r\n  stage: undefined,\r\n  seed: [],\r\n  seedConfirmed: false,\r\n  showSteps: false,\r\n};\r\n\r\nexport const registerReducer = createReducer<\r\n  RegisterState,\r\n  ActionType<typeof actions>\r\n>(initialRegisterState)\r\n  .handleAction(actions.stepBack, state => ({\r\n    ...state,\r\n    ...getPreviousStage(state),\r\n  }))\r\n  .handleAction(actions.startRegisterAccount, state => ({\r\n    ...state,\r\n    showSteps: true,\r\n    stage: RegisterStage.STEP1,\r\n  }))\r\n  .handleAction(actions.generateSeed, state => ({\r\n    ...state,\r\n    seed: generateSeed(),\r\n    seedConfirmed: false,\r\n    stage: RegisterStage.STEP2,\r\n  }))\r\n  .handleAction(actions.submitSeed, state => ({\r\n    ...state,\r\n    seedConfirmed: false,\r\n    stage: RegisterStage.STEP3,\r\n  }))\r\n  .handleAction(actions.confirmSeed, state => ({\r\n    ...state,\r\n    seedConfirmed: true,\r\n    stage: RegisterStage.STEP4,\r\n  }))\r\n  .handleAction(actions.register, (state, password) => ({\r\n    ...state,\r\n    showSteps: false,\r\n    stage: undefined,\r\n  }))\r\n  .handleAction(actions.startImportAccount, state => ({\r\n    ...state,\r\n    showSteps: false,\r\n    stage: RegisterStage.IMPORT,\r\n  }))  \r\n  .handleAction(actions.reset, () => ({\r\n    ...initialRegisterState,\r\n  }))\r\n  .handleAction(actions.importAccount, state => ({\r\n    ...state,\r\n    showSteps: false,\r\n    stage: undefined,\r\n  }));\r\n\r\n","import { generateMnemonic, validateMnemonic } from 'zeropool-api-js/lib/utils';\r\n\r\nexport const generateSeed = () => {\r\n  return generateMnemonic().split(' ');\r\n}\r\n\r\nexport const validateSeed = (seed: string[]): boolean => {\r\n  return validateMnemonic(seed.join(' '));\r\n}\r\n","import { createAction as create } from 'typesafe-actions';\r\n\r\nimport { Token, TokenSymbol } from 'shared/models/token';\r\n\r\nimport { WalletView } from 'wallet/state/models/wallet-view';\r\nimport { Wallet } from 'wallet/state/models/wallet';\r\n\r\nexport const walletActions = {\r\n  apiError: create('@wallet/apiError')<string>(),\r\n\r\n  addWallet: create('@wallet/addWallet')<void>(),\r\n  addWalletSuccess: create('@wallet/addWalletSuccess')<{ wallets: Record<TokenSymbol, Wallet[]> }>(),\r\n  addWalletError: create('@wallet/addWalletError')<string>(),\r\n\r\n  openBalanceView: create('@wallet/openBalanceView')<void>(), // called once on wallet component first load\r\n  openWalletsView: create('@wallet/openWalletsView')<Token>(),\r\n  openLogView: create('@wallet/openLogView')<Token>(), // Log View\r\n  openReceiveView: create('@wallet/openReceiveView')<Wallet>(),\r\n  openSendInitialView: create('@wallet/openSendInitialView')<Wallet>(),\r\n  prepareSendConfirmView: create('@wallet/prepareSendConfirmView')<{ wallet: Wallet, address: string, amount: number }>(),\r\n  openSendConfirmView: create('@wallet/openSendConfirmView')<{ wallet: Wallet, address: string, amount: number, fee: number }>(),\r\n\r\n  initWallets: create('@wallet/initWallets')<void>(),\r\n  updateWallets: create('@wallet/updateWallets')<void>(),\r\n  updateWalletsSuccess: create('@wallet/updateWalletsSuccess')<{ wallets: Record<TokenSymbol, Wallet[]> }>(),\r\n  updateWalletsError: create('@wallet/updateWalletsError')<string>(),\r\n\r\n  refreshAmounts: create('@wallet/refreshAmounts')<void>(),\r\n\r\n  getRates: create('@wallet/getRates')<void>(),\r\n  getRatesSuccess: create('@wallet/getRatesSuccess')<Record<Token['name'], number>>(),\r\n  getRatesError: create('@wallet/getRates')<string>(),\r\n\r\n  headerBack: create('@wallet/header/back')<void>(),\r\n\r\n  menu: create('@wallet/menu')<WalletView>(),\r\n  edit: create('@wallet/edit')<{wallet: Wallet, name: string}>(),\r\n  send: create('@wallet/send')<void>(),\r\n\r\n  setSeed: create('@wallet/setSeed')<{ seed: string }>(),\r\n  setSeedSuccess: create('@wallet/setSeedSuccess')<void>(),\r\n  setSeedError: create('@wallet/setSeedError')<string>(),\r\n\r\n  hideWallet: create('@wallet/hideWallet')<{ wallet: Wallet }>(),\r\n  \r\n  resetAccount: create('@wallet/resetAccount')<void>(),\r\n};\r\n","import { createSelector } from 'reselect';\r\n\r\nimport { RootState } from 'state';\r\n\r\nexport const getRegisterState = (state: RootState) => state.register;\r\n\r\nexport const getRegisterStage = createSelector(\r\n  getRegisterState,\r\n  state => state.stage,\r\n);\r\n\r\nexport const getRegisterSeed = createSelector(\r\n  getRegisterState,\r\n  state => state.seed,\r\n);\r\n\r\nexport const getRegisterSeedConfirmed = createSelector(\r\n  getRegisterState,\r\n  state => state.seedConfirmed,\r\n);\r\n\r\nexport const getShowSteps = createSelector(\r\n  getRegisterState,\r\n  state => state.showSteps,\r\n);","import { Observable, of } from 'rxjs';\r\nimport { Epic, combineEpics } from 'redux-observable';\r\nimport { ActionType, isActionOf } from 'typesafe-actions';\r\nimport { withLatestFrom, filter, map, switchMap } from 'rxjs/operators';\r\n\r\nimport { walletActions } from 'wallet/state/wallet.actions';\r\nimport { registerActions } from 'register/state/register.actions';\r\nimport { getRegisterSeed } from 'register/state/register.selectors';\r\n\r\nimport { RootState } from 'state';\r\n\r\ntype Actions = ActionType<typeof registerActions>;\r\n\r\nconst importAccount$: Epic = (\r\n  action$: Observable<Actions>,\r\n  state$: Observable<RootState>,\r\n) =>\r\n  action$.pipe(\r\n    filter(isActionOf(registerActions.importAccount)),\r\n    switchMap(action => {\r\n      const seed = action.payload.seed.join(' ');\r\n      return of(\r\n        registerActions.reset(),\r\n        walletActions.setSeed({seed}),\r\n      );\r\n    }),\r\n  );\r\n\r\nconst register$: Epic = (\r\n  action$: Observable<Actions>,\r\n  state$: Observable<RootState>,\r\n) =>\r\n  action$.pipe(\r\n    filter(isActionOf(registerActions.register)),\r\n    withLatestFrom(state$.pipe(map(getRegisterSeed))),\r\n    switchMap(([_action, seed]) => {\r\n      return of(\r\n        registerActions.reset(),          \r\n        walletActions.setSeed({ seed: seed.join(' ')}),\r\n      );\r\n    }),\r\n  );\r\n\r\nexport const registerEpics: Epic = combineEpics(\r\n  importAccount$,\r\n  register$,\r\n)","import { RootState } from \"state\";\r\n\r\n// @todo check maybe it is possible to get rid of any.\r\nexport const stateMigrations = {\r\n  0: (state: any): any => {\r\n    const newState: RootState = {\r\n      ...state,\r\n    };\r\n\r\n    return {\r\n      ...newState,\r\n    };\r\n  },\r\n};\r\n","export const recordFromArray = <T>(array: T[], id: string = 'id'): Record<string, T> =>\r\n  array.reduce((obj, item) => { obj[item[id]] = item; return obj }, {});\r\n","export const roundNumber = (number: number, decimals: number) => {\r\n  const result = Number(number+'').toFixed(parseInt(decimals+''));\r\n  \r\n  return parseFloat(result); \r\n}\r\n\r\nexport const round = (number: number) => roundNumber(number, 12);","import { Token, TokenSymbol } from 'shared/models/token';\r\nimport { round } from 'shared/util/round-number';\r\n\r\nimport { Wallet } from 'wallet/state/models/wallet';\r\nimport { WalletView } from 'wallet/state/models';\r\nimport { WalletState } from 'wallet/state/wallet.reducer';\r\n\r\nexport const amountsHelper = {\r\n  getAmountsForAllTakens: (tokens: Token[], wallets: Record<TokenSymbol, Wallet[]> | null): Record<TokenSymbol, number>|null => {\r\n    if (!wallets) return null;\r\n    \r\n    const amounts: Record<TokenSymbol, number> = {};\r\n    \r\n    for (let token of tokens) {\r\n      amounts[token.symbol] = 0;\r\n    }\r\n    \r\n    for (let token of tokens) {\r\n      let amount = 0;\r\n\r\n      for (let wallet of wallets[token.symbol]) {\r\n        amount += wallet.amount;   \r\n      }\r\n\r\n      amounts[token.symbol] = round(amount);\r\n    };\r\n\r\n    return amounts;\r\n  },\r\n\r\n  getAmountsForToken: (token: Token, wallets: Wallet[]): Record<TokenSymbol, number> => ({\r\n    [token.symbol]: round(wallets.reduce((accu, next) => accu += next.amount, 0)),\r\n  }),\r\n\r\n  getAmountsForWallet: (wallet: Wallet | null): Record<TokenSymbol, number> => {\r\n    \r\n    return wallet ? ({ [wallet.token.symbol]: wallet.amount }) : {};\r\n  },\r\n\r\n  getAmounts: (state: WalletState) => {\r\n    switch (state.activeView) {\r\n      case WalletView.Wallets:\r\n        return state.activeToken && state.wallets ? \r\n          amountsHelper.getAmountsForToken(state.activeToken, state.wallets[state.activeToken.symbol]) :\r\n          state.amounts;\r\n      case WalletView.Receive:\r\n      case WalletView.Send:\r\n      case WalletView.SendConfirmation:\r\n      case WalletView.Log:\r\n        return state.activeWallet ? \r\n          amountsHelper.getAmountsForWallet(state.activeWallet):\r\n          state.amounts;\r\n      default:\r\n        return amountsHelper.getAmountsForAllTakens(state.supportedTokens, state.wallets);\r\n    }\r\n  }\r\n};\r\n","import { WalletState } from 'wallet/state/wallet.reducer';\r\nimport { amountsHelper } from 'wallet/state/helpers/amounts.helper';\r\nimport { WalletView, Wallet } from 'wallet/state/models';\r\n\r\n\r\nexport const navigationHelper = {\r\n  handleBackClick: (state: WalletState): WalletState => {\r\n    switch (state.activeView) {\r\n      case WalletView.Send:\r\n        return state.activeToken && state.wallets ? {\r\n          ...state,\r\n          activeView: WalletView.Wallets,\r\n          activeWallet: null,\r\n          amounts: amountsHelper.getAmountsForToken(state.activeToken, state.wallets[state.activeToken.symbol]),\r\n        } : state;\r\n\r\n      case WalletView.SendConfirmation:\r\n        return state.activeToken && state.activeWallet ? {\r\n          ...state,\r\n          activeView: WalletView.Send,\r\n          amounts: amountsHelper.getAmountsForWallet(state.activeWallet),\r\n        } : state;\r\n\r\n      case WalletView.Receive: \r\n        return state.activeToken && state.wallets ? {\r\n          ...state,\r\n          activeView: WalletView.Wallets,\r\n          activeWallet: null,\r\n          amounts: amountsHelper.getAmountsForToken(state.activeToken, state.wallets[state.activeToken.symbol]),\r\n        } : state;\r\n\r\n      default:\r\n        return {\r\n          ...state,\r\n          activeView: WalletView.Balance,\r\n          activeToken: null,\r\n          activeWallet: null,\r\n          amounts: amountsHelper.getAmountsForAllTakens(state.supportedTokens, state.wallets),\r\n        };\r\n    }\r\n  },\r\n\r\n  getReceiveView: (state: WalletState, wallet: Wallet) => ( \r\n    state.activeToken && state.wallets ? {\r\n      ...state,\r\n      activeView: WalletView.Receive,\r\n      activeWallet: wallet,\r\n      amounts: amountsHelper.getAmountsForWallet(wallet),\r\n    } : state\r\n  ),\r\n\r\n  getSendInitialView: (state: WalletState, wallet: Wallet) => ( \r\n    state.activeToken && state.wallets ? {\r\n      ...state,\r\n      activeView: WalletView.Send,\r\n      activeWallet: wallet,\r\n      amounts: amountsHelper.getAmountsForWallet(wallet),\r\n    } : state\r\n  ),\r\n\r\n  getBalanceView: (state: WalletState) => ({\r\n    ...state,\r\n    activeToken: null,\r\n    activeView: WalletView.Balance,\r\n    activeWallet: null,\r\n    amounts: amountsHelper.getAmountsForAllTakens(state.supportedTokens, state.wallets),\r\n  }),\r\n};\r\n","import { Wallet } from 'wallet/state/models/wallet';\r\n\r\nexport const walletsHelper = {\r\n  renameWallet: (wallets: Wallet[], wallet: Wallet, name: string): Wallet[] => {\r\n    const result: Wallet[] = [];\r\n\r\n    for (const _wallet of wallets) {\r\n      if (_wallet === wallet) {\r\n        result.push({\r\n          ..._wallet,\r\n          name,\r\n        })\r\n      } else {\r\n        result.push(_wallet);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  },\r\n\r\n  hideWallet: (wallets: Wallet[], wallet: Wallet) => {\r\n    const result: Wallet[] = [];\r\n\r\n    for (const _wallet of wallets) {\r\n      if (_wallet !== wallet) {\r\n        result.push(_wallet)\r\n      }\r\n    }\r\n\r\n    return result;\r\n  },\r\n\r\n  addWallet: (wallets: Wallet[]): Wallet[] => {\r\n    const first: Wallet = wallets[0];\r\n\r\n    return [\r\n      ...wallets,\r\n      {\r\n        ...first,\r\n        name: `Wallet${first.token.symbol}${wallets.length}`,\r\n        amount: 0,\r\n        address: first.address + wallets.length,\r\n      }\r\n    ];\r\n  },\r\n\r\n  reduceWallets: (wallets: Wallet[]): Wallet[] => {\r\n    let lastValuableIndex = 0;\r\n\r\n    for (let i = wallets.length - 1; i > 0; i--) {\r\n      if (wallets[i].amount > 0) {\r\n        lastValuableIndex = i;\r\n        break;\r\n      }\r\n    }\r\n    \r\n    return wallets.slice(0, lastValuableIndex ? lastValuableIndex + 1 : 1);\r\n  },\r\n\r\n  getActiveIndex: (wallets: Wallet[], activeWallet: Wallet): number =>\r\n    wallets.findIndex(wallet => wallet.address === activeWallet.address)\r\n};\r\n","import { ActionType, createReducer } from 'typesafe-actions';\r\n\r\nimport supportedTokens from 'assets/settings/supported-tokens.json'\r\n\r\nimport { recordFromArray } from 'shared/util/from';\r\nimport { Token, TokenSymbol } from 'shared/models/token';\r\n\r\nimport { walletActions as actions } from 'wallet/state/wallet.actions';\r\nimport { navigationHelper } from 'wallet/state/helpers/navigation.helper';\r\nimport { amountsHelper } from 'wallet/state/helpers/amounts.helper';\r\nimport { walletsHelper } from 'wallet/state/helpers/wallets.helper';\r\nimport { PollSettings } from 'wallet/state/models/poll-settings';\r\nimport { WalletView } from 'wallet/state/models/wallet-view';\r\nimport { Wallet } from 'wallet/state/models/wallet';\r\n\r\nexport const initialWalletName = 'Main wallet';\r\n\r\nconst pollSettingsDefault: PollSettings = { account: 0, amount: 5, offset: 0 };\r\n\r\nexport interface WalletState {\r\n  activeView: WalletView;\r\n  activeToken: Token | null;\r\n  activeWallet: Wallet | null;\r\n  amounts: Record<TokenSymbol, number> | null;\r\n  pollSettings: PollSettings;\r\n  seed: string | null;\r\n  send?: { wallet: Wallet, address: string, amount: number, fee: number };\r\n  supportedTokens: Token[];\r\n  supportedTokensRecord: Record<TokenSymbol, Token>;\r\n  usdRates: Record<TokenSymbol, number>;\r\n  wallets: Record<TokenSymbol, Wallet[]> | null;\r\n}\r\n\r\nexport const initialWalletState: WalletState = {\r\n  activeView: WalletView.Balance,\r\n  activeToken: null,\r\n  activeWallet: null,\r\n  amounts: null,\r\n  pollSettings: pollSettingsDefault,\r\n  seed: null,\r\n  supportedTokens: supportedTokens,\r\n  supportedTokensRecord: recordFromArray(supportedTokens, 'symbol'),\r\n  usdRates: {},\r\n  wallets: null,\r\n};\r\n\r\nexport const walletReducer = createReducer<\r\n  WalletState,\r\n  ActionType<typeof actions>\r\n>(initialWalletState)\r\n  .handleAction(actions.menu, (state, { payload }) => ({\r\n    ...state,\r\n    activeView: payload !== WalletView.Reset ? payload : state.activeView,\r\n  }))\r\n  .handleAction(actions.headerBack, state => ({\r\n    ...navigationHelper.handleBackClick(state),\r\n  }))\r\n  .handleAction(actions.openBalanceView, state => ({\r\n    ...navigationHelper.getBalanceView(state),\r\n  }))\r\n  .handleAction(actions.openWalletsView, (state, { payload }) => ({\r\n    ...state,\r\n    activeView: WalletView.Wallets,\r\n    activeToken: payload,\r\n  }))\r\n  .handleAction(actions.openLogView, (state, { payload }) => ({\r\n    ...state,\r\n    activeView: WalletView.Log,\r\n    activeToken: payload,\r\n  }))\r\n  .handleAction(actions.openReceiveView, (state, { payload }) => ({\r\n    ...navigationHelper.getReceiveView(state, payload),\r\n  }))\r\n  .handleAction(actions.openSendInitialView, (state, { payload }) => ({\r\n    ...navigationHelper.getSendInitialView(state, payload),\r\n  }))\r\n  .handleAction(actions.openSendConfirmView, (state, { payload }) => ({\r\n    ...state,\r\n    activeView: WalletView.SendConfirmation,\r\n    send: {\r\n      wallet: payload.wallet,\r\n      address: payload.address,\r\n      amount: payload.amount,\r\n      fee: payload.fee,\r\n    }\r\n  }))\r\n  .handleAction(actions.setSeed, (state, { payload }) => ({\r\n    ...state,\r\n    seed: payload.seed,\r\n  }))\r\n  .handleAction(actions.updateWalletsSuccess, (state, { payload }) => ({\r\n    ...state,\r\n    wallets: payload.wallets,\r\n    activeWallet: state.activeWallet && state.activeToken ? \r\n      payload.wallets[state.activeToken.symbol][\r\n        walletsHelper.getActiveIndex(payload.wallets[state.activeToken.symbol], state.activeWallet)\r\n      ] : null,\r\n  }))\r\n  .handleAction(actions.refreshAmounts, state => ({\r\n    ...state,\r\n    amounts: amountsHelper.getAmounts(state),\r\n  }))\r\n  .handleAction(actions.resetAccount, () =>\r\n    initialWalletState\r\n  )\r\n  .handleAction(actions.edit, (state , { payload }) => ({\r\n    ...state,\r\n    wallets: !(state.activeToken && state.wallets) ? state.wallets : {\r\n      ...state.wallets,\r\n      [state.activeToken.symbol]: walletsHelper.renameWallet(\r\n        state.wallets[state.activeToken.symbol], \r\n        payload.wallet,\r\n        payload.name,\r\n      ),\r\n    }\r\n  }))\r\n  .handleAction(actions.addWalletSuccess, (state , { payload }) => ({\r\n    ...state,\r\n    wallets: payload.wallets,\r\n  }))\r\n  .handleAction(actions.hideWallet, (state , { payload }) => ({\r\n    ...state,\r\n    wallets: !(state.activeToken && state.wallets) ? state.wallets : {\r\n      ...state.wallets,\r\n      [state.activeToken.symbol]: walletsHelper.hideWallet(\r\n        state.wallets[state.activeToken.symbol],\r\n        payload.wallet,\r\n      ),\r\n    }\r\n  }))\r\n  .handleAction(actions.getRatesSuccess, (state, { payload }) => ({\r\n    ...state,\r\n    usdRates: payload,\r\n  }));\r\n ","import { ActionCreatorBuilder } from 'typesafe-actions';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { merge, of } from 'rxjs';\r\n\r\nexport const handleEpicError = (errorAction: ActionCreatorBuilder<string, string>) =>\r\n  catchError((error, caught) => \r\n    merge(of(errorAction(error.message)), caught)\r\n  );\r\n","import { pipe } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ActionCreator, isActionOf } from 'typesafe-actions';\r\n\r\n/**\r\n * @todo check this operator, because it swallow\r\n * action payload type when used for single action\r\n */\r\nexport const filterActions = <T extends string>(\r\n  ...actionCreators: ActionCreator<T>[]\r\n) => {\r\n  const isOneAction = actionCreators.length === 1;\r\n  const argument = isOneAction ? actionCreators[0] : actionCreators;\r\n  return pipe(filter(isActionOf(argument)));\r\n};\r\n","import { createSelector } from 'reselect';\r\n\r\nimport { RootState } from 'state';\r\n\r\nimport { WalletState } from 'wallet/state/wallet.reducer';\r\nimport { walletsHelper } from 'wallet/state/helpers/wallets.helper';\r\n\r\nexport const getWalletState = (state: RootState): WalletState => state.account;\r\n\r\nexport const getActiveView = createSelector(\r\n  getWalletState,\r\n  state => state.activeView,\r\n);\r\n\r\nexport const getActiveToken = createSelector(\r\n  getWalletState,\r\n  state => state.activeToken,\r\n);\r\n\r\nexport const getWallets = createSelector(\r\n  getWalletState,\r\n  state => state.wallets,\r\n  );\r\n  \r\nexport const getActiveWallet = createSelector(\r\n  getWalletState,\r\n  state => state.activeWallet,\r\n);\r\n\r\nexport const getActiveWalletIndex = createSelector(\r\n  getWallets,\r\n  getActiveWallet,\r\n  getActiveToken,\r\n  (wallets, wallet, token) => \r\n    wallets && token && wallet ? \r\n      walletsHelper.getActiveIndex(\r\n        wallets[token?.symbol], \r\n        wallet,\r\n      ) : null,\r\n);\r\n\r\n\r\nexport const getAmounts = createSelector(\r\n  getWalletState,\r\n  state => state.amounts,\r\n);\r\n\r\nexport const getWalletsForActiveToken = createSelector(\r\n  getWalletState,\r\n  state => state.activeToken && state.wallets ? state.wallets[state.activeToken.symbol] : null,\r\n);\r\n\r\nexport const getSupportedTokens = createSelector(\r\n  getWalletState,\r\n  state => state.supportedTokens,\r\n);\r\n\r\nexport const getSupportedTokensRecord = createSelector(\r\n  getWalletState,\r\n  state => state.supportedTokensRecord,\r\n);\r\n\r\nexport const getUsdRates = createSelector(\r\n  getWalletState,\r\n  state => state.usdRates,\r\n);\r\n\r\nexport const getSendData = createSelector(\r\n  getWalletState,\r\n  state => state.send,\r\n);\r\n\r\nexport const getSeed = createSelector(\r\n  getWalletState,\r\n  state => state.seed,\r\n);\r\n\r\nexport const getPollSettings = createSelector(\r\n  getWalletState,\r\n  state => state.pollSettings,\r\n);\r\n","import { catchError, map } from 'rxjs/operators';\r\nimport { from, of } from 'rxjs';\r\nimport { HDWallet, CoinType, devConfig } from 'zeropool-api-js';\r\n\r\nimport { Token } from 'shared/models';\r\nimport { nearBug } from 'shared/util/waves-bug';\r\n\r\nexport let hdWallet: HDWallet | null = null;\r\n\r\nexport function initHDWallet(seed: string, coins: CoinType[]): HDWallet {\r\n  hdWallet = new HDWallet(seed, devConfig, coins);\r\n  return hdWallet;\r\n}\r\n\r\nexport function getNetworkFee(token: Token) {\r\n  if (!hdWallet) { throw Error('API not available!') }\r\n\r\n  const coin = hdWallet.getCoin(token.name as CoinType);\r\n  \r\n  if (!coin) { \r\n    throw Error(`Can't estimate fee for ${token.symbol}`) \r\n  }\r\n\r\n  return from(coin.estimateTxFee())\r\n    .pipe(\r\n      map((fee) => fee),\r\n      catchError((err) => { \r\n        // if (nearBug(err)) { return of({fee: 0}) }\r\n        throw Error(err.message) \r\n      }),\r\n    )\r\n}\r\n","import { Rate } from 'shared/models/rate';\r\nimport { Token, TokenSymbol } from 'shared/models/token';\r\nimport { recordFromArray } from 'shared/util/from';\r\n\r\nexport const mapRatesToTokens =\r\n  (rates: Rate<Token>[], tokens: Token[]): Record<TokenSymbol, number> => {\r\n    const result: Record<TokenSymbol, number> = {};\r\n    const ratesMap = recordFromArray(rates, 'symbol');\r\n\r\n    for (const token of tokens) {\r\n      if (ratesMap[token.symbol]) {\r\n        result[token.symbol] = ratesMap[token.symbol].quote.USD.price;\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }","import storage from 'redux-persist/lib/storage';\r\nimport { PersistConfig } from 'redux-persist/es/types';\r\nimport { createBrowserHistory, History } from 'history';\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\r\nimport { combineEpics, createEpicMiddleware } from 'redux-observable';\r\nimport { persistStore, persistReducer, createMigrate } from 'redux-persist';\r\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\n\r\nimport { registerReducer } from 'register/state/register.reducer';\r\nimport { registerEpics } from 'register/state/register.epics';\r\n\r\nimport { stateMigrations } from 'state-migrations';\r\nimport { walletReducer } from 'wallet/state/wallet.reducer';\r\nimport { walletEpics } from 'wallet/state/wallet.epics';\r\nimport { loadingBarReducer } from 'shared/loading-bar/state/loading-bar.reducer';\r\n\r\n//#region Setup Devtools \r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: <R>(a: R) => R;\r\n  }\r\n}\r\n\r\nconst devToolsCompose = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\n\r\nconst composeEnhancers = devToolsCompose || compose;\r\n//#endregion\r\n\r\n//#region Setup Epics\r\nconst epicMiddleware = createEpicMiddleware();\r\n\r\nconst rootEpic = combineEpics(\r\n  registerEpics,\r\n  walletEpics,\r\n  // alertsEpics,\r\n  // notificationsEpics,\r\n);\r\n//#endregion \r\n\r\n//#region Setup Reducers\r\nexport type RootState = NonNullable<\r\n  Parameters<ReturnType<typeof createRootReducer>>[0]\r\n>;\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nexport const createRootReducer = (history: History) =>\r\n  combineReducers({\r\n    register: registerReducer,\r\n    account: walletReducer,\r\n    router: connectRouter(history),\r\n    shared: combineReducers({\r\n      loadingBar: loadingBarReducer,\r\n      //   // alerts: alertsReducer,\r\n      //   // notifications: notificationsReducer,\r\n      //   // menuBar: menuBarReducer,\r\n    })\r\n  });\r\n//#endregion\r\n\r\n//#region Setup Persisted Store\r\nconst persistConfig: PersistConfig<RootState> = {\r\n  key: 'root',\r\n  version: 0,\r\n  storage,\r\n  migrate: createMigrate(stateMigrations, { debug: false }),\r\n  whitelist: ['register', 'account'],\r\n};\r\n\r\nconst persistedReducer = persistReducer(\r\n  persistConfig,\r\n  createRootReducer(history),\r\n);\r\n\r\nexport const store = createStore(\r\n  persistedReducer,\r\n  composeEnhancers(applyMiddleware(epicMiddleware, routerMiddleware(history))),\r\n);\r\n\r\nexport const persistedStore = persistStore(store);\r\n//#endregion\r\n\r\nepicMiddleware.run(rootEpic);","import { of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { http, RequestConfig } from 'shared/http/http';\r\nimport { getHTTPData } from 'shared/operators/get-http-data.operator';\r\nimport { Provider } from 'shared/models/provider';\r\nimport { Token } from 'shared/models/token';\r\nimport { Rate } from 'shared/models/rate';\r\n\r\nimport ratesMock from 'assets/mocks/rates.mock.json';\r\nimport proxy from 'assets/settings/proxy.json';\r\n\r\nconst useMock = true;\r\n\r\nexport const RatesApi = {\r\n\r\n  getRates() {\r\n    const url = proxy.cors + `https://pro-api.coinmarketcap.com/v1/cryptocurrency/listings/latest`;\r\n    const config: RequestConfig = {\r\n      params: {\r\n      },\r\n      context: {\r\n        noLoadingBar: true,\r\n        provider: Provider.Marketcap,\r\n      },\r\n    };\r\n\r\n    if (useMock) {\r\n      return of(ratesMock.data);\r\n    }\r\n\r\n    return http()\r\n      .get<{ status: any, data: Rate<Token>[] }>(url, config)\r\n      .pipe(\r\n        getHTTPData(),\r\n        map(({status, data}) => data),\r\n      );\r\n  },\r\n};\r\n","import { push } from 'connected-react-router';\r\nimport { Balance, CoinType } from 'zeropool-api-js';\r\nimport { Epic, combineEpics } from 'redux-observable';\r\nimport { from, Observable, of } from 'rxjs';\r\nimport { ActionType, isActionOf } from 'typesafe-actions';\r\nimport { switchMapTo, map, withLatestFrom, filter, switchMap, mergeMap, ignoreElements, tap } from 'rxjs/operators';\r\n\r\nimport { Token, TokenSymbol, Rate } from 'shared/models';\r\nimport { promiseWithError } from 'shared/util/promise-with-error';\r\nimport { handleEpicError } from 'shared/operators/handle-epic-error.operator';\r\nimport { filterActions } from 'shared/operators/filter-actions.operator';\r\nimport toast from 'shared/helpers/toast.helper';\r\n\r\nimport { getActiveToken, getPollSettings, getSeed, getSupportedTokens, getWallets } from 'wallet/state/wallet.selectors';\r\nimport { getNetworkFee, hdWallet, initHDWallet } from 'wallet/api/zeropool.api';\r\nimport { Wallet, WalletView } from 'wallet/state/models';\r\nimport { mapRatesToTokens } from 'wallet/state/helpers/map-rates-to-tokens';\r\nimport { updateBalances } from 'wallet/state/helpers/update-balances.helper';\r\nimport { walletsHelper } from 'wallet/state/helpers/wallets.helper';\r\nimport { walletActions } from 'wallet/state/wallet.actions';\r\nimport { RatesApi } from 'wallet/api/rates.api';\r\n\r\nimport { RootState } from 'state';\r\nimport { getPayload } from 'shared/operators/get-payload.operator';\r\n\r\ntype Actions = ActionType<typeof walletActions>;\r\n\r\nconst getRates$: Epic = (\r\n  action$: Observable<Actions>,\r\n  state$: Observable<RootState>,\r\n) =>\r\n  action$.pipe(\r\n    filter(isActionOf(walletActions.getRates)),\r\n    switchMapTo((RatesApi.getRates() as Observable<Rate<Token>[]>).pipe(\r\n      withLatestFrom(state$.pipe(map(getSupportedTokens))),\r\n      map(([ratesData, tokens]) => mapRatesToTokens(ratesData, tokens)),\r\n      map(rates => walletActions.getRatesSuccess(rates))\r\n    )),\r\n    handleEpicError(walletActions.getRatesError),\r\n  );\r\n\r\n  const redirectToTheWalletOnSetSeed$: Epic = (\r\n    action$: Observable<Actions>,\r\n    state$: Observable<RootState>,\r\n  ) => \r\n  action$.pipe(\r\n    filter(isActionOf(walletActions.setSeed)),\r\n    switchMapTo(of(push('/wallet'))),\r\n  );\r\n\r\n  const resetAccount$: Epic = (\r\n    action$: Observable<Actions>,\r\n    state$: Observable<RootState>,\r\n  ) =>\r\n    action$.pipe(\r\n      filter(isActionOf(walletActions.menu)),\r\n      filter(action => action.payload === WalletView.Reset),\r\n      mergeMap(action => {\r\n        toast.success('Wallet reseted and data cleared');\r\n        \r\n        return of(\r\n          push('/welcome'), \r\n          walletActions.resetAccount(),\r\n        );\r\n      }),\r\n    );\r\n\r\n  const initApi$: Epic = (\r\n    action$: Observable<Actions>,\r\n    state$: Observable<RootState>,\r\n  ) =>\r\n    action$.pipe(\r\n      filterActions(walletActions.openBalanceView),\r\n      withLatestFrom(\r\n        state$.pipe(map(getSeed)),\r\n        state$.pipe(map(getWallets)),\r\n      ),\r\n      mergeMap(([, seed, wallets]) => {\r\n        if (seed) {\r\n          const hdWallet = initHDWallet(seed, [ CoinType.ethereum, CoinType.near, CoinType.waves ]);\r\n          \r\n          return of(!wallets ? walletActions.initWallets() : walletActions.updateWallets());\r\n        } else {\r\n\r\n          return of(\r\n            push('/welcome'),\r\n            walletActions.setSeedError('Seed phrase not set'),\r\n          );\r\n        }\r\n      }),\r\n      handleEpicError(walletActions.setSeedError),\r\n    );\r\n\r\n  const initWallets$: Epic = (\r\n    action$: Observable<Actions>,\r\n    state$: Observable<RootState>,\r\n  ) =>\r\n    action$.pipe(\r\n      filterActions(walletActions.initWallets),\r\n      withLatestFrom(\r\n        state$.pipe(map(getPollSettings)),\r\n        state$.pipe(map(getSupportedTokens)),\r\n      ),\r\n      switchMap(([, settings, tokens]) => {\r\n        if (!hdWallet) { throw Error('Api not initialized!'); }\r\n          \r\n        return from(hdWallet.getBalances(settings.amount))\r\n          .pipe(\r\n            mergeMap((balances) => {\r\n              const wallets: Record<TokenSymbol, Wallet[]> = {};\r\n              \r\n              for (const token of tokens) {\r\n                const tokenId = token.symbol;\r\n                wallets[tokenId] = [];\r\n\r\n                for (const [balanceDataIndex, balanceData] of Object.entries(balances[token.name])) {\r\n                  wallets[tokenId].push({\r\n                    account: settings.account,\r\n                    address: (balanceData as Balance).address,\r\n                    id: +balanceDataIndex,\r\n                    amount: +(balanceData as Balance).balance,\r\n                    name: `Wallet${tokenId}${balanceDataIndex}`,\r\n                    private: false,\r\n                    token: token,\r\n                  });\r\n                }\r\n\r\n                wallets[tokenId] = walletsHelper.reduceWallets(wallets[tokenId]);\r\n              }\r\n\r\n              return of(\r\n                walletActions.getRates(), \r\n                walletActions.updateWalletsSuccess({wallets})\r\n              );\r\n            }),\r\n          )\r\n      }),\r\n      handleEpicError(walletActions.updateWalletsError),\r\n    );\r\n\r\n  const updateWallets$: Epic = (\r\n    action$: Observable<Actions>,\r\n    state$: Observable<RootState>,\r\n  ) =>\r\n    action$.pipe(\r\n      filterActions(walletActions.updateWallets),\r\n      withLatestFrom(\r\n        state$.pipe(map(getWallets)),\r\n        state$.pipe(map(getSupportedTokens)),\r\n      ),\r\n      switchMap(([, wallets, tokens]) => {\r\n        if (!hdWallet) { throw Error('Api not initialized!') }\r\n        if (!wallets) { throw Error('No wallets exists at the moment!') }\r\n\r\n        return updateBalances(hdWallet, wallets, tokens);\r\n      }),\r\n      mergeMap(wallets => {\r\n        toast.success('Balances updated');\r\n\r\n        return of(\r\n          walletActions.getRates(), \r\n          walletActions.updateWalletsSuccess({wallets}),\r\n        )\r\n      }),\r\n      handleEpicError(walletActions.updateWalletsError),\r\n    );\r\n  \r\n  const addWallet$: Epic = (\r\n    action$: Observable<Actions>,\r\n    state$: Observable<RootState>,\r\n  ) =>\r\n    action$.pipe(\r\n      filterActions(walletActions.addWallet),\r\n      withLatestFrom(\r\n        state$.pipe(map(getWallets)),\r\n        state$.pipe(map(getActiveToken)),\r\n      ),\r\n      switchMap(([, wallets, activeToken]) => {\r\n        if (!hdWallet) { throw Error('Api not initialized!'); }\r\n        if (!(wallets && activeToken)) { throw Error('No wallets or selected token!'); }\r\n\r\n        const activeWallets = wallets[activeToken.symbol];\r\n        const lastWallet = activeWallets[activeWallets.length - 1];\r\n        const newWalletId = lastWallet.id + 1;\r\n        const coin = hdWallet.getCoin(activeToken.name as CoinType)\r\n        \r\n        if (!coin) { throw Error(`Can not access ${activeToken.name} data!`); }\r\n\r\n        return from(\r\n          coin.getBalances(1, newWalletId) || \r\n          promiseWithError(`Can't get ballance of ${activeToken.name}`)\r\n        ).pipe(\r\n          map(balances => walletActions.addWalletSuccess({ \r\n            wallets: {\r\n              ...wallets,\r\n              [activeToken.symbol]: [\r\n                ...wallets[activeToken.symbol],\r\n                {\r\n                  account: lastWallet.account,\r\n                  address: (balances as Balance[])[0].address,\r\n                  token: { ...activeToken },\r\n                  id: newWalletId,\r\n                  amount: +coin.fromBaseUnit((balances as Balance[])[0].balance),\r\n                  name: `Wallet${activeToken.symbol}${newWalletId}`,\r\n                  private: false,\r\n                }\r\n              ]\r\n            }\r\n          }))\r\n        )\r\n      }),\r\n      handleEpicError(walletActions.addWalletError),\r\n    );\r\n\r\n    const refreshAmounts$: Epic = (\r\n      action$: Observable<Actions>,\r\n      state$: Observable<RootState>,\r\n    ) =>\r\n      action$.pipe(\r\n        filterActions(walletActions.updateWalletsSuccess),\r\n        map(() => walletActions.refreshAmounts()),\r\n      );\r\n\r\n    const openSendConfirmView$: Epic = (\r\n      action$: Observable<Actions>,\r\n      state$: Observable<RootState>,\r\n    ) =>\r\n      action$.pipe(\r\n        filter(isActionOf(walletActions.prepareSendConfirmView)),\r\n        getPayload(),\r\n        switchMap((payload) => getNetworkFee(payload.wallet.token).pipe(\r\n          map((fee) => walletActions.openSendConfirmView({\r\n            ...payload, fee: +fee.fee \r\n          }))\r\n        )),\r\n        handleEpicError(walletActions.apiError)\r\n      );\r\n\r\n    const handleErrorActions$: Epic = (\r\n      action$: Observable<Actions>,\r\n      state$: Observable<RootState>,\r\n    ) =>\r\n      action$.pipe(\r\n        filter(isActionOf([\r\n          walletActions.addWalletError,\r\n          walletActions.setSeedError,\r\n          walletActions.updateWalletsError,\r\n          walletActions.apiError,\r\n        ])),\r\n        tap(({payload}) => {\r\n          toast.error(payload);\r\n        }),\r\n        ignoreElements(),\r\n      );\r\n\r\n\r\nexport const walletEpics: Epic = combineEpics(\r\n  addWallet$,\r\n  getRates$,\r\n  initApi$,\r\n  resetAccount$,\r\n  redirectToTheWalletOnSetSeed$,\r\n  initWallets$,\r\n  updateWallets$,\r\n  handleErrorActions$,\r\n  refreshAmounts$,\r\n  openSendConfirmView$,\r\n);\r\n","export const promiseWithError = (errorMessage: string) => \r\n  Promise.reject(new Error(errorMessage));\r\n","import { CoinType, HDWallet } from 'zeropool-api-js';\r\nimport { from, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { nearBug } from 'shared/util/waves-bug';\r\nimport { Token, TokenSymbol } from 'shared/models/token';\r\n\r\nimport { Wallet } from 'wallet/state/models';\r\n\r\nexport const updateBalances = (\r\n  hdWallet: HDWallet, \r\n  wallets: Record<TokenSymbol, Wallet[]>,\r\n  tokens: Token[],\r\n): Observable<Record<string, Wallet[]>> => {\r\n  const promices: Promise<string[]>[] = [];\r\n  const result: Record<string, Wallet[]> = {};\r\n\r\n  tokens.forEach(token => {\r\n    const tokenWallets = wallets[token.symbol];\r\n    const walletPromises: Promise<string>[] = [];\r\n    const coin = hdWallet?.getCoin(token.name as CoinType);\r\n\r\n    if (!coin) { throw Error(`Can not access ${token.name} data!`) }\r\n\r\n    tokenWallets.forEach(wallet => {\r\n      walletPromises.push(\r\n        coin.getBalance(wallet.id)\r\n          .catch(err => { \r\n            if (nearBug(err)) {\r\n              return '0';\r\n            } \r\n\r\n            throw Error(err);\r\n          })\r\n          .then((balance) => {\r\n            try {\r\n              return coin.fromBaseUnit(balance);\r\n            } catch (err) {\r\n            // Waves Fix\r\n              if (typeof(err?.message) === 'string' && err.message.includes('not implemented')) {\r\n                return '0';\r\n              } \r\n              throw Error(err?.message);\r\n            }\r\n          })\r\n      );\r\n    });\r\n\r\n    promices.push(Promise.all(walletPromises)); \r\n  });\r\n\r\n  return from(Promise.all(promices)).pipe(\r\n    map(balances => {\r\n      tokens.forEach((token, tokenIndex) => {\r\n        result[token.symbol] = wallets[token.symbol].map((wallet, walletIndex) => ({\r\n          ...wallet,\r\n          // amount: wallets[token.symbol][walletIndex].amount + 1, // for test purpose\r\n          amount: +balances[tokenIndex][walletIndex],\r\n        }));\r\n      })\r\n\r\n      return result;\r\n    })\r\n  )\r\n};\r\n","export const nearBug = (err: Error) => \r\n  typeof(err?.message) === 'string' && \r\n  err.message.includes('[-32000]')","import { map } from \"rxjs/operators\";\r\nimport { PayloadAction } from \"typesafe-actions\";\r\n\r\nexport const getPayload = <T>() => \r\n  map((action: PayloadAction<string, T>) => action.payload);","import { ActionType, createReducer } from 'typesafe-actions';\r\n\r\nimport { loadingBarActions } from 'shared/loading-bar/state/loading-bar.actions';\r\n\r\nexport interface LoadingBarState {\r\n  requestsInProgress: number;\r\n}\r\n\r\nexport const initialState: LoadingBarState = {\r\n  requestsInProgress: 0,\r\n};\r\n\r\nexport const loadingBarReducer = createReducer<\r\n  LoadingBarState,\r\n  ActionType<typeof loadingBarActions>\r\n>(initialState)\r\n  .handleAction(\r\n    loadingBarActions.addRequest,\r\n    (state): LoadingBarState => ({\r\n      requestsInProgress: state.requestsInProgress + 1,\r\n    }),\r\n  )\r\n  .handleAction(\r\n    loadingBarActions.removeRequest,\r\n    (state): LoadingBarState => ({\r\n      requestsInProgress: state.requestsInProgress - 1,\r\n    }),\r\n  );\r\n","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\n\r\nimport './SeedTag.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\nimport { shuffleString } from 'shared/util/shuffle';\r\n\r\nexport const componentId = 'SeedTag';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport interface SeedTagProps {\r\n  text: string;\r\n  number: number;\r\n  hidden?: boolean;\r\n  hideNumber?: boolean;\r\n  onClick?: (number: number) => void;\r\n}\r\n\r\nexport const SeedTag: React.FC<SeedTagProps> = ({ text, number, hidden, hideNumber, onClick }) => {\r\n\r\n  const clickHandler = () => onClick && !hidden ? onClick(number) : null;\r\n\r\n  return (\r\n    <div className={css({ Placeholder: hidden })} data-testid={test()} onClick={clickHandler}>\r\n      { hidden || hideNumber ? null :\r\n        <div className={css('Number')}>\r\n          {number + 1}\r\n        </div>\r\n      }\r\n\r\n      <div className={css('Text')}>\r\n        {hidden ? shuffleString(text) : text}\r\n      </div>\r\n    </div>\r\n  )\r\n};","export const shuffleString = (str: string): string =>\r\n  str.split('').sort(() => 0.5 - Math.random()).join('');\r\n\r\nexport const shuffleArray = (arr: string[]): string[] =>\r\n  arr.sort(() => 0.5 - Math.random());","import { cn } from '@bem-react/classname';\r\nimport { Paper } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport './SeedPanel.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\nimport { shuffleArray } from 'shared/util/shuffle';\r\n\r\nimport { SeedTag } from 'register/components/SeedTag/SeedTag';\r\n\r\nexport const componentId = 'SeedPanel';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport interface SeedPanelProps {\r\n  classes?: string[];\r\n  seed: string[];\r\n  check?: boolean;\r\n  onCheck?: (checked: boolean) => void;\r\n}\r\n\r\nexport const SeedPanel: React.FC<SeedPanelProps> = ({ classes = [], seed, check, onCheck }) => {\r\n  const [confirmedSeed, setConfirmedSeed] = useState([] as string[]);\r\n  const [success, setSuccess] = useState(false);\r\n  const [shuffledSeed, setShuffledSeed] = useState([] as string[]);\r\n\r\n  useEffect(() => {\r\n    if (!shuffledSeed.length && check) {\r\n      setShuffledSeed(shuffleArray([...seed]))\r\n    }\r\n  }, [shuffledSeed.length, check, seed]);\r\n\r\n  useEffect(() => {\r\n    const same = JSON.stringify(seed) === JSON.stringify(confirmedSeed)\r\n    setSuccess(same);\r\n    if (onCheck) {\r\n      onCheck(same);\r\n    }\r\n  }, [success, confirmedSeed, seed, onCheck])\r\n\r\n  const bodyTagClickHandler = (index: number) => {\r\n    confirmedSeed.splice(index, 1);\r\n    setConfirmedSeed([...confirmedSeed]);\r\n    setSuccess(false);\r\n  };\r\n  const footerTagClickHandler = (index: number) => {\r\n    setConfirmedSeed([...confirmedSeed, seed[index]]);\r\n  };\r\n\r\n  return (\r\n    <Paper className={css('', classes)} data-testid={test()}>\r\n      <div className={css('Body')} data-testid={test('Body')}>\r\n        {check ?\r\n          confirmedSeed.map((tag: string, index: number) => (\r\n            <SeedTag text={tag} number={index} key={index} onClick={bodyTagClickHandler} />\r\n          ))\r\n          :\r\n          seed.map((tag: string, index: number) => (\r\n            <SeedTag text={tag} number={index} key={index} />\r\n          ))\r\n        }\r\n      </div>\r\n\r\n      <div className={css('Footer')} data-testid={test('Footer')}>\r\n        {check ?\r\n          shuffledSeed.map((tag: string, index: number) => (\r\n            <SeedTag\r\n              text={tag}\r\n              number={seed.findIndex(str => str === tag)}\r\n              hidden={confirmedSeed.includes(tag)}\r\n              hideNumber\r\n              key={seed.findIndex(str => str === tag)}\r\n              onClick={footerTagClickHandler}\r\n            />\r\n          )) : null}\r\n        {confirmedSeed.length === seed.length && !success ?\r\n          <div className={css('Warning')} data-testid={test('Warning')}>\r\n            The phrases do not match!\r\n          </div>\r\n          : null}\r\n      </div>\r\n    </Paper >\r\n  )\r\n};\r\n","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport './StepOne.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\n\r\nimport { SeedPanel } from 'register/components/SeedPanel/SeedPanel';\r\n\r\nexport const componentId = 'StepOne';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport interface StepOneProps {\r\n  onGenerate: () => void;\r\n}\r\n\r\nexport const StepOne: React.FC<StepOneProps> = ({ onGenerate }) => {\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      <section>\r\n        <SeedPanel classes={[css('SeedPanel')]} seed={[]} />\r\n\r\n        <p className={css('Description')}>\r\n          Your secret phrase consists of 12 words. Store it carefully.\r\n          If you loose it, you will loose access to all of your\r\n          associated wallets!\r\n       </p>\r\n      </section>\r\n\r\n      <Button\r\n        color=\"primary\"\r\n        className={css('Button')}\r\n        data-testid={test('GenerateButton')}\r\n        onClick={onGenerate}\r\n        variant=\"contained\"\r\n      >\r\n        Generate a secret phrase\r\n      </Button>\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport './StepTwo.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\n\r\nimport { SeedPanel } from 'register/components/SeedPanel/SeedPanel';\r\n\r\nexport const componentId = 'StepTwo';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\ninterface StepTwoProps {\r\n  seed: string[];\r\n  onSubmit: () => void;\r\n}\r\n\r\nexport const StepTwo: React.FC<StepTwoProps> = ({ seed, onSubmit }) => {\r\n\r\n  return (\r\n    <div className={css()} data-testid=\"StepTwo\">\r\n      <section>\r\n        <SeedPanel classes={[css('SeedPanel')]} seed={seed} />\r\n\r\n        <p className={css('Description')}>\r\n          By submiting, you confirm that you have stored the secret phrase\r\n          on paper or using another safe method.\r\n        </p>\r\n      </section>\r\n\r\n      <Button\r\n        color=\"primary\"\r\n        className={css('Button')}\r\n        data-testid={test('SubmitButton')}\r\n        onClick={onSubmit}\r\n        variant=\"contained\"\r\n      >\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  )\r\n};","import * as React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { cn } from '@bem-react/classname';\r\n\r\nimport './Welcome.scss';\r\nimport guy from 'assets/images/guy_welcomes@2x.png';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\n\r\nexport const componentId = 'Welcome';\r\nexport interface WelcomeProps {\r\n  // TODO: remove onMockedLogin after API is connected\r\n  onMockedLogin: () => void;\r\n  onCreate: () => void;\r\n  onImport: () => void;\r\n  onAbout: () => void;\r\n}\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport const Welcome: React.FC<WelcomeProps> = ({ onCreate, onImport, onAbout, onMockedLogin }) => {\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      <section className=\"noselect\">\r\n        <img \r\n          src={guy} \r\n          className={css('Logo')} \r\n          data-testid={test('Logo')} alt=\"logo\" \r\n          onClick={onMockedLogin} \r\n        />\r\n\r\n        <h1 className={css('Greeting')} data-testid={test('Greeting')} >\r\n          Welcome to ZeroPool\r\n        </h1>\r\n\r\n        <p className={css('Description')} data-testid={test('Description')}>\r\n          Please create a new wallet or import an existing one using a secret phrase\r\n        </p>\r\n      </section>\r\n\r\n      <Button\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        className={css('Button')}\r\n        data-testid={test('CreateButton')}\r\n        disableElevation\r\n        onClick={onCreate}\r\n      >\r\n        Create new wallet\r\n      </Button>\r\n\r\n      <Button\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        className={css('Button')}\r\n        data-testid={test('ImportButton')}\r\n        onClick={onImport}\r\n      >\r\n        Import existing\r\n      </Button>\r\n\r\n      <Button\r\n        color=\"primary\"\r\n        variant=\"outlined\"\r\n        className={css('Button')}\r\n        data-testid={test('AboutButton')}\r\n        onClick={onAbout}\r\n      >\r\n        About zeropool\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DevTool } from '@hookform/devtools';\r\n\r\nimport './StepFour.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\nimport { Button, FormControl, FormHelperText, IconButton, Input, InputAdornment, InputLabel } from '@material-ui/core';\r\nimport { Close, Visibility, VisibilityOff } from '@material-ui/icons';\r\nexport const componentId = 'StepFour';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nconst PasswordInputParams = {\r\n  required: \"Required\",\r\n  pattern: {\r\n    value: /^(?=.*?\\d)(?=.*?[a-zA-Z])[a-zA-Z\\d]+$/,\r\n    message: \"Use letters and numbers\"\r\n  },\r\n  minLength: {\r\n    value: 8,\r\n    message: \"Use at least 8 characters\"\r\n  }\r\n}\r\n\r\ninterface FormData {\r\n  password: string;\r\n  confirm: string;\r\n}\r\n\r\nexport interface StepFourProps {\r\n  onRegister: (data: { password: string }) => void;\r\n}\r\n\r\nexport const StepFour: React.FC<StepFourProps> = ({ onRegister }) => {\r\n  const { handleSubmit, register, reset, control, errors } = useForm<FormData>({ criteriaMode: \"all\" });\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [password, setPassword] = useState('');\r\n  const [passwordConfirm, setPasswordConfirm] = useState('');\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      {process.env.NODE_ENV !== 'production' && <DevTool control={control} />}\r\n      \r\n      <form onSubmit={handleSubmit(onRegister)} className={css('Form')}>\r\n        <FormControl className={css('FormControl')} error={!!errors['password']}>\r\n          <InputLabel className={css('FormControlLabel')} htmlFor=\"password\">Password</InputLabel>\r\n\r\n          <Input \r\n            id=\"password\"\r\n            color=\"secondary\"\r\n            className={css('Password')}\r\n            inputProps={{ 'data-testid': test('Password') }}\r\n            inputRef={register(PasswordInputParams)}\r\n            name=\"password\"\r\n            onChange={() => setPassword(control.getValues()['password'])}\r\n            type={showPassword ? 'text' : 'password'}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                {password ?\r\n                  <IconButton\r\n                    className={css('FormControlButton')}\r\n                    aria-label=\"empty password\"\r\n                    onClick={() => { reset({ password: undefined, confirm: control.getValues()['confirm'] }); setPassword(''); }}\r\n                    onMouseDown={(event) => event.preventDefault()}\r\n                  >\r\n                    <Close />\r\n                  </IconButton> : null\r\n                }\r\n\r\n                <IconButton\r\n                  className={css('FormControlButton')}\r\n                  aria-label=\"toggle visibility\"\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                  onMouseDown={(event) => event.preventDefault()}\r\n                >\r\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n\r\n          {errors['password'] ?\r\n            <FormHelperText data-testid={test('PasswordError')}>{errors['password'].message}</FormHelperText>\r\n            : null\r\n          }\r\n        </FormControl>\r\n\r\n        <FormControl className={css('FormControl')} error={!!errors['confirm']}>\r\n          <InputLabel className={css('FormControlLabel')} htmlFor=\"confirm\">Confirm password</InputLabel>\r\n\r\n          <Input \r\n            id=\"confirm\"\r\n            color=\"secondary\"\r\n            className={css('Password')}\r\n            inputProps={{ 'data-testid': test('Confirm') }}\r\n            inputRef={register({\r\n              validate: value => value === control.getValues()['password']\r\n            })}\r\n            name=\"confirm\"\r\n            onChange={() => setPasswordConfirm(control.getValues()['confirm'])}\r\n            type={showPassword ? 'text' : 'password'}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                {passwordConfirm ?\r\n                  <IconButton\r\n                    className={css('FormControlButton')}\r\n                    aria-label=\"empty confirmation\"\r\n                    onClick={() => { reset({ password: control.getValues()['password'], confirm: undefined }); setPasswordConfirm(''); }}\r\n                    onMouseDown={(event) => event.preventDefault()}\r\n                  >\r\n                    <Close />\r\n                  </IconButton> : null\r\n                }\r\n\r\n                <IconButton\r\n                  className={css('FormControlButton')}\r\n                  aria-label=\"toggle visibility\"\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                  onMouseDown={(event) => event.preventDefault()}\r\n                >\r\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n\r\n          {errors['confirm'] ?\r\n            <FormHelperText data-testid={test('PasswordConfirmError')}>\r\n              Passwords do not match\r\n            </FormHelperText> : null\r\n          }\r\n        </FormControl>\r\n\r\n        <p className={css('Description')}>\r\n          Finally, please choose a password to be used\r\n          to export your secret phrase in the future.\r\n        </p>\r\n\r\n        <Button\r\n          color=\"primary\"\r\n          className={css('Button')}\r\n          data-testid={test('Submit')}\r\n          disableElevation\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n        >\r\n          Register\r\n        </Button>\r\n\r\n        {/* TODO: remove after testing */}\r\n        <Button\r\n          color=\"primary\"\r\n          className={css('Button')}\r\n          disableElevation\r\n          onClick={() => { reset({password: 'test1234', confirm: 'test1234'}); handleSubmit(onRegister) }}\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n        >\r\n          Testing: use 'test1234'\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n","import React, { useState } from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport './StepThree.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\n\r\nimport { SeedPanel } from 'register/components/SeedPanel/SeedPanel';\r\n\r\nexport const componentId = 'StepThree';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport interface StepThreeProps {\r\n  seed: string[];\r\n  onConfirm: () => void;\r\n}\r\nexport const StepThree: React.FC<StepThreeProps> = ({ seed, onConfirm }) => {\r\n  const [buttonDisabled, setButtonDisabled] = useState(true);\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      <section>\r\n        <SeedPanel classes={[css('SeedPanel')]} seed={seed} check onCheck={(success: boolean) => setButtonDisabled(!success)} />\r\n\r\n        <p className={css('Description')}>\r\n          Please confirm your secret phrase.\r\n          We want to be sure that you saved it correctly.\r\n        </p>\r\n      </section>\r\n\r\n      <Button\r\n        color=\"primary\"\r\n        className={css('Button', { Disabled: buttonDisabled })}\r\n        data-testid={test('ConfirmButton')}\r\n        disabled={buttonDisabled}\r\n        onClick={onConfirm}\r\n        variant=\"contained\"\r\n      >\r\n        Confirm\r\n      </Button>\r\n      \r\n      {/* TODO: remove after testing */}\r\n      <Button\r\n        color=\"primary\"\r\n        className={css('Button')}\r\n        disableElevation\r\n        onClick={onConfirm}\r\n        variant=\"contained\"\r\n      >\r\n        Testing: force confirm\r\n      </Button>\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\n\r\nimport './Perl.scss';\r\n\r\nexport const componentId = 'Perl';\r\n\r\nconst css = cn(componentId);\r\n\r\nexport type PerlProps = {\r\n  classes?: string[]\r\n  number: number\r\n  isActive: boolean\r\n}\r\n\r\nexport const Perl: React.FC<PerlProps> = ({classes = [], number, isActive}) => {\r\n  return(\r\n    <div className={css({Active: isActive}, classes)}>\r\n      <div className={css('Number')}>\r\n        {number}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport { ArrowBack } from '@material-ui/icons';\r\nimport { Button, MobileStepper, Tooltip } from '@material-ui/core';\r\n\r\nimport './StepHeader.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\nimport { Perl } from 'register/components/Perl/Perl';\r\n\r\nexport const componentId = 'StepHeader';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport type StepHeaderProps = {\r\n  step: number\r\n  total: number\r\n  onBack: () => void\r\n}\r\n\r\nexport const StepHeader: React.FC<StepHeaderProps> = ({ step, total, onBack }) => {\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      <Tooltip title=\"Step back\" placement=\"top-end\">\r\n        <Button\r\n          className={css('Button')}\r\n          data-testid={test('BackButton')}\r\n          onClick={onBack}\r\n          disableRipple\r\n        >\r\n          <ArrowBack className={css('Icon')} />\r\n        </Button>\r\n      </Tooltip>\r\n\r\n      <div className={css('Perls')} data-testid={test('Perls')}>\r\n        {[1,2,3,4].map((value) => <Perl \r\n          classes={[css('Perl', {'Active': value === step})]}\r\n          isActive={value === step} \r\n          key={value} \r\n          number={value} \r\n        />)}\r\n      </div>\r\n\r\n      <MobileStepper\r\n        className={css('Progress')}\r\n        variant=\"progress\"\r\n        steps={total + 1}\r\n        position=\"static\"\r\n        activeStep={step - 1}\r\n        backButton={<span className=\"hidden\">back</span>}\r\n        nextButton={<span className=\"hidden\">next</span>}\r\n      />\r\n    </div>\r\n  )\r\n};","import { cn } from '@bem-react/classname';\r\nimport { DevTool } from '@hookform/devtools';\r\nimport { useForm } from 'react-hook-form';\r\nimport React, { useState } from 'react';\r\nimport { Close, Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport { Button, FormControl, FormHelperText, IconButton, Input, InputAdornment, InputLabel } from '@material-ui/core';\r\n\r\nimport './ImportAccount.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\n\r\nimport { SeedPanel } from 'register/components/SeedPanel/SeedPanel';\r\nimport { validateSeed } from 'register/state/helpers/seed.helper';\r\n\r\nexport const componentId = 'ImportAccount';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nconst PasswordInputParams = {\r\n  required: \"Required\",\r\n  pattern: {\r\n    value: /^(?=.*?\\d)(?=.*?[a-zA-Z])[a-zA-Z\\d]+$/,\r\n    message: \"Use letters and numbers\"\r\n  },\r\n  minLength: {\r\n    value: 8,\r\n    message: \"Use at least 8 characters\"\r\n  }\r\n}\r\n\r\nconst seedInputParamsFactory = (seed: string[]): any => ({\r\n  required: \"Required\",\r\n  validate: (value: string[]) => validateSeed(seed)\r\n});\r\n\r\ninterface FormData {\r\n  seed: string;\r\n  password: string;\r\n  confirm: string;\r\n}\r\n\r\nexport interface ImportAccountProps {\r\n  onBack: () => void;\r\n  onImport: (data: { seed: string[], password: string }) => void;\r\n}\r\n\r\nexport const ImportAccount: React.FC<ImportAccountProps> = ({ onBack, onImport }) => {\r\n  const { handleSubmit, register, reset, control, errors } = useForm<FormData>({ criteriaMode: \"all\" });\r\n\r\n  const [seed, setSeed] = useState([] as string[]);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [password, setPassword] = useState('');\r\n  const [passwordConfirm, setPasswordConfirm] = useState('');\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      {process.env.NODE_ENV !== 'production' && <DevTool control={control} />}\r\n      <section>\r\n        <SeedPanel classes={[css('SeedPanel')]} seed={seed} />\r\n\r\n        <form onSubmit={handleSubmit((data: FormData) => onImport({ password: data.password, seed }))} className={css('Form')}>\r\n          <FormControl className={css('FormControl')} error={!!errors['seed']}>\r\n            <InputLabel color=\"secondary\" className={css('FormControlLabel')} htmlFor=\"seed\">Secret phrase</InputLabel>\r\n\r\n            <Input \r\n              id=\"seed\"\r\n              className={css('Seed')}\r\n              color=\"secondary\"\r\n              inputProps={{ 'data-testid': test('Seed') }}\r\n              inputRef={register(seedInputParamsFactory(seed)) as any}\r\n              name=\"seed\"\r\n              onChange={() => setSeed(control.getValues()['seed'].split(/[ ,.]+/).filter((str) => !!str))}\r\n              type={'text'}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  {seed.length ?\r\n                    <IconButton\r\n                      className={css('FormControlButton')}\r\n                      aria-label=\"empty seed\"\r\n                      onClick={() => { reset({ seed: undefined, password: control.getValues()['password'], confirm: control.getValues()['confirm'] }); setSeed([]); }}\r\n                      onMouseDown={(event) => event.preventDefault()}\r\n                    >\r\n                      <Close />\r\n                    </IconButton> : <span></span>\r\n                  }\r\n                </InputAdornment>\r\n              }\r\n            />\r\n\r\n            {errors['seed'] ?\r\n              <FormHelperText data-testid={test('SeedError')}>\r\n                {errors['seed'].message || 'Input 12 uniq words divided with comas or spaces'}\r\n              </FormHelperText> : null\r\n            }\r\n          </FormControl>\r\n\r\n          <FormControl className={css('FormControl')} error={!!errors['password']}>\r\n            <InputLabel className={css('FormControlLabel')} htmlFor=\"password\">Password</InputLabel>\r\n\r\n            <Input id=\"password\"\r\n              className={css('Password')}\r\n              color=\"secondary\"\r\n              classes={{input: css('PasswordInput')}}\r\n              inputProps={{ 'data-testid': test('Password') }}\r\n              inputRef={register(PasswordInputParams)}\r\n              name=\"password\"\r\n              onChange={() => setPassword(control.getValues()['password'])}\r\n              type={showPassword ? 'text' : 'password'}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  {password ?\r\n                    <IconButton\r\n                      className={css('FormControlButton')}\r\n                      aria-label=\"empty password\"\r\n                      onClick={() => { reset({ seed: control.getValues()['seed'], password: undefined, confirm: control.getValues()['confirm'] }); setPassword(''); }}\r\n                      onMouseDown={(event) => event.preventDefault()}\r\n                    >\r\n                      <Close />\r\n                    </IconButton> : <span></span>\r\n                  }\r\n\r\n                  <IconButton\r\n                    className={css('FormControlButton')}\r\n                    aria-label=\"toggle visibility\"\r\n                    onClick={() => setShowPassword(!showPassword)}\r\n                    onMouseDown={(event) => event.preventDefault()}\r\n                  >\r\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n\r\n            {errors['password'] ?\r\n              <FormHelperText data-testid={test('PasswordError')}>\r\n                {errors['password'].message}\r\n              </FormHelperText> : null\r\n            }\r\n          </FormControl>\r\n\r\n          <FormControl className={css('FormControl')} error={!!errors['confirm']}>\r\n            <InputLabel className={css('FormControlLabel')} htmlFor=\"confirm\">Confirm password</InputLabel>\r\n\r\n            <Input id=\"confirm\"\r\n              className={css('Password')}\r\n              color=\"secondary\"\r\n              classes={{input: css('PasswordInput')}}\r\n              inputProps={{'data-testid': test('Confirm')}}\r\n              inputRef={register({\r\n                validate: value => value === control.getValues()['password']\r\n              })}\r\n              name=\"confirm\"\r\n              onChange={() => setPasswordConfirm(control.getValues()['confirm'])}\r\n              type={showPassword ? 'text' : 'password'}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  {passwordConfirm ?\r\n                    <IconButton\r\n                      className={css('FormControlButton')}\r\n                      aria-label=\"empty confirmation\"\r\n                      onClick={() => { reset({ seed: control.getValues()['seed'], password: control.getValues()['password'], confirm: undefined }); setPasswordConfirm(''); }}\r\n                      onMouseDown={(event) => event.preventDefault()}\r\n                    >\r\n                      <Close />\r\n                    </IconButton> : <span></span>\r\n                  }\r\n\r\n                  <IconButton\r\n                    className={css('FormControlButton')}\r\n                    aria-label=\"toggle visibility\"\r\n                    onClick={() => setShowPassword(!showPassword)}\r\n                    onMouseDown={(event) => event.preventDefault()}\r\n                  >\r\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n\r\n            {errors['confirm'] ?\r\n              <FormHelperText data-testid={test('PasswordConfirmError')}>\r\n                Passwords do not match\r\n              </FormHelperText> : null\r\n            }\r\n          </FormControl>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            className={css('Button')}\r\n            data-testid={test('Import')}\r\n            disableElevation\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n          >\r\n            Import\r\n          </Button>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            className={css('Button')}\r\n            data-testid={test('Back')}\r\n            disableElevation\r\n            onClick={onBack}\r\n            variant=\"outlined\"\r\n          >\r\n            Back\r\n          </Button>\r\n        </form>\r\n      </section>\r\n    </div >\r\n  )\r\n};","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport { push } from 'connected-react-router';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport logo from 'assets/images/logo1.svg';\r\n\r\nimport './CreateAccountPage.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\n\r\nimport { StepOne } from 'register/components/StepOne/StepOne';\r\nimport { StepTwo } from 'register/components/StepTwo/StepTwo';\r\nimport { Welcome } from 'register/components/Welcome/Welcome';\r\nimport { StepFour } from 'register/components/StepFour/StepFour';\r\nimport { StepThree } from 'register/components/StepThree/StepThree';\r\nimport { StepHeader } from 'register/components/StepHeader/StepHeader';\r\nimport { ImportAccount } from 'register/components/ImportAccount/ImportAccount';\r\nimport { RegisterStage } from 'register/state/models/register-stage';\r\nimport { registerActions as actions } from 'register/state/register.actions';\r\nimport { getRegisterSeed, getRegisterStage, getShowSteps } from 'register/state/register.selectors';\r\n\r\nexport const componentId = 'CreateAccountPage';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\ntype CreateAccountProps = { }\r\n\r\nexport const CreateAccountPage: React.FC<CreateAccountProps> = () => {\r\n  const seed = useSelector(getRegisterSeed);\r\n  const stage = useSelector(getRegisterStage);\r\n  const showSteps = useSelector(getShowSteps);\r\n  const dispatch = useDispatch();\r\n\r\n  const components = () => {\r\n    switch (stage) {\r\n      case RegisterStage.STEP1:\r\n        return <StepOne onGenerate={() => dispatch(actions.generateSeed())} />\r\n      case RegisterStage.STEP2:\r\n        return <StepTwo seed={seed} onSubmit={() => dispatch(actions.submitSeed())} />\r\n      case RegisterStage.STEP3:\r\n        return <StepThree seed={seed} onConfirm={() => dispatch(actions.confirmSeed())} />\r\n      case RegisterStage.STEP4:\r\n        return <StepFour onRegister={data => dispatch(actions.register(data.password))} />\r\n      case RegisterStage.IMPORT:\r\n        return <ImportAccount\r\n          onImport={data => dispatch(actions.importAccount(data))}\r\n          onBack={() => dispatch(actions.stepBack())} />\r\n      default:\r\n        return <Welcome\r\n          // TODO: remove next line after API is connected\r\n          onMockedLogin={() => dispatch(push('/wallet'))}\r\n          onCreate={() => dispatch(actions.startRegisterAccount())}\r\n          onImport={() => dispatch(actions.startImportAccount())}\r\n          onAbout={() => dispatch(push('/about'))}\r\n        />\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      {(stage && showSteps) ? \r\n        <StepHeader \r\n          step={stage} \r\n          total={4} \r\n          onBack={() => dispatch(actions.stepBack())} \r\n        /> : null\r\n      }\r\n\r\n      {components()}\r\n\r\n      {(stage && showSteps) ? \r\n        <div className={css('Footer')}>\r\n          <img src={logo} alt=\"ZeroPool\" style={{margin:'auto'}} />\r\n        </div>\r\n       : null\r\n      }\r\n    </div>\r\n  ) \r\n};","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\n\r\nimport './HelpPage.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\n\r\nexport const componentId = 'HelpPage';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport interface HelpPageProps { }\r\n\r\nexport const HelpPage: React.FC<HelpPageProps> = () => {\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      <h2> Wallet is in test mode. How to start:</h2>\r\n      \r\n      <p>\r\n        We use Kovan test network to emulate operations \r\n        with Ethereum and standard Near's test network for the Near.\r\n        Operations with Waves are not yet implemented.\r\n      </p>\r\n\r\n      <h3>Ethereum.</h3>\r\n\r\n      <p>\r\n        To try it out you can install Metamask, select Kovan network, \r\n        get some free Eth from the \r\n        <a href=\"https://gitter.im/kovan-testnet/faucet#\" target=\"_blank\"> kovan faucet </a> \r\n        and send it to one of your Zero Pool Eth Wallet's address.\r\n      </p>\r\n    </div>\r\n  )\r\n};","import { capFirstLetter } from './cap-first-letter';\r\n\r\nexport const cssMod = (value: string) => ({[capFirstLetter(value)]: true}) \r\n","export const capFirstLetter = (str: string): string =>\r\n  str.charAt(0).toUpperCase() + str.slice(1);","import React, { HTMLAttributes } from 'react';\r\nimport { cn } from '@bem-react/classname';\r\n\r\nimport './RoundButton.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { cssMod } from 'shared/util/css-mod';\r\n\r\nexport const componentId = 'RoundButton';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport interface  RoundButtonProps extends HTMLAttributes<HTMLElement>{\r\n  label?: string;\r\n  labelPosition?: 'top' | 'bottom' | 'left' | 'right';\r\n}\r\n\r\nexport const RoundButton: React.FC<RoundButtonProps> = (({ label, labelPosition = 'bottom', ...props}) => (\r\n  <div className={css({NoLabel: !label})} data-testid={test()}>\r\n    <IconButton \r\n      className={css('Button', {}, [props.className])} \r\n      data-testid={test('Button')}\r\n      disableRipple={true}\r\n      disableFocusRipple={true}\r\n      disableTouchRipple={true}\r\n      onClick={props.onClick}\r\n    >\r\n        {props.children}\r\n    </IconButton>\r\n\r\n    <span \r\n      className={css('Label', {...cssMod(labelPosition)})} \r\n      data-testid={test('Label')}\r\n    >\r\n        {label}\r\n    </span>\r\n  </div>\r\n));\r\n\r\n\r\n\r\n","import React, { forwardRef, HTMLAttributes, memo } from 'react';\r\nimport { cn } from '@bem-react/classname';\r\n\r\nimport './Icon.scss';\r\n\r\nimport { IconOption } from 'shared/components/Icon/IconOption';\r\n\r\nexport const componentId = 'Icon';\r\n\r\nconst css = cn(componentId);\r\n\r\nexport interface IconProps extends HTMLAttributes<HTMLElement> {\r\n  icon: IconOption;\r\n  spaceOn?: 'right' | 'left';\r\n}\r\n\r\nconst component = memo(\r\n  forwardRef<HTMLElement, IconProps>(({ icon, spaceOn, ...props }, ref) => (\r\n    <i\r\n      {...props}\r\n      className={css(\r\n        {\r\n          [icon]: true,\r\n          RightMargin: spaceOn === 'right',\r\n          LeftMargin: spaceOn === 'left',\r\n          Clickable: !!props.onClick,\r\n        },\r\n        [props.className],\r\n      )}\r\n      ref={ref}\r\n    ></i>\r\n  )),\r\n);\r\n\r\ncomponent.displayName = componentId;\r\n\r\nexport const Icon = component;","export enum WalletHeaderMode {\r\n  Info = 'Info',        // only text information about opened view\r\n  Balance = 'Balance',  // label strind and balance string with tokens amount if it passed\r\n}\r\n","import React, { HTMLAttributes } from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport { IconButton } from '@material-ui/core';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\nimport './ExpandButton.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\n\r\nexport const componentId = 'ExpandButton';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport interface ExpendButtonProps extends HTMLAttributes<HTMLElement>{\r\n  expanded: boolean;\r\n  click: () => void; \r\n }\r\n\r\nexport const ExpandButton: React.FC<ExpendButtonProps> = ({expanded, click, ...props}) => {\r\n\r\n  return (\r\n    <div \r\n      className={css({Expended: expanded}, [props.className])} \r\n      data-testid={test()} \r\n      onClick={click}\r\n    >\r\n      <IconButton\r\n        disableRipple={true}\r\n        disableFocusRipple={true}\r\n        disableTouchRipple={true}\r\n      >\r\n        <ArrowForwardIosIcon />\r\n      </IconButton>\r\n    </div>\r\n  )\r\n};","import { cn } from '@bem-react/classname';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport VerticalAlignTopIcon from '@material-ui/icons/VerticalAlignTop';\r\nimport VerticalAlignBottomIcon from '@material-ui/icons/VerticalAlignBottom';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport './WalletRow.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\nimport { RoundButton } from 'shared/components/RoundButton/RoundButton';\r\nimport { IconOption } from 'shared/components/Icon/IconOption';\r\nimport { Token } from 'shared/models/token';\r\nimport { Icon } from 'shared/components/Icon/Icon';\r\n\r\nimport { ExpandButton } from 'wallet/components/ExpandButton/ExpandButton';\r\nimport { Wallet } from 'wallet/state/models/wallet';\r\n\r\nexport const componentId = 'WalletRow';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport type WalletRowProps = { \r\n  rollUp: number\r\n  rate: number\r\n  token: Token\r\n  wallet: Wallet\r\n\r\n  onReceiveClick: (wallet: Wallet) => void\r\n  onSendClick: (wallet: Wallet) => void\r\n  onEditClick: (wallet: Wallet) => void\r\n  onRollUpClick: () => void\r\n}\r\n\r\nexport const WalletRow: React.FC<WalletRowProps> = ({token, wallet, rate, rollUp, onReceiveClick, onSendClick, onEditClick, onRollUpClick}) => {\r\n  const [showButtons, setShowButtons] = useState(false);\r\n  const [toBeOpened, setToBeOpened] = useState(false);\r\n  \r\n  const showButtonsHandler = () => {\r\n    if (showButtons) {\r\n      setShowButtons(false)\r\n    } else {\r\n      onRollUpClick();\r\n      setToBeOpened(true);\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if(toBeOpened) {\r\n      setToBeOpened(false);\r\n      setShowButtons(true);\r\n    } else {\r\n      setShowButtons(false);\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [wallet.name, rollUp]);\r\n\r\n  return (\r\n    <div className={css({Expanded: showButtons})} data-testid={test()}>\r\n      <div className={css('Main')}>\r\n        <Icon className={css('Icon')} icon={wallet.token.symbol as IconOption} />\r\n\r\n        <div className={css('Values')}>\r\n          <div className={css('WalletName')}>{wallet.name}</div>\r\n          <div className={css('WalletAmount')}>{wallet.amount} {token.symbol} ({(rate * wallet.amount).toFixed(2)} $)</div>\r\n        </div>\r\n\r\n        <ExpandButton className={css('Expander')} expanded={showButtons} click={showButtonsHandler} />\r\n      </div>\r\n\r\n      <div className={css('Buttons', {Hidden: !showButtons})}>\r\n        <RoundButton className={css('Button1')} label={'Send'} onClick={() => onSendClick(wallet)}>\r\n          <VerticalAlignTopIcon />\r\n        </RoundButton>\r\n        \r\n        <RoundButton className={css('Button2')} label={'Receive'} onClick={() => onReceiveClick(wallet)}>\r\n          <VerticalAlignBottomIcon />\r\n        </RoundButton>\r\n\r\n        <RoundButton className={css('Button2')} label={'Edit'} onClick={() => onEditClick(wallet)}>\r\n          <SettingsIcon />\r\n        </RoundButton>\r\n      </div>\r\n    </div>\r\n  )\r\n};","import React, { useState } from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport { Button, TextField } from '@material-ui/core';\r\n\r\nimport './EditWallet.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\n\r\nexport const componentId = 'EditWallet';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport type EditWalletProps = {\r\n  onRename: (name: string) => void\r\n  onDelete: () => void\r\n  onCancel: () => void\r\n  walletName: string\r\n }\r\n\r\nexport const EditWallet: React.FC<EditWalletProps> = ({walletName, onRename, onDelete, onCancel}) => {\r\n  const [newName, setNewName] = useState('');\r\n  const minNameLength = 3;\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      <p className={css('Name')}> {walletName} </p>\r\n\r\n      <TextField \r\n        className={css('NewName')} \r\n        label={`New name (min. ${minNameLength} symbols)`} \r\n        value={newName} \r\n        onChange={(event) => {setNewName(event.target.value)}}\r\n      />\r\n\r\n      <Button \r\n        disabled={newName.length < minNameLength}\r\n        className={css('Rename')} \r\n        data-testid={test('Rename')}\r\n        onClick={() => onRename(newName)}\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n      >\r\n        Rename\r\n      </Button>\r\n\r\n      <Button \r\n        className={css('Delete')} \r\n        data-testid={test('Delete')}\r\n        onClick={onDelete}\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n      >\r\n        Delete\r\n      </Button>\r\n\r\n      <Button \r\n        className={css('Cancel')} \r\n        data-testid={test('Cancel')}\r\n        onClick={onCancel}\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n      >\r\n        Cancel\r\n      </Button>\r\n    </div>\r\n  )\r\n};","import React, { useState } from 'react';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { cn } from '@bem-react/classname';\r\n\r\nimport './DeleteWallet.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\n\r\nexport const componentId = 'DeleteWallet';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport type DeleteWalletProps = { \r\n  onDelete: () => void\r\n  onCancel: () => void\r\n  walletName: string\r\n}\r\n\r\nexport const DeleteWallet: React.FC<DeleteWalletProps> = ({walletName, onCancel, onDelete}) => {\r\n  const [confirmName, setConfirmName] = useState('');\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      <p className={css('Name')}> {walletName} </p>\r\n\r\n      <TextField \r\n        className={css('Confirm')} \r\n        label=\"Enter wallet name to confirm\" \r\n        value={confirmName} \r\n        onChange={(event) => {setConfirmName(event.target.value)}}\r\n      />\r\n      \r\n      <Button \r\n        className={css('Delete')} \r\n        data-testid={test('Delete')}\r\n        disabled={confirmName !== walletName}\r\n        onClick={() => onDelete()}\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n      >\r\n        Delete anyway\r\n      </Button>\r\n\r\n      <Button \r\n        className={css('Cancel')} \r\n        data-testid={test('Cancel')}\r\n        onClick={onCancel}\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n      >\r\n        Cancel\r\n      </Button>\r\n    </div>\r\n  )\r\n};","import { cn } from '@bem-react/classname';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport React, { useState } from 'react';\r\nimport { Dialog, DialogContent } from '@material-ui/core';\r\n\r\nimport './Wallets.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\nimport { RoundButton } from 'shared/components/RoundButton/RoundButton';\r\nimport { Token } from 'shared/models/token';\r\n\r\nimport { Wallet } from 'wallet/state/models/wallet';\r\nimport { WalletRow } from 'wallet/components/WalletRow/WalletRow';\r\nimport { EditWallet } from 'wallet/components/EditWallet/EditWallet';\r\nimport { DeleteWallet } from 'wallet/components/DeleteWallet/DeleteWallet';\r\n\r\nexport const componentId = 'Wallets';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport interface WalletsHandlers {\r\n  onReceive: (wallet: Wallet) => void;\r\n  onSend: (wallet: Wallet) => void;\r\n  onDelete: (wallet: Wallet) => void;\r\n  onRename: (wallet: Wallet, name: string) => void;\r\n  onAdd: () => void;\r\n};\r\nexport interface WalletsProps {\r\n  handlers: WalletsHandlers;\r\n  rate: number;\r\n  token: Token;\r\n  wallets: Wallet[];\r\n};\r\n\r\nexport const Wallets: React.FC<WalletsProps> = ({handlers, wallets, rate, token}) => {\r\n  const [rollUpSignal, setRollUpSignal] = useState(0);\r\n  const [openEditDialog, setOpenEditDialog] = useState(false);\r\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n  const [selectedWallet, setSelectedWallet] = useState<Wallet|null>(null);\r\n\r\n  const handleWalletRename = (name: string) => {\r\n    if (selectedWallet) {\r\n      setOpenEditDialog(false);\r\n      handlers.onRename(selectedWallet, name);\r\n    } else {\r\n      throw new Error('No active wallet set!');\r\n    }\r\n  }\r\n  const handleWalletDelete = () => {\r\n    if (selectedWallet) {\r\n      setOpenDeleteDialog(false);\r\n      handlers.onDelete(selectedWallet);\r\n    } else {\r\n      throw new Error('No active wallet set!');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      {wallets.map((wallet, index) =>\r\n        <WalletRow\r\n          rollUp={rollUpSignal}\r\n          wallet={wallet}\r\n          token={token}\r\n          rate={rate}\r\n          key={index}\r\n\r\n          onReceiveClick={handlers.onReceive}\r\n          onSendClick={handlers.onSend}\r\n          onEditClick={(wallet) => {setSelectedWallet(wallet); setOpenEditDialog(true);}}\r\n          onRollUpClick={() => setRollUpSignal(rollUpSignal+1)}\r\n        />\r\n      )}\r\n\r\n      <div  className={css('Add')}>\r\n        <RoundButton label={'Add wallet'} onClick={handlers.onAdd}>\r\n          <AddIcon />\r\n        </RoundButton>\r\n      </div>\r\n\r\n      <Dialog \r\n        onClose={() => {setOpenEditDialog(false);}} \r\n        open={openEditDialog}\r\n        fullWidth={true}\r\n        maxWidth={'xs'}\r\n      >\r\n        <DialogContent dividers>\r\n          <EditWallet \r\n            walletName={selectedWallet?.name || ''}\r\n            onRename={handleWalletRename}\r\n            onDelete={() => {setOpenDeleteDialog(true); setOpenEditDialog(false);}}\r\n            onCancel={() => {setOpenEditDialog(false);}}\r\n          />\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      <Dialog \r\n        onClose={() => {setOpenDeleteDialog(false);}} \r\n        open={openDeleteDialog}\r\n        fullWidth={true}\r\n        maxWidth={'xs'}\r\n      >\r\n        <DialogContent dividers>\r\n          <DeleteWallet \r\n            walletName={selectedWallet?.name || ''}\r\n            onDelete={handleWalletDelete}\r\n            onCancel={() => {setOpenDeleteDialog(false); setOpenEditDialog(true);}}\r\n          />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport { Button, TextField, Tooltip } from '@material-ui/core';\r\n\r\nimport './SendConfirmation.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\nimport { Wallet } from 'wallet/state/models/wallet';\r\n\r\nexport const componentId = 'SendConfirmation';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport type SendConfirmationProps = { \r\n  address: string\r\n  amount: number\r\n  fee: number\r\n  rate: number\r\n  wallet: Wallet\r\n  onConfirmClick: () => void\r\n}\r\n\r\nexport const SendConfirmation: React.FC<SendConfirmationProps> = ({\r\n  address,\r\n  amount,\r\n  fee,\r\n  rate,\r\n  wallet,\r\n  onConfirmClick,\r\n}) => {\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      <div className={css('Title')}> \r\n        Confirm transaction\r\n      </div>\r\n\r\n      <form className={css('Inputs')} noValidate autoComplete=\"off\">\r\n        <Tooltip title={wallet.name} placement=\"bottom\">\r\n          <TextField \r\n            className={css('From')} \r\n            id=\"from\" \r\n            label=\"From\" \r\n            value={wallet.name} \r\n            disabled={true}\r\n          />\r\n        </Tooltip>\r\n\r\n        <Tooltip title={address} placement=\"bottom\">\r\n          <TextField \r\n            className={css('To')} \r\n            id=\"to\" \r\n            label=\"To\" \r\n            value={address} \r\n            disabled={true}\r\n          />\r\n        </Tooltip>\r\n\r\n        <Tooltip title={amount} placement=\"bottom\">\r\n          <TextField \r\n            className={css('Amount')} \r\n            id=\"amount\" \r\n            label=\"Amount\" \r\n            value={`${amount} ${wallet.token.symbol}`} \r\n            disabled={true}\r\n          />\r\n        </Tooltip>\r\n        \r\n        <TextField \r\n          className={css('Fee')} \r\n          id=\"fee\" \r\n          label=\"Network fee\" \r\n          value={`${fee} ${wallet.token.symbol} (${(Math.round(rate*fee*10000))/10000} $)`} \r\n          disabled={true}\r\n        />\r\n      </form>\r\n\r\n      <div className={css('Confirm')}>\r\n        <Button \r\n          className={css('ConfirmButton')} \r\n          data-testid={test('Confirm')}\r\n          onClick={() => onConfirmClick()}\r\n          color=\"primary\"\r\n          disableElevation\r\n          variant=\"contained\"\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport NumberFormat from 'react-number-format';\r\nimport { ArrowBack } from '@material-ui/icons';\r\nimport { Tooltip, Button } from '@material-ui/core';\r\n\r\nimport './WalletHeader.scss';\r\n\r\nimport { useNavigateBack } from 'shared/hooks/use-navigate-back';\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\n\r\nimport { WalletHeaderMode } from 'wallet/components/WalletHeader/WalletHeaderMode';\r\n\r\nexport const componentId = 'WalletHeader';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport type WalletHeaderProps = {\r\n  fiatValue?: number,\r\n  hideBackButton?: boolean,\r\n  label: string,\r\n  mode: WalletHeaderMode,\r\n  tokenAmount?: number,\r\n  tokenName?:string,\r\n  tokenSymbol?: string,\r\n  tokenRate?: number,\r\n\r\n  onBackClick: () => void\r\n}\r\n\r\nexport const WalletHeader: React.FC<WalletHeaderProps> = ({ mode, tokenAmount, tokenSymbol, label, fiatValue, hideBackButton, tokenName, onBackClick }) => {\r\n  useNavigateBack(onBackClick);\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      {!hideBackButton ?\r\n        <Tooltip title=\"Step back\" placement=\"bottom\">\r\n          <Button\r\n            className={css('BackButton')}\r\n            data-testid={test('BackButton')}\r\n            onClick={onBackClick}\r\n            disableRipple\r\n          >\r\n            <ArrowBack className={css('Icon')} />\r\n          </Button>\r\n        </Tooltip>\r\n        : null}\r\n\r\n      <div className={css('Title')}>\r\n        <span>{label}</span>\r\n      </div>\r\n\r\n      <div className={css('Amount')}>\r\n        {mode === WalletHeaderMode.Info ? null : \r\n          <NumberFormat\r\n            className={css('FiatAmount')}\r\n            data-testid={test('FiatAmount')}\r\n            value={fiatValue}\r\n            displayType={'text'}\r\n            thousandSeparator={true}\r\n            suffix={' $'}\r\n            decimalScale={2}\r\n          />\r\n        }\r\n      </div>\r\n\r\n      <div className={css('Tokens')}>\r\n          {tokenAmount && tokenName \r\n            ? `${tokenAmount} ${tokenSymbol}`\r\n            : null}\r\n        </div>\r\n    </div>\r\n  )\r\n};\r\n","import { useEffect, useRef } from 'react';\r\n\r\n// Intercepts browser's Navigate Back event\r\nexport const useNavigateBack = (callback: Function): void => {\r\n  const isInitialMount = useRef(true);\r\n  \r\n  useEffect(() => {\r\n    if (isInitialMount.current) {\r\n      isInitialMount.current = false;\r\n      \r\n      window.addEventListener('popstate', function(event) {\r\n        window.history.pushState(null, '', document.URL);\r\n        callback();\r\n      }, false);\r\n    } else {\r\n      // Fix browser history\r\n      window.history.pushState(null, '', document.URL);\r\n    }\r\n  }, [callback]);\r\n}","import { TokenSymbol } from 'shared/models';\r\n\r\nexport const total = (\r\n  amounts: Record<TokenSymbol, number>, \r\n  rates: Record<TokenSymbol, number>,\r\n  filter?: TokenSymbol, \r\n): number => {\r\n    let total = 0;\r\n\r\n    for (let symbol in amounts) {\r\n      if (amounts.hasOwnProperty(symbol) && rates.hasOwnProperty(symbol)) {\r\n        if (filter && filter !== symbol) {\r\n          continue;\r\n        }\r\n\r\n        total += amounts[symbol] * rates[symbol];\r\n      }\r\n    }\r\n\r\n    return total;\r\n}","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport './TokenRow.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\nimport { IconOption } from 'shared/components/Icon/IconOption';\r\nimport { Token } from 'shared/models/token';\r\nimport { Icon } from 'shared/components/Icon/Icon';\r\n\r\nexport const componentId = 'TokenRow';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport interface TokenRowProps {\r\n  amount: number;\r\n  onSelectToken: (token: Token) => void;\r\n  rate: number;\r\n  token: Token;\r\n}\r\n\r\nexport const TokenRow: React.FC<TokenRowProps> = ({ amount = 0, token, rate, onSelectToken }) => {\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()} onClick={() => onSelectToken(token)}>\r\n      <div className={css('Rates')}>\r\n        <Icon icon={token.symbol as IconOption} />\r\n        \r\n        <span className={css('Name')}>{token.name}</span>\r\n\r\n        <NumberFormat\r\n          className={css('Rate')}\r\n          data-testid={test('Rate')}\r\n          value={rate}\r\n          displayType={'text'}\r\n          thousandSeparator={true}\r\n          suffix={' $'}\r\n          decimalScale={2}\r\n        />\r\n      </div>\r\n\r\n      <div className={css('Amounts')}>\r\n        <NumberFormat\r\n          className={css('TokenAmount')}\r\n          data-testid={test('TokenAmount')}\r\n          value={amount}\r\n          displayType={'text'}\r\n          thousandSeparator={true}\r\n          suffix={' ' + token.symbol}\r\n          decimalScale={6}\r\n        />\r\n\r\n        <NumberFormat\r\n          className={css('FiatAmount')}\r\n          data-testid={test('FiatAmount')}\r\n          value={amount * rate}\r\n          displayType={'text'}\r\n          thousandSeparator={true}\r\n          suffix={' $'}\r\n          decimalScale={2}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\n\r\nimport './Balance.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\nimport { Token, TokenSymbol } from 'shared/models/token';\r\n\r\nimport { TokenRow } from 'wallet/components/TokenRow/TokenRow';\r\n\r\nexport const componentId = 'Balance';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport interface BalanceProps {\r\n  amounts: Record<TokenSymbol, number>;\r\n  onSelectToken: (token: Token) => void;\r\n  rates: Record<string, number>;\r\n  tokens: string[];\r\n  tokensRecord: Record<string, Token>\r\n}\r\n\r\nexport const Balance: React.FC<BalanceProps> = ({ amounts, rates, tokens, tokensRecord, onSelectToken }) => {\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      {tokens.map((tokenSymbol, index) =>\r\n        <TokenRow\r\n          onSelectToken={onSelectToken}\r\n          amount={amounts[tokenSymbol]}\r\n          token={tokensRecord[tokenSymbol]}\r\n          rate={rates[tokenSymbol]}\r\n          key={index}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nimport './Receive.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\nimport { Token } from 'shared/models';\r\n\r\nexport const componentId = 'Receive';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport type ReceiveProps = { \r\n  address: string\r\n  rate: number\r\n  token: Token\r\n}\r\n\r\nexport const Receive: React.FC<ReceiveProps> = ({address, rate, token}) => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const QRCode = require('qrcode.react');\r\n  const handleCodeClick = (): void => {\r\n    navigator.clipboard.writeText(address).then(() => {\r\n      enqueueSnackbar('Address copied to the clipboard', { variant: 'success' });\r\n    }, (err) => {\r\n      enqueueSnackbar(`Can't access clipboard`, { variant: 'error' });\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      <div className={css('Title')}> \r\n        Receive {token.symbol}\r\n      </div>\r\n\r\n      <Tooltip title={address} placement=\"bottom\">\r\n        <div className={css('Code')} onClick={handleCodeClick}>\r\n            <QRCode value={address}/>\r\n        </div>\r\n      </Tooltip>\r\n    </div>\r\n  )\r\n}; ","import { isEthereumAddress } from 'shared/helpers/validators/eth.validator';\r\nimport { TokenSymbol } from 'shared/models';\r\n\r\nexport const validateAddress = (address: string, symbol: TokenSymbol): boolean | undefined => {\r\n  let result;\r\n  const supportedSymbols = ['ETH', 'WAWES', 'NEAR'];\r\n  \r\n  if (!supportedSymbols.includes(symbol)) {\r\n    return undefined;\r\n  }\r\n\r\n  switch (symbol) {\r\n    case 'ETH':\r\n      result = isEthereumAddress(address);\r\n      break;\r\n    \r\n    case 'WAVES':\r\n      result = true;\r\n      break;\r\n\r\n    case 'NEAR': \r\n      result = true;\r\n      break;\r\n  }\r\n  \r\n  return result;\r\n};\r\n","import jsSHA from 'jssha';\r\n\r\n/**\r\n * Checks if the given string is an address\r\n *\r\n * @method isAddress\r\n * @param {String} address the given HEX adress\r\n * @return {Boolean}\r\n*/\r\nexport const isEthereumAddress = function (address: string) {\r\n  if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\r\n      // check if it has the basic requirements of an address\r\n      return false;\r\n  } else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {\r\n      // If it's all small caps or all all caps, return true\r\n      return true;\r\n  } else {\r\n      // hardcoded for test tetworks\r\n      return /^(0x)?[0-9a-fA-F]{40}$/.test(address)\r\n      // Otherwise check each case\r\n      // return isChecksumAddress(address);\r\n  }\r\n};\r\n\r\n/**\r\n* Checks if the given string is a checksummed address\r\n*\r\n* @method isChecksumAddress\r\n* @param {String} address the given HEX adress\r\n* @return {Boolean}\r\n*/\r\nconst isChecksumAddress = function (address: string) {\r\n  let addressHash: string;\r\n  const shaObj = new jsSHA('SHA-512', \"TEXT\", { encoding: \"UTF8\" });\r\n  \r\n  address = address.replace('0x','');\r\n  shaObj.update(address.toLowerCase());\r\n  addressHash = shaObj.getHash('HEX');\r\n\r\n  for (var i = 0; i < 40; i++ ) {\r\n      // the nth letter should be uppercase if the nth digit of casemap is 1\r\n      if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) || (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\r\n          return false;\r\n      }\r\n  }\r\n  return true;\r\n};","import { Button, TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport NumberFormat from 'react-number-format';\r\nimport { cn } from '@bem-react/classname';\r\n\r\nimport './Send.scss';\r\n\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\nimport { validateAddress } from 'shared/helpers/addres.helper';\r\n\r\nimport { Wallet } from 'wallet/state/models/wallet';\r\n\r\nexport const componentId = 'Send';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\nexport type SendProps = { \r\n  rate: number\r\n  wallet: Wallet\r\n  onNextClick: (address: string, amount: number) => void\r\n}\r\n\r\nexport const Send: React.FC<SendProps> = ({rate, wallet, onNextClick}) => {\r\n  const [address, setAddress] = useState('');\r\n  const [amount, setAmount] = useState(0);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleAddressChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAddress(event.target.value);\r\n  }\r\n\r\n  const handleAddressPaste = async (event: React.MouseEvent) => {\r\n    const text = await navigator.clipboard.readText();\r\n    \r\n    if (validateAddress(text, wallet.token.symbol)) {\r\n      setAddress(text);\r\n      enqueueSnackbar('Address added from the clipboard', { variant: 'success' });\r\n    } else {\r\n      enqueueSnackbar('Clipboard contains bad address', { variant: 'error' });\r\n    }\r\n  }\r\n\r\n  const handleAmountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAmount(Number(event.target.value) || 0);\r\n  }\r\n\r\n  const handleAmountMaximise = (event: React.MouseEvent) => {\r\n    setAmount(wallet.amount);\r\n  }\r\n\r\n  return (\r\n    <div className={css()} data-testid={test()}>\r\n      <div className={css('Title')}> \r\n        Send {wallet.token.symbol}\r\n      </div>\r\n\r\n      <form className={css('Inputs')} noValidate autoComplete=\"off\">\r\n        <TextField \r\n          className={css('AddressInput')} \r\n          id=\"address\" \r\n          label=\"Address\" \r\n          value={address} \r\n          onChange={handleAddressChange}\r\n        />\r\n        \r\n        <span \r\n          className={css('AddressInputPaste')} \r\n          onClick={handleAddressPaste}\r\n        >\r\n            Paste\r\n        </span>\r\n\r\n        <TextField \r\n          className={css('AmountInput')} \r\n          id=\"amount\" \r\n          label=\"Token amount\" \r\n          value={amount} \r\n          onChange={handleAmountChange}\r\n        />\r\n\r\n        <span \r\n          className={css('AmountInputMax')} \r\n          onClick={handleAmountMaximise}\r\n        >\r\n          Max\r\n        </span>\r\n      \r\n        <NumberFormat\r\n          className={css('FiatAmount')}\r\n          data-testid={test('FiatAmount')}\r\n          value={amount*rate}\r\n          displayType={'text'}\r\n          thousandSeparator={true}\r\n          prefix={'(= '}\r\n          suffix={' $)'}\r\n          decimalScale={2}\r\n        />\r\n      </form>\r\n\r\n      <div className={css('Next')}>\r\n        <Button \r\n          className={css('NextButton')} \r\n          data-testid={test('Next')}\r\n          onClick={() => onNextClick(address, amount)}\r\n          color=\"primary\"\r\n          disabled={!(address&&amount)}\r\n          disableElevation={!(address&&amount)}\r\n          variant=\"contained\"\r\n        >\r\n          Next\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n};      ","import { AppBar, Toolbar, IconButton, SwipeableDrawer, Badge, List, ListItem, ListItemIcon, ListItemText, makeStyles, Tooltip } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AttachMoneyOutlinedIcon from '@material-ui/icons/AttachMoneyOutlined';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport BuildOutlinedIcon from '@material-ui/icons/BuildOutlined';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport { useSnackbar } from 'notistack';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { cn } from '@bem-react/classname';\r\n\r\nimport logo from 'assets/images/logo1.svg';\r\nimport { Token } from 'shared/models/token';\r\nimport { HelpPage } from 'shared/components/HelpPage/HelpPage';\r\nimport { AboutPage } from 'shared/components/AboutPage/AboutPage';\r\nimport { testIdBuilder } from 'shared/helpers/test/test-id-builder.helper';\r\n\r\nimport { getActiveToken, getActiveView, getSupportedTokens, getSupportedTokensRecord, getUsdRates, getAmounts, getWalletsForActiveToken, getActiveWallet, getSendData, getSeed } from 'wallet/state/wallet.selectors';\r\nimport { Wallets, WalletsHandlers } from 'wallet/components/Wallets/Wallets';\r\nimport { SendConfirmation } from 'wallet/components/SendConfirmation/SendConfirmation';\r\nimport { WalletHeaderMode } from \"wallet/components/WalletHeader/WalletHeaderMode\";\r\nimport { walletActions } from 'wallet/state/wallet.actions';\r\nimport { WalletHeader } from 'wallet/components/WalletHeader/WalletHeader';\r\nimport { total } from 'wallet/state/helpers/total.helper';\r\nimport { WalletView } from 'wallet/state/models/wallet-view';\r\nimport { Balance } from 'wallet/components/Balance/Balance';\r\nimport { Receive } from 'wallet/components/Receive/Receive';\r\nimport { Wallet } from 'wallet/state/models/wallet';\r\nimport { Send } from 'wallet/components/Send/Send';\r\n\r\nexport const componentId = 'WalletPage';\r\n\r\nconst css = cn(componentId);\r\nconst test = testIdBuilder(componentId);\r\n\r\ninterface WalletPageProps { }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: 'white',\r\n    flexGrow: 1,\r\n    flexDirection: 'column',\r\n    display: 'flex',\r\n    height: '100vh',\r\n    minWidth: '350px',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  toolbar: {\r\n    alignItems: 'flex-start',\r\n    flexDirection: 'column',\r\n    paddingTop: theme.spacing(1),\r\n    minHeight: 160,\r\n    paddingBottom: '0',\r\n  },\r\n  toolbarHeader: {\r\n    display: 'flex',\r\n    borderBottom: `${theme.palette.grey[600]} 1px solid`,\r\n    width: '100%',\r\n  },\r\n  toolbarHeaderItems: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    justifyContent: 'flex-end',\r\n    marginRight: '-15px',\r\n  },  \r\n  toolbarHeaderItemsEdgeStart: {\r\n    marginLeft: '-15px',\r\n  },\r\n  toolbarBody: {\r\n    margin: 'auto',\r\n    position: 'relative',\r\n    width: '100%',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    alignSelf: 'flex-end',\r\n  },\r\n  drower: {},\r\n  drowerItem: {\r\n    paddingRight: '20px',\r\n  },\r\n  drowerItemIcon: {\r\n    color: theme.palette.grey[600],\r\n  },\r\n  drowerItemText: {},\r\n  wrapper: {\r\n    display: 'flex',\r\n    margin: '50px auto',\r\n  },\r\n  footer: {\r\n    backgroundColor: '#020941',\r\n    bottom: 0,\r\n    display: 'flex',\r\n    position: 'fixed',\r\n    height: '70px',\r\n    width: '100%',\r\n  },\r\n  AboutPage: {\r\n    height: '50vh',\r\n  },\r\n  zeroPaddingRight: {\r\n    paddingRight: '0',\r\n  }\r\n}));\r\n\r\nexport const WalletPage: React.FC<WalletPageProps> = () => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [state, setState] = useState({ drower: false });\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const view = useSelector(getActiveView);\r\n  const token = useSelector(getActiveToken);\r\n  const rates = useSelector(getUsdRates);\r\n  const tokens = useSelector(getSupportedTokens);\r\n  const amounts = useSelector(getAmounts) || {};\r\n  const tokensRecord = useSelector(getSupportedTokensRecord);\r\n  const wallet = useSelector(getActiveWallet);\r\n  const wallets = useSelector(getWalletsForActiveToken);\r\n  const send = useSelector(getSendData);\r\n  const seed = useSelector(getSeed);\r\n\r\n  const handleExportSeed = () => {\r\n    navigator.clipboard.writeText(seed || 'No seed set').then(() => {\r\n      enqueueSnackbar('Seed copied to the clipboard', { variant: 'success' });\r\n    }, (err) => {\r\n      enqueueSnackbar(`Can't access clipboard`, { variant: 'error' });\r\n    });\r\n  }\r\n\r\n  const toggleDrawer = (open?: boolean) => (\r\n    event: React.KeyboardEvent | React.MouseEvent,\r\n  ) => {\r\n    if (\r\n      event &&\r\n      event.type === 'keydown' &&\r\n      ((event as React.KeyboardEvent).key === 'Tab' ||\r\n        (event as React.KeyboardEvent).key === 'Shift')\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, drower: open === undefined ? !state.drower : open })\r\n  }\r\n\r\n  const drowerMenu = () => (\r\n    <div\r\n      className={classes.drower}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(false)}\r\n      onKeyDown={toggleDrawer(false)}\r\n    >\r\n      <List>\r\n        {[WalletView.Balance, WalletView.Reset].map((text, index) => (\r\n          <ListItem className={classes.drowerItem} button key={text} onClick={() => dispatch(walletActions.menu(text))}>\r\n            <ListItemIcon className={classes.drowerItemIcon}>\r\n              {[<AttachMoneyOutlinedIcon />, <BuildOutlinedIcon />][index]}\r\n            </ListItemIcon>\r\n            <ListItemText className={classes.drowerItemText} primary={text} />\r\n          </ListItem>\r\n        ))}\r\n        <ListItem className={classes.drowerItem} button onClick={handleExportSeed}>\r\n          <ListItemIcon className={classes.drowerItemIcon}>\r\n            <FileCopyIcon />\r\n          </ListItemIcon>\r\n          <ListItemText className={classes.drowerItemText} primary=\"Export Seed\" />\r\n        </ListItem>\r\n      </List>\r\n\r\n      <Divider />\r\n\r\n      <List>\r\n        {[WalletView.Help, WalletView.About].map((text, index) => (\r\n          <ListItem button key={text} onClick={() => dispatch(walletActions.menu(text))}>\r\n            <ListItemIcon className={css('DrowerMenu-ItemIcon')}>\r\n              {[<InfoOutlinedIcon />, <HelpOutlineIcon />][index]}\r\n            </ListItemIcon>\r\n            <ListItemText className={css('DrowerMenu-ItemText')} primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div >\r\n  );\r\n\r\n  const walletsButtonHandlers: WalletsHandlers = {\r\n    onReceive: (wallet: Wallet) => dispatch(walletActions.openReceiveView(wallet)),\r\n    onSend: (wallet: Wallet) => dispatch(walletActions.openSendInitialView(wallet)),\r\n    onRename: (wallet: Wallet, name: string) => dispatch(walletActions.edit({ wallet, name })),\r\n    onDelete: (wallet: Wallet) => dispatch(walletActions.hideWallet({ wallet })),\r\n    onAdd: () => dispatch(walletActions.addWallet()),\r\n  }\r\n\r\n  const components = () => {\r\n    switch (view) {\r\n      case WalletView.Wallets:\r\n        return token ? <Wallets \r\n          handlers={walletsButtonHandlers}\r\n          rate={rates[token.symbol]}\r\n          token={token} \r\n          wallets={wallets ? Object.values(wallets) : []}\r\n        /> : null;\r\n      case WalletView.Send:\r\n        return wallet && token ? <Send\r\n            rate={rates[token.symbol]}\r\n            wallet={wallet}\r\n            onNextClick={(address, amount) => \r\n              dispatch(walletActions.prepareSendConfirmView({wallet, address, amount}))\r\n            }\r\n          /> : null;\r\n      case WalletView.SendConfirmation:\r\n        return send && token ? <SendConfirmation\r\n          amount={send.amount}\r\n          address={send.address}\r\n          fee={send.fee}\r\n          rate={rates[token.symbol]}\r\n          wallet={send.wallet}\r\n          onConfirmClick={()=> dispatch(walletActions.send())}\r\n        /> : null; \r\n      case WalletView.Receive:\r\n        return wallet && token ? <Receive\r\n          address={wallet.address}\r\n          rate={rates[wallet.token.symbol]}\r\n          token={token}\r\n        /> : null;\r\n      case WalletView.About:\r\n        return <AboutPage showBackButton={false} />\r\n      case WalletView.Help:\r\n        return <HelpPage />\r\n      default:\r\n        return <Balance\r\n          amounts={amounts}\r\n          onSelectToken={(token: Token) => dispatch(walletActions.openWalletsView(token))}\r\n          rates={rates}\r\n          tokens={tokens.map(i => i.symbol)}\r\n          tokensRecord={tokensRecord} \r\n        />\r\n    }\r\n  }\r\n\r\n  const walletHeaderMode = [WalletView.Help, WalletView.About].includes(view) ? \r\n    WalletHeaderMode.Info : WalletHeaderMode.Balance;\r\n\r\n  const walletHeaderLabels: Record<WalletView, string> = {\r\n    [WalletView.Balance]: 'Overall balance',\r\n    [WalletView.Wallets]: `${token?.name} wallets`,\r\n    [WalletView.Receive]: `${wallet?.name}`,\r\n    [WalletView.Send]: `${wallet?.name}`,\r\n    [WalletView.SendConfirmation]: `${wallet?.name}`,\r\n    [WalletView.Log]: 'x12345',\r\n    [WalletView.About]: 'About',\r\n    [WalletView.Help]: 'Help',\r\n    [WalletView.Reset]: '',\r\n  };\r\n  \r\n  useEffect(() => {\r\n    dispatch(walletActions.openBalanceView());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className={css('', [classes.root])} data-testid={test()} id={componentId}>\r\n      <AppBar position=\"static\" className={css('AppBar')}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <div className={classes.toolbarHeader}>\r\n            <IconButton\r\n              classes={{edgeStart: classes.toolbarHeaderItemsEdgeStart}}\r\n              onClick={toggleDrawer()}\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              edge=\"start\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n\r\n            <div className={classes.toolbarHeaderItems}>\r\n              <Tooltip title=\"No new messages\" placement=\"bottom\">\r\n                <IconButton \r\n                  color=\"inherit\"\r\n                  className={classes.zeroPaddingRight}\r\n                >\r\n                  <Badge badgeContent={0} color=\"secondary\">\r\n                    <NotificationsIcon />\r\n                  </Badge>\r\n                </IconButton>\r\n              </Tooltip>\r\n\r\n              <Tooltip title=\"Update balances\" placement=\"bottom\">\r\n                <IconButton \r\n                  color=\"inherit\" \r\n                  onClick={() => dispatch(walletActions.updateWallets())}\r\n                >\r\n                  <RefreshIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={classes.toolbarBody}>\r\n            <WalletHeader\r\n              mode={walletHeaderMode}\r\n              label={walletHeaderLabels[view]}\r\n              hideBackButton={view === WalletView.Balance}\r\n              fiatValue={walletHeaderMode === WalletHeaderMode.Info ? undefined : total(amounts, rates, token?.symbol)}\r\n              tokenAmount={token ? amounts[token.symbol] : undefined}\r\n              tokenSymbol={token?.symbol}\r\n              tokenName={token?.name}\r\n              onBackClick={() => dispatch(walletActions.headerBack())}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <div className={css('Wrapper', [classes.wrapper])}>\r\n        {components()}\r\n      </div>\r\n\r\n      <div className={css('Footer', [classes.footer])}>\r\n        <img src={logo} alt=\"ZeroPool\" style={{margin:'auto'}} />\r\n      </div>\r\n\r\n      <SwipeableDrawer\r\n        open={state['drower']}\r\n        onClose={toggleDrawer(false)}\r\n        onOpen={toggleDrawer(true)}\r\n      >\r\n        {drowerMenu()}\r\n      </SwipeableDrawer>\r\n    </div>\r\n  )\r\n};\r\n","import { createMuiTheme } from '@material-ui/core/styles'\r\n\r\nconst COLOR_PRIMARY = '#020941';\r\nconst COLOR_BLUE_PRIMARY = '#2699fb';\r\nconst COLOR_BLUE_SECCONDARY = '#84c6ff';\r\n// const COLOR_BLUE_LIGHT = '#c4e1fa';\r\nconst WHITE = 'white';\r\nconst GREEN = '#4be3fa';\r\nconst INPUT_UNDERLINE_COLOR = COLOR_BLUE_SECCONDARY;\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    action: {\r\n      disabledBackground: COLOR_BLUE_SECCONDARY,\r\n      disabled: 'set color of text here',\r\n    },\r\n    primary: {\r\n      main: COLOR_PRIMARY,\r\n    }\r\n  },\r\n\r\n  overrides: {\r\n    MuiAppBar: {\r\n      colorPrimary: {\r\n        backgroundColor: COLOR_PRIMARY,\r\n      }\r\n    },\r\n\r\n    MuiButton: {\r\n      root: {\r\n        fontSize: '1rem',\r\n        fontFamily: '\"Exo 2\", \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n        margin: '5px',\r\n      },\r\n      outlinedPrimary: {\r\n        backgroundColor: COLOR_PRIMARY,\r\n        border: `solid 2px ${COLOR_BLUE_PRIMARY}`,\r\n        color: WHITE,\r\n        \"&:hover\": {\r\n          backgroundColor: COLOR_PRIMARY,\r\n          border: `solid 2px ${COLOR_BLUE_SECCONDARY}`,\r\n        }\r\n      },\r\n      containedPrimary: {\r\n        // backgroundColor: 'linear-gradient(90deg, rgba(132,198,255,1) 10%, rgba(38,153,251,1) 100%)',\r\n        backgroundColor: COLOR_BLUE_PRIMARY,\r\n        color: WHITE,\r\n        \"&:hover\": {\r\n          backgroundColor: COLOR_BLUE_SECCONDARY,\r\n        }\r\n      },\r\n    },\r\n\r\n    MuiLinearProgress: {\r\n      barColorPrimary: {\r\n        backgroundColor: GREEN,\r\n      },\r\n      colorPrimary: {\r\n        backgroundColor: COLOR_PRIMARY,\r\n      }\r\n    },\r\n  \r\n    MuiDialog: {\r\n      root: {\r\n        minWidth: '350px',\r\n      }\r\n    },\r\n\r\n    MuiInputLabel: {\r\n    },\r\n\r\n    MuiInput: {\r\n      colorSecondary: {\r\n        color: WHITE,\r\n      },\r\n\r\n      underline: {\r\n        borderBottomColor: INPUT_UNDERLINE_COLOR,\r\n\r\n        '&:not($disabled):after': {\r\n          borderBottomColor: INPUT_UNDERLINE_COLOR,\r\n        },\r\n\r\n        '&:hover:not($disabled):after': {\r\n          borderBottomColor: INPUT_UNDERLINE_COLOR,\r\n        },\r\n\r\n        '&:not($disabled):before': {\r\n          borderBottomColor: INPUT_UNDERLINE_COLOR,\r\n        },\r\n\r\n        '&:hover:not($disabled):before': {\r\n          borderBottomColor: INPUT_UNDERLINE_COLOR,\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport { Router, Route, Redirect, Switch } from 'react-router-dom';\r\n\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { SnackbarUtilsConfigurator } from 'shared/helpers/toast.helper';\r\nimport { http, setupInterceptors } from 'shared/http/http';\r\nimport { LoadingBar } from 'shared/loading-bar/containers/loading-bar/loading-bar.component';\r\nimport { AboutPage } from 'shared/components/AboutPage/AboutPage';\r\nimport { timeout } from 'shared/util/timeout';\r\n\r\nimport { store, history, persistedStore } from 'state';\r\nimport { CreateAccountPage } from 'register/containers/CreateAccount/CreateAccountPage';\r\nimport { WalletPage } from 'wallet/containers/WalletPage/WalletPage';\r\nimport { theme } from 'theme';\r\n\r\nsetupInterceptors(http(), store);\r\n\r\nasync function start() {\r\n  await timeout(1000);\r\n\r\n  ReactDOM.render(\r\n    <ThemeProvider theme={theme}>\r\n      <SnackbarProvider maxSnack={5} anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}>\r\n        {/* <React.StrictMode> */}\r\n          <Provider store={store}>\r\n            <PersistGate loading={null} persistor={persistedStore}>\r\n              <ConnectedRouter history={history}>\r\n                <Router history={history}>\r\n                  <Switch>\r\n                    <Route path=\"/welcome\" exact component={CreateAccountPage} />\r\n                    <Route path=\"/about\" exact component={AboutPage} />\r\n                    <Route path=\"/wallet\" exact component={WalletPage} />\r\n                    <Route><Redirect to=\"/welcome\" /></Route>\r\n                  </Switch>\r\n                </Router>\r\n              </ConnectedRouter>\r\n              <LoadingBar />\r\n            </PersistGate>\r\n          </Provider>\r\n        {/* </React.StrictMode> */}\r\n        <SnackbarUtilsConfigurator />\r\n      </SnackbarProvider>\r\n    </ThemeProvider>,\r\n    document.getElementById('root')\r\n  );\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\nstart();\r\n","import { AxiosRequestConfig, AxiosResponse, AxiosError } from 'axios';\r\nimport { Store } from 'redux';\r\n\r\nimport { RootState } from 'state';\r\nimport { RequestConfig } from 'shared/http/http';\r\nimport { loadingBarActions } from 'shared/loading-bar/state/loading-bar.actions';\r\n\r\nexport const loadingBarRequestInterceptor = (store: Store<RootState>) => (\r\n  request: AxiosRequestConfig,\r\n): AxiosRequestConfig => {\r\n  const { context } = request as RequestConfig;\r\n  const noBar = !!context?.noLoadingBar;\r\n\r\n  if (!noBar) {\r\n    store.dispatch(loadingBarActions.addRequest());\r\n  }\r\n\r\n  return request;\r\n};\r\n\r\nexport const loadingBarResponseInterceptor = (store: Store<RootState>) => (\r\n  response: AxiosResponse,\r\n): AxiosResponse => {\r\n  const { context } = response.config as RequestConfig;\r\n  const noBar = !!context?.noLoadingBar;\r\n\r\n  if (!noBar) {\r\n    store.dispatch(loadingBarActions.removeRequest());\r\n  }\r\n\r\n  return response;\r\n};\r\n\r\nexport const loadingBarErrorResponseInterceptor = (store: Store<RootState>) => (\r\n  error: AxiosError,\r\n): unknown => {\r\n  const context = (error.config as RequestConfig)?.context;\r\n  const noBar = !!context?.noLoadingBar;\r\n\r\n  if (!noBar) {\r\n    store.dispatch(loadingBarActions.removeRequest());\r\n  }\r\n\r\n  throw error;\r\n};\r\n","import { AxiosRequestConfig } from 'axios';\r\nimport { Store } from 'redux';\r\n\r\nimport { RequestConfig } from 'shared/http/http';\r\nimport { RootState } from 'state';\r\nimport { Provider } from 'shared/models/provider';\r\n\r\nimport providers from 'assets/settings/providers.json';\r\n\r\nexport const authInterceptor = (store: Store<RootState>) => (\r\n  request: AxiosRequestConfig,\r\n): AxiosRequestConfig => {\r\n  const { context } = request as RequestConfig;\r\n\r\n  if (!context?.provider) {\r\n    return request;\r\n  }\r\n\r\n  const authHeaders: Record<string, string>[] = [];\r\n  const provider: { authHeader: string, authValue: string } = providers[Provider[context.provider]];\r\n\r\n  authHeaders[provider.authHeader] = provider.authValue;\r\n  debugger;\r\n  return {\r\n    ...request,\r\n    headers: {\r\n      ...request.headers,\r\n      ...authHeaders,\r\n    },\r\n  };\r\n};\r\n"],"sourceRoot":""}